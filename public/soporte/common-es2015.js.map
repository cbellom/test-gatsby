{"version":3,"sources":["./src/app/modulos/dashboard/modelo/enums/EstadosTarea.enum.ts","./src/app/modulos/dashboard/servicios/dashboard.service.ts","./src/app/shared/modelos/enums/paisAmbiente.enum.ts","./src/app/modulos/dashboard/modelo/enums/TipoTarea.enum.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA,IAAY,WAKX;AALD,WAAY,WAAW;IACrB,yDAAc;IACd,uDAAa;IACb,yDAAc;IACd,2DAAe;AACjB,CAAC,EALW,WAAW,KAAX,WAAW,QAKtB;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAee;;;;AAcnD,MAAM,gBAAgB;IAC3B,YAAoB,GAAe,EAAU,SAAuB;QAAhD,QAAG,GAAH,GAAG,CAAY;QAAU,cAAS,GAAT,SAAS,CAAc;IAAG,CAAC;IAExE,mBAAmB,CAAC,OAAO;QACzB,OAAO,+EAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,gCAAgC,CAC9B,OAAe;QAEf,OAAO,+EAAW,CAChB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,sBAAsB,OAAO,aAAa,CAAC,CACzD,CAAC;IACJ,CAAC;IAED,8BAA8B,CAAC,OAAe;QAC5C,OAAO,+EAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,sBAAsB,OAAO,SAAS,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,qCAAqC,CACnC,IAAsC;QAEtC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,+CAA+C,CAC7C,IAAgD;QAEhD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IAED,wBAAwB,CACtB,MAAmB,EACnB,MAAc,EACd,KAAa,EACb,OAAe,EACf,KAAa;QAEb,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE;YAC3B,MAAM,EAAE,MAAM,CAAC,QAAQ,EAAE;YACzB,MAAM;YACN,KAAK;YACL,QAAQ,EAAE,OAAO;YACjB,KAAK;SACN,CAAC,CAAC;IACL,CAAC;IAED,0BAA0B;QACxB,OAAO,+EAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,kBAAkB,CAChB,WAAmB,EACnB,cAAsB;QAEtB,OAAO,+EAAW,CAChB,IAAI,CAAC,GAAG;aACL,OAAO,CACN,aAAa,WAAW,EAAE,EAC1B,EAAE,EACF;YACE,MAAM,EAAE,sCAAsC;SAC/C,CACF;aACA,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAClB,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;QAC3D,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,yBAAyB,CAAC,oBAA4B;QACpD,OAAO,+EAAW,CAChB,IAAI,CAAC,GAAG;aACL,OAAO,CACN,kCAAkC,oBAAoB,YAAY,EAClE,EAAE,EACF;YACE,MAAM,EAAE,sCAAsC;SAC/C,CACF;aACA,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAClB,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;QAClE,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,oBAAoB,CAAC,WAAmB;QACtC,OAAO,+EAAW,CAChB,IAAI,CAAC,GAAG;aACL,OAAO,CACN,aAAa,WAAW,EAAE,EAC1B,EAAE,EACF;YACE,MAAM,EAAE,sCAAsC;SAC/C,CACF;aACA,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAClB,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YAClD,MAAM,OAAO,GAAQ,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;YAChE,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAClD,OAAO,CAAC,qCAAqC,CAC9C,CAAC;QACJ,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,wBAAwB,CAAC,SAAS,EAAE,cAAc;QAChD,MAAM,cAAc,GAAQ,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACxD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC1C,cAAc,CAAC,KAAK,GAAG,eAAe,CAAC;QACvC,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAClD,MAAM,OAAO,GAAQ,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;QAChE,cAAc,CAAC,IAAI,GAAG,OAAO,CAAC,qCAAqC,CAAC;QACpE,cAAc,CAAC,QAAQ,GAAG,cAAc,CAAC;QACzC,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,2BAA2B,CAAC,WAAmB;QAC7C,OAAO,+EAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,kBAAkB,WAAW,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,2BAA2B,CACzB,IAAwC;QAExC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,sBAAsB,CAAC,IAA6B;QAClD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,uBAAuB,CAAC,IAA6B;QACnD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,+BAA+B,CAAC,SAAiB;QAC/C,OAAO,+EAAW,CAChB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,qBAAqB,SAAS,iBAAiB,CAAC,CAC9D,CAAC;IACJ,CAAC;IAED,sBAAsB,CACpB,IAAY,EACZ,OAAgB;QAEhB,MAAM,WAAW,GAAQ,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACpD,OAAO,+EAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,qBAAqB,IAAI,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,oBAAoB;QAClB,OAAO,+EAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,gCAAgC,CAC9B,OAAe;QAEf,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,0BAA0B,OAAO,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,kBAAkB,CAAC,SAAiB;QAClC,OAAO,+EAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,sBAAsB,SAAS,EAAE,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,uBAAuB,CAAC,IAA6B;QACnD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,SAAS,CAAC,IAAuB;QAC/B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,qBAAqB,CACnB,YAAoB,EACpB,OAAkB;QAElB,IAAI,WAAW,GACb,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACtE,WAAW,GAAG,YAAY;YACxB,CAAC,iCAAM,WAAW,KAAE,OAAO,EAAE,YAAY,IACzC,CAAC,CAAC,WAAW,CAAC;QAChB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;IACxD,CAAC;IAED,iBAAiB,CACf,IAA0B;QAE1B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;;gFA5LU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AC5BD;AAAA;AAAA,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,yBAAS;IACT,yBAAS;AACX,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB;;;;;;;;;;;;;ACHD;AAAA;AAAA,IAAY,SAiBX;AAjBD,WAAY,SAAS;IACnB,wDAAgB;IAChB,iEAAoB;IACpB,6EAA0B;IAC1B,iGAAoC;IACpC,iGAAoC;IACpC,6EAA0B;IAC1B,2EAAyB;IACzB,yEAAwB;IACxB,uEAAuB;IACvB,iGAAoC;IACpC,gGAAoC;IACpC,8FAAmC;IACnC,0FAAiC;IACjC,oFAA8B;IAC9B,8EAA2B;IAC3B,qFAA+B;AACjC,CAAC,EAjBW,SAAS,KAAT,SAAS,QAiBpB","file":"common-es2015.js","sourcesContent":["export enum EstadoTarea {\n  NO_VISIBLE = 0,\n  PENDIENTE = 1,\n  FINALIZADA = 2,\n  REINTENTADA = 3,\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { EstadoTarea } from '../modelo/enums/EstadosTarea.enum';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ITareasPaginadas } from '@app/modulos/dashboard/modelo/interfaces/ITareasPaginadas.type';\nimport { IRegistarDatosEmpresaMexicoRequest } from '@app/modulos/dashboard/modelo/interfaces/IRegistarDatosEmpresaMexicoRequest.type';\nimport { IFinalizarTareaDocumentalRequest } from '@app/modulos/dashboard/modelo/interfaces/IFinalizarTareaDocumentalRequest.type';\nimport { IFinalizarTareaGenerica } from '@app/modulos/dashboard/modelo/interfaces/IFinalizarTareaGenerica.type';\nimport { ITareaDocumental } from '@app/modulos/dashboard/modelo/interfaces/ITareaDocumental';\nimport { IFinalizarTareaRevisionListasNegrasRequest } from '@app/modulos/dashboard/modelo/interfaces/IFinalizarTareaRevisionListasNegrasRequest.type';\nimport { IListaTareasGenericas } from '@app/modulos/dashboard/modelo/interfaces/IListaTareaGenerica.type';\nimport { IListaTiposTareas } from '@app/modulos/dashboard/modelo/interfaces/IListaTiposTareas.type';\nimport { ApiService } from '@core/servicios/api.service';\nimport { ITareaRevisionDocumento } from '@dashboard/modelo/interfaces/ITareaRevisionDocumento.type';\nimport { fromPromise } from 'rxjs/internal-compatibility';\nimport {\n  IPayloadBloquearUsuario,\n  IPayloadDarDeBaja,\n} from '@dashboard/ahorrador/modelo/bloquear-ahorrador.interface';\nimport {\n  GenerarIncentivosDTO,\n  IncentivosGeneradosDTO,\n  InvitacionesDTO,\n} from '@dashboard/modelo/interfaces/Incentivos';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService {\n  constructor(private api: ApiService, private sanitizer: DomSanitizer) {}\n\n  consultarTareaPorId(idTarea): Observable<any> {\n    return fromPromise(this.api.get(`tarea/${idTarea}`));\n  }\n\n  consultarTareasDocumentalesPorId(\n    idTarea: number\n  ): Observable<ITareaDocumental> {\n    return fromPromise(\n      this.api.get(`tarea/documentales/${idTarea}/documentos`)\n    );\n  }\n\n  consultarEstadoTareaDocumental(idTarea: number): Observable<any> {\n    return fromPromise(this.api.get(`tarea/documentales/${idTarea}/estado`));\n  }\n\n  enviarComandoFinalizarTareaDocumental(\n    data: IFinalizarTareaDocumentalRequest\n  ): Promise<any> {\n    return this.api.post(`tarea/finalizar_tarea_documental`, data);\n  }\n\n  enviarComandoFinalizarTareaRevisionListasNegras(\n    data: IFinalizarTareaRevisionListasNegrasRequest\n  ): Promise<any> {\n    return this.api.post(`tarea/finalizar_tarea_empleado_bloqueado`, data);\n  }\n\n  consultarTareasPorEstado(\n    estado: EstadoTarea,\n    offset: number,\n    limit: number,\n    orderBy: string,\n    order: string\n  ): Promise<ITareasPaginadas> {\n    return this.api.get('tarea', {\n      estado: estado.toString(),\n      offset,\n      limit,\n      order_by: orderBy,\n      order,\n    });\n  }\n\n  consultarListaTiposRechazo(): Observable<any> {\n    return fromPromise(this.api.get(`tarea/documentales/tipo_rechazo`));\n  }\n\n  descargarDocumento(\n    idDocumento: string,\n    nombreDescarga: string\n  ): Observable<any> {\n    return fromPromise(\n      this.api\n        .getBlob(\n          `documento/${idDocumento}`,\n          {},\n          {\n            Accept: 'image/png,image/jpeg,application/pdf',\n          }\n        )\n        .then((respuesta) => {\n          this.ejecutarDescargarDirecta(respuesta, nombreDescarga);\n        })\n    );\n  }\n\n  descargarConstanciaFiscal(uuidConstanciaFiscal: string) {\n    return fromPromise(\n      this.api\n        .getBlob(\n          `documento/constancias_fiscales/${uuidConstanciaFiscal}/documento`,\n          {},\n          {\n            Accept: 'image/png,image/jpeg,application/pdf',\n          }\n        )\n        .then((respuesta) => {\n          this.ejecutarDescargarDirecta(respuesta, 'constancia-fiscales');\n        })\n    );\n  }\n\n  previsualizarArchivo(idDocumento: string): Observable<any> {\n    return fromPromise(\n      this.api\n        .getBlob(\n          `documento/${idDocumento}`,\n          {},\n          {\n            Accept: 'image/png,image/jpeg,application/pdf',\n          }\n        )\n        .then((respuesta) => {\n          const url = window.URL.createObjectURL(respuesta);\n          const safeURL: any = this.sanitizer.bypassSecurityTrustUrl(url);\n          return this.sanitizer.bypassSecurityTrustResourceUrl(\n            safeURL.changingThisBreaksApplicationSecurity\n          );\n        })\n    );\n  }\n\n  ejecutarDescargarDirecta(respuesta, nombreDescarga) {\n    const enlaceTemporal: any = document.createElement('a');\n    document.body.appendChild(enlaceTemporal);\n    enlaceTemporal.style = 'display: none';\n    const url = window.URL.createObjectURL(respuesta);\n    const safeURL: any = this.sanitizer.bypassSecurityTrustUrl(url);\n    enlaceTemporal.href = safeURL.changingThisBreaksApplicationSecurity;\n    enlaceTemporal.download = nombreDescarga;\n    enlaceTemporal.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n  consultarDatosEmpresaMexico(uuidEmpresa: string): Observable<any> {\n    return fromPromise(this.api.get(`empresa/mexico/${uuidEmpresa}`));\n  }\n\n  registrarDatosEmpresaMexico(\n    data: IRegistarDatosEmpresaMexicoRequest\n  ): Promise<any> {\n    return this.api.post(`empresa/mexico/registrar_datos`, data);\n  }\n\n  finalizarTareaGenerica(data: IFinalizarTareaGenerica): Promise<any> {\n    return this.api.post(`tarea/finalizar_tarea_generica`, data);\n  }\n\n  reintentarTareaGenerica(data: IFinalizarTareaGenerica): Promise<any> {\n    return this.api.post(`tarea/reintentar_tarea_generica`, data);\n  }\n\n  consultarNombreEmpresaDeUsuario(idUsuario: string): Observable<any> {\n    return fromPromise(\n      this.api.get(`empresa/empleados/${idUsuario}/nombre_empresa`)\n    );\n  }\n\n  consultarTareasPorTipo(\n    tipo: number,\n    periodo?: string\n  ): Observable<IListaTareasGenericas> {\n    const queryParams: any = periodo ? { periodo } : {};\n    return fromPromise(this.api.get(`tarea/tareas/tipo/${tipo}`, queryParams));\n  }\n\n  consultarTiposTareas(): Observable<IListaTiposTareas> {\n    return fromPromise(this.api.get(`tarea/tipos`));\n  }\n\n  consultarTareaRevisionDocumentos(\n    idTarea: number\n  ): Promise<ITareaRevisionDocumento> {\n    return this.api.get(`tarea/documentos/tarea/${idTarea}`);\n  }\n\n  consultarAhorrador(idUsuario: string) {\n    return fromPromise(this.api.get(`ahorro/ahorradores/${idUsuario}`));\n  }\n\n  actualizarEstadoUsuario(data: IPayloadBloquearUsuario): Promise<any> {\n    return this.api.post(`servicio/actualizar_estado_usuario`, data);\n  }\n\n  darDeBaja(data: IPayloadDarDeBaja): Promise<any> {\n    return this.api.post(`servicio/dar_de_baja`, data);\n  }\n\n  consultarInvitaciones(\n    periodoFecha: string,\n    estados?: string[]\n  ): Promise<InvitacionesDTO> {\n    let queryParams: any =\n      estados && estados.length > 0 ? { estados: estados.join(',') } : {};\n    queryParams = periodoFecha\n      ? { ...queryParams, periodo: periodoFecha }\n      : queryParams;\n    return this.api.get(`reto/invitaciones`, queryParams);\n  }\n\n  generarIncentivos(\n    data: GenerarIncentivosDTO\n  ): Promise<IncentivosGeneradosDTO> {\n    return this.api.post(`reto/generar_incentivos`, data);\n  }\n}\n","export enum PaisAmbiente {\n  CO = 'CO',\n  MX = 'MX',\n}\n","export enum TipoTarea {\n  DESCONOCIDO = -1,\n  TAREA_DOCUMENTAL = 1,\n  RECAUDO_NO_IDENTIFIADO = 2,\n  PREVENCION_LAVADO_DINERO_EMPRESA = 3,\n  PREVENCION_LAVADO_DINERO_PERSONA = 4,\n  REVERSION_APORTE_EXTRA = 5,\n  COMPRA_FONDOS_FALLIDA = 6,\n  VENTA_FONDOS_FALLIDA = 7,\n  ALTA_FONDOS_FALLIDA = 8,\n  COMPRA_FONDOS_FALLIDA_DESARROLLO = 9,\n  VENTA_FONDOS_FALLIDA_DESARROLLO = 10,\n  ALTA_FONDOS_FALLIDA_DESARROLLO = 11,\n  REVERSION_FALLIDA_DESARROLLO = 12,\n  CONCILIACION_NO_PROCESADA = 13,\n  REVISION_LISTAS_NEGRAS = 41,\n  TAREA_DOCUMENTAL_GENERICA = 999,\n}\n"],"sourceRoot":"webpack:///"}