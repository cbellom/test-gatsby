{"version":3,"sources":["webpack:///src/app/modulos/dashboard/dashboard.component.ts","webpack:///src/app/modulos/dashboard/dashboard.component.html","webpack:///src/app/modulos/dashboard/componentes/modal-datos-empresa/modal-datos-empresa.component.ts","webpack:///src/app/modulos/dashboard/componentes/modal-datos-empresa/modal-datos-empresa.component.html","webpack:///src/app/modulos/dashboard/dashboard.module.ts","webpack:///src/app/modulos/dashboard/vistas/incentivos/incentivos.component.ts","webpack:///src/app/modulos/dashboard/vistas/incentivos/incentivos.component.html","webpack:///src/app/modulos/dashboard/modelo/enums/Incentivos.enum.ts","webpack:///src/app/modulos/dashboard/modelo/enums/EstadoTareaEmpleadoBloqueado.enum.ts","webpack:///src/app/modulos/dashboard/vistas/tareas/tareas.component.ts","webpack:///src/app/modulos/dashboard/vistas/tareas/tareas.component.html","webpack:///src/app/modulos/dashboard/vistas/tarea-generica/tarea-generica.component.ts","webpack:///src/app/modulos/dashboard/vistas/tarea-generica/tarea-generica.component.html","webpack:///src/app/modulos/dashboard/componentes/header/header.component.ts","webpack:///src/app/modulos/dashboard/componentes/header/header.component.html","webpack:///src/app/modulos/dashboard/componentes/anexos-detalle-documento/anexos-detalle-documento.component.ts","webpack:///src/app/modulos/dashboard/componentes/anexos-detalle-documento/anexos-detalle-documento.component.html","webpack:///src/app/modulos/dashboard/modelo/enums/EstadosDocumento.enum.ts","webpack:///src/app/modulos/dashboard/vistas/tareas-por-tipo/tareas-por-tipo.component.ts","webpack:///src/app/modulos/dashboard/vistas/tareas-por-tipo/tareas-por-tipo.component.html","webpack:///src/app/modulos/dashboard/componentes/menu-izquierdo/menu-izquierdo.component.ts","webpack:///src/app/modulos/dashboard/componentes/menu-izquierdo/menu-izquierdo.component.html","webpack:///src/app/modulos/dashboard/componentes/descargar-documento/descargar-documento.component.ts","webpack:///src/app/modulos/dashboard/componentes/descargar-documento/descargar-documento.component.html","webpack:///src/app/modulos/dashboard/vistas/detalle-tarea/detalle-tarea.component.ts","webpack:///src/app/modulos/dashboard/vistas/detalle-tarea/detalle-tarea.component.html","webpack:///src/app/modulos/dashboard/componentes/ver-archivo/ver-archivo.component.ts","webpack:///src/app/modulos/dashboard/componentes/ver-archivo/ver-archivo.component.html","webpack:///src/app/modulos/dashboard/modelo/enums/TiposDatoEmpresaMexico.enum.ts","webpack:///src/app/modulos/dashboard/componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component.ts","webpack:///src/app/modulos/dashboard/componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component.html","webpack:///src/app/modulos/dashboard/componentes/modal-comentarios/modal-comentarios.component.ts","webpack:///src/app/modulos/dashboard/componentes/modal-comentarios/modal-comentarios.component.html","webpack:///src/app/modulos/dashboard/vistas/tarea-revision-listas-negras/tarea-revision-listas-negras.component.ts","webpack:///src/app/modulos/dashboard/vistas/tarea-revision-listas-negras/tarea-revision-listas-negras.component.html","webpack:///src/app/modulos/dashboard/modelo/enums/TiposDeDescargas.enum.ts","webpack:///src/app/modulos/dashboard/vistas/tarea-documentos/tarea-documentos.component.ts","webpack:///src/app/modulos/dashboard/vistas/tarea-documentos/tarea-documentos.component.html"],"names":["DashboardComponent","store","cookiesService","username$","select","subscribeSideNavChange","sideNav","openedChange","asObservable","subscribe","opened","obtenerEstadoMenu","close","obtenerInformacionCookie","mostarMenu","guardarInformacionCookie","actualizarEstadoMenu","selector","templateUrl","styleUrls","ModalDatosEmpresaComponent","dialogRef","data","tiposDatos","tipo","valor","guardar","routes","path","component","children","pathMatch","canLoad","paises","MX","tipoDescarga","DOCUMENTAL","CONSTANCIA_FISCAL","loadChildren","then","m","AhorradorModule","redirectTo","DashboardModule","forChild","imports","declarations","entryComponents","providers","schemas","IncentivosComponent","router","route","dashboardService","qiipModalService","qiipSpinnerService","pageSizeOptions","columnasVisibles","estadosQueryParams","listaEstados","NUEVA","APLICA_INCENTIVO","NO_APLICA_INCENTIVO","CON_INCENTIVO","VENCIDA","invitaciones","EstadoInvitacion","seleccionarTodosRemitentes","seleccionarTodosInvitados","maxDate","Date","form","periodo","required","initColumnas","consultarIncentivos","value","correoOperador","event","valorDelFiltro","target","filtrar","reiniciarSeleccionTodos","texto","borrarFiltro","dataSource","filter","trim","toLowerCase","paginator","firstPage","valorFiltro","estadosSeleccionados","navigate","relativeTo","queryParams","estado","some","remitenteSeleccionado","invitadoSeleccionado","show","body","obtenerBody","generarIncentivos","respuesta","validarRespuestaIncentivos","reason","console","error","abrirModal","ERROR","hide","palabra","split","map","s","join","toUpperCase","substr","totalRemitente","reduce","previousValue","currentValue","montoRemitente","totalInvitado","incentivos","length","personaDTOS","invitacionDTO","invitacionesTemp","find","value1","idInvitacion","remitente","idPersona","invitado","SUCCESS","concat","valorIncentivo","nombre","params","consultarIncentivosPorEstados","format","log","consultarInvitaciones","mappearInvitacion","initDataSource","sort","invitacionesSeleccionadas","forEach","obtenerIncentivo","idIncentivoRemitente","idRemitente","idIncentivoInvitado","idInvitado","idIncentivo","estadoInvitacion","nombreRemitente","idUsuarioRemitente","idUsuario","contratoRemitente","contrato","nombreInvitado","idUsuarioInvitado","contratoInvitado","montoInvitado","celularInvitado","celular","fechaInvitado","fechaCreacion","remitenteHabilitado","invitadoHabilitado","datosRenderizados","obtenerDatosRenderizados","calularTotalRemitente","datosFiltrado","sortData","filteredData","_pageData","estados","snapshot","consultarPorPeriodo","aplicarFiltro","cargarSeleccionEstado","generarIncentivo","EstadoPersona","EstadoIncentivo","EstadoTareaEmpleadoBloqueado","TareasComponent","datePipe","customModalService","humanizePipe","_length","_pageSize","_pageSizeOptions","_pageIndex","_active","_direction","consultarTareas","nativeElement","pipe","filterValue","tareasFiltradas","tareas","tarea","extraerCriteriosBusqueda","a","b","c","d","e","includes","transform","criticidad","$event","pageIndex","pageSize","direction","active","TAREA_DOCUMENTAL","id","REVISION_LISTAS_NEGRAS","TAREA_DOCUMENTAL_GENERICA","offset","consultarTareasPorEstado","PENDIENTE","tareasPaginadas","cantidad","err","changePage","TareaGenericaComponent","location","dialog","dashboarService","bloquearBoton","EstadoTarea","esReintentable","idTarea","id_tarea","consultarTareaPorId","detalleTarea","colaOriginal","eventoOriginal","obtenerErrorConsulta","mensaje","modal","open","panelClass","afterClosed","comentario","Object","assign","REINTENTADA","reintentarTareaGenerica","finalizarTareaGenerica","mostarModalSuccess","back","mostarModalError","WARNING","HeaderComponent","AnexosDetalleDocumentoComponent","idDocumento","nombreTipoDocumento","descargarDocumento","x","height","width","anexos","nombreDocumento","EstadosDocumento","TareasPorTipoComponent","tareasPorTipo","columnasBase","columnasTarea","columnasTipoTarea","valueChanges","day","isValid","actualizarListaPorTipo","consultarTiposTareas","tipoTareaSeleccionada","tipoTarea","finalizar","seleccionado","finalizarTareasGenericas","reintentarTareasGenericas","promesas","Promise","all","date","isNaN","valueOf","every","seleccionarTodos","deshabilitado","replace","slice","consultarTareasPorTipo","lista","ordenarPorFecha","extraerDatosPorTipoTarea","_this","param$","paramTipoTarea","consulta$","tiposTareas","mappearNombresTipoTares","ordenarPorNombre","toString","bandA","bandB","comparison","parsearStringMayus","columnas","datos","json","eliminarPropiedadesBaseRepetidas","eliminarDatosOrigen","eliminarPropiedadesObjetosYNull","obtenerPropiedadesJsonDatos","tz","zone","bloquearSeleccionPorTipoTarea","columna","cola","keys","esObjeto","undefined","columnasTipo","propiedades","propiedadJson","indexOf","push","obtenerColumnasVisibles","bloquearSeleccion","cargarSeleccionTipoTarea","applyFilter","cerrarTareasSeleccionadas","MenuIzquierdoComponent","PaisAmbiente","pais","envCountry","abrirMenu","DescargarDocumentoComponent","id_documento","descargarArchivo","redirecionarTareas","descargarConstanciaFiscal","DetalleTareaComponent","_location","fb","estadoTarea","estadosDocumento","tiposDato","esperaRespuesta","documentosForm","get","group","documentos","array","rfc","pattern","razonSocial","consultarListaTiposRechazo","tiposRechazo","control","controls","estadoDocumento","consultarEstadoTareaDocumental","consultarTareasDocumentalesPorId","tareaDocumental","documentosBack","uuidEmpresa","obtenerUUIDEmpresa","ultimaVersion","documentoBack","iniciarDocumento","consultarDatosEmpresaMexico","values","patchValue","status","setValue","anexo","fechaCarga","compose","validarEstado","tipoRechazo","procesado","version","validator","validarRechazo","documentosFiltrados","doc","uuidDocumento","esRFC","RegExp","exec","setValidators","updateValueAndValidity","index","item","formularioDatos","valid","docsFiltrados","enviarComandoFinalizarTareaDocumental","registrarDatosEmpresaMexico","RECHAZADO","documentoCtrl","soloLectura","color","APROBADO","nuevoComentario","pendiente","getFormValue","obj","setFormValue","validarEspaciosBlancos","VerArchivoComponent","obtenerDocumento","srcDocumento$","previsualizarArchivo","document","iframe","contentDocument","contentWindow","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","onFrameLoad","TiposDatoEmpresaMexico","ModalComentarioTareaGenericaComponent","cancelar","ModalComentariosComponent","_comentario","TareaRevisionListasNegrasComponent","cargando","aceptaListasNegras","datosEmpleado","nombreEmpresa$","consultarNombreEmpresaDeUsuario","getRawValue","enviarComandoFinalizarTareaRevisionListasNegras","TiposDeDescargas","TareaDocumentosComponent","consultarDatos","consultarTareaRevisionDocumentos","FINALIZADA","documento","finalizarTarea"],"mappings":"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","file":"modulos-dashboard-dashboard-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { CookiesUtilsService } from '@app/shared/servicios/cookies-utils.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  username$: Observable<any>;\n  @ViewChild(MatSidenav, { static: true }) sideNav: MatSidenav;\n\n  constructor(\n    private store: Store<any>,\n    private cookiesService: CookiesUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.username$ = this.store.select('usuario', 'username');\n    this.subscribeSideNavChange();\n  }\n\n  subscribeSideNavChange() {\n    this.sideNav.openedChange.asObservable().subscribe((opened) => {\n      if (!this.obtenerEstadoMenu() && this.sideNav.opened) {\n        this.sideNav.close();\n      }\n    });\n  }\n  obtenerEstadoMenu() {\n    return this.cookiesService.obtenerInformacionCookie('mostrarMenuIzquierdo');\n  }\n\n  actualizarEstadoMenu(mostarMenu) {\n    this.cookiesService.guardarInformacionCookie(\n      'mostrarMenuIzquierdo',\n      mostarMenu\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <img src=\"../assets/images/brand.png\" alt=\"\">\n    <span class=\"example-spacer\"></span>\n    <button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">\n      <mat-icon>account_circle</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <div class=\"menu-content\">\n        <p class=\"user-name\"><strong>{{ username$ | async }}</strong></p>\n        <p>Operador</p>\n        <br>\n        <btn-cerrar-session></btn-cerrar-session>\n      </div>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-sidenav-container>\n  <mat-sidenav #sidenav mode=\"side\" opened=\"true\">\n    <button mat-button class=\"button-toogle-menu\" (click)=\"sidenav.toggle(); actualizarEstadoMenu(sidenav.opened)\"\n            [class.menu-open]=\"sidenav.opened\">\n      <mat-icon *ngIf=\"!sidenav.opened\">menu</mat-icon>\n      <mat-icon *ngIf=\"sidenav.opened\">clear</mat-icon>\n    </button>\n    <app-menu-izquierdo [abrirMenu]=\"sidenav.opened\"></app-menu-izquierdo>\n  </mat-sidenav>\n\n  <mat-sidenav-content [class.full-width-with-collapsed-menu]=\"!sidenav.opened\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TiposDatoEmpresaMexico } from '@app/modulos/dashboard/modelo/enums/TiposDatoEmpresaMexico.enum';\n\n@Component({\n  selector: 'app-modal-datos-empresa',\n  templateUrl: './modal-datos-empresa.component.html',\n  styleUrls: ['./modal-datos-empresa.component.scss'],\n})\nexport class ModalDatosEmpresaComponent implements OnInit {\n  tiposDatos = TiposDatoEmpresaMexico;\n  tipo: TiposDatoEmpresaMexico;\n  valor: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalDatosEmpresaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.tipo = data.tipo;\n    this.valor = data.valor;\n  }\n\n  ngOnInit() {}\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  guardar() {\n    this.dialogRef.close({ tipo: this.tipo, valor: this.valor });\n  }\n}\n","<div class=\"modal-info\">\n  <div class=\"modal-header omega\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"close()\">\n      <mat-icon>clear</mat-icon>\n    </button>\n  </div>\n  <div class=\"modal-body\" *ngIf=\"tipo !== tiposDatos.RAZON_SOCIAL \">\n    <h1>Comentario</h1>\n    <div>\n      <p>Agrega el número del documento correspondiente.</p>\n    </div>\n    <textarea name=\"comentario\" [(ngModel)]=\"valor\"></textarea>\n  </div>\n\n  <div class=\"modal-body\" *ngIf=\"tipo === tiposDatos.RAZON_SOCIAL\">\n    <div class=\"col-md-12\">\n      <h1>Razón social</h1>\n      <div>\n        <p>Agrega la información correspondiente, a continuación</p>\n      </div>\n      <textarea name=\"comentario\" [(ngModel)]=\"valor\"></textarea>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\" >\n    <div class=\"btns-footer\">\n      <button mat-button class=\"mat-button btns-secondary dark-bg\" (click)=\"guardar()\">Enviar</button>\n      <button mat-button class=\"mat-button btns-secondary dark-bg\" (click)=\"close()\">Cancelar</button>\n    </div>\n  </div>\n</div>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { TareasComponent } from './vistas/tareas/tareas.component';\nimport { DetalleTareaComponent } from './vistas/detalle-tarea/detalle-tarea.component';\nimport { MaterialModule } from '@material/material.module';\nimport { ModalComentariosComponent } from './componentes/modal-comentarios/modal-comentarios.component';\nimport { HeaderComponent } from './componentes/header/header.component';\nimport { DashboardService } from './servicios/dashboard.service';\nimport {\n  FormGroupDirective,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { HumanizePipe } from '@app/shared/pipes/HumanizePipe.pipe';\nimport { ModalDatosEmpresaComponent } from './componentes/modal-datos-empresa/modal-datos-empresa.component';\nimport { VerArchivoComponent } from './componentes/ver-archivo/ver-archivo.component';\nimport { AnexosDetalleDocumentoComponent } from './componentes/anexos-detalle-documento/anexos-detalle-documento.component';\nimport { TareaGenericaComponent } from './vistas/tarea-generica/tarea-generica.component';\nimport { ModalComentarioTareaGenericaComponent } from './componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component';\nimport { DescargarDocumentoComponent } from './componentes/descargar-documento/descargar-documento.component';\nimport { DashboardComponent } from '@app/modulos/dashboard/dashboard.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TiposDeDescargas } from '@app/modulos/dashboard/modelo/enums/TiposDeDescargas.enum';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { TareaRevisionListasNegrasComponent } from '@app/modulos/dashboard/vistas/tarea-revision-listas-negras/tarea-revision-listas-negras.component';\nimport { InvitacionesEmpresaComponent } from '@app/shared/componentes/invitaciones-empresa/invitaciones-empresa.component';\nimport { PaisAmbiente } from '@app/shared/modelos/enums/paisAmbiente.enum';\nimport { PaisAmbienteGuard } from '@core/guards/pais-ambiente.guard';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MenuIzquierdoComponent } from '@app/modulos/dashboard/componentes/menu-izquierdo/menu-izquierdo.component';\nimport { TareasPorTipoComponent } from '@app/modulos/dashboard/vistas/tareas-por-tipo/tareas-por-tipo.component';\nimport { TareaDocumentosComponent } from '@dashboard/vistas/tarea-documentos/tarea-documentos.component';\nimport { IncentivosComponent } from '@dashboard/vistas/incentivos/incentivos.component';\nimport { QiipLibModule } from '@qiip/lib';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      {\n        path: '',\n        component: TareasComponent,\n        pathMatch: 'full',\n      },\n      {\n        path: 'tareas-por-tipo',\n        component: TareasPorTipoComponent,\n        pathMatch: 'full',\n      },\n      {\n        path: 'detalle-tarea/:id_tarea',\n        component: DetalleTareaComponent,\n        canLoad: [PaisAmbienteGuard],\n        data: { paises: [PaisAmbiente.MX] },\n      },\n      {\n        path: 'detalle-generico/:id_tarea',\n        component: TareaGenericaComponent,\n      },\n      {\n        path: 'descargar-documentos/:id_documento',\n        component: DescargarDocumentoComponent,\n        data: {\n          tipoDescarga: TiposDeDescargas.DOCUMENTAL,\n          paises: [PaisAmbiente.MX],\n        },\n        canLoad: [PaisAmbienteGuard],\n      },\n      {\n        path: 'descargar-constancias-fiscales/:id_documento',\n        component: DescargarDocumentoComponent,\n        data: {\n          tipoDescarga: TiposDeDescargas.CONSTANCIA_FISCAL,\n          paises: [PaisAmbiente.MX],\n        },\n        canLoad: [PaisAmbienteGuard],\n      },\n      {\n        path: 'revision-listas-negras/:id_tarea',\n        component: TareaRevisionListasNegrasComponent,\n        canLoad: [PaisAmbienteGuard],\n        data: { paises: [PaisAmbiente.MX] },\n      },\n      {\n        path: 'invitaciones-empresa',\n        component: InvitacionesEmpresaComponent,\n        canLoad: [PaisAmbienteGuard],\n        data: { paises: [PaisAmbiente.MX] },\n      },\n      {\n        path: 'revision-documentos/:idTarea',\n        component: TareaDocumentosComponent,\n      },\n      {\n        path: 'ahorrador',\n        loadChildren: () =>\n          import('./ahorrador/ahorrador.module').then((m) => m.AhorradorModule),\n      },\n      {\n        path: 'incentivos',\n        component: IncentivosComponent,\n      },\n      { path: '**', redirectTo: 'login' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    MatMenuModule,\n    QiipLibModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    DashboardComponent,\n    TareasComponent,\n    DetalleTareaComponent,\n    ModalComentariosComponent,\n    HeaderComponent,\n    ModalDatosEmpresaComponent,\n    VerArchivoComponent,\n    AnexosDetalleDocumentoComponent,\n    TareaGenericaComponent,\n    ModalComentarioTareaGenericaComponent,\n    DescargarDocumentoComponent,\n    TareaRevisionListasNegrasComponent,\n    MenuIzquierdoComponent,\n    TareasPorTipoComponent,\n    TareaDocumentosComponent,\n    IncentivosComponent,\n  ],\n  entryComponents: [\n    ModalComentariosComponent,\n    ModalDatosEmpresaComponent,\n    ModalComentarioTareaGenericaComponent,\n    VerArchivoComponent,\n  ],\n  providers: [FormGroupDirective, DatePipe, DashboardService, HumanizePipe],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class DashboardModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DashboardService } from '@dashboard/servicios/dashboard.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalType, QiipModalService, QiipSpinnerService } from '@qiip/lib';\nimport {\n  GenerarIncentivoDTO,\n  GenerarIncentivosDTO,\n  IncentivosGeneradosDTO,\n  InvitacionDTO,\n} from '@dashboard/modelo/interfaces/Incentivos';\nimport { EstadoInvitacion } from '@dashboard/modelo/enums/Incentivos.enum';\nimport { Store } from '@ngrx/store';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as dayjs from 'dayjs';\n\ninterface InvitacionData {\n  // datos invitacion\n  idInvitacion: number;\n  nombreRemitente: string;\n  idRemitente: number;\n  idUsuarioRemitente: string;\n  contratoRemitente: string;\n  montoRemitente: number;\n  idIncentivoRemitente: number;\n  nombreInvitado: string;\n  idInvitado: number;\n  idUsuarioInvitado: string;\n  contratoInvitado: string;\n  montoInvitado: number;\n  idIncentivoInvitado: number;\n  celularInvitado: string;\n  fechaInvitado: Date;\n  estadoInvitacion: EstadoInvitacion;\n  // select\n  remitenteSeleccionado: boolean;\n  remitenteHabilitado: boolean;\n  invitadoSeleccionado: boolean;\n  invitadoHabilitado: boolean;\n}\n\n@Component({\n  selector: 'app-incentivos',\n  templateUrl: './incentivos.component.html',\n  styleUrls: ['./incentivos.component.scss'],\n})\nexport class IncentivosComponent implements OnInit {\n  pageSizeOptions = [10, 25, 50, 100];\n  valorFiltro: string;\n\n  columnasVisibles: string[] = [];\n  dataSource: MatTableDataSource<any>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  estadosQueryParams: EstadoInvitacion[] = [];\n  estadosSeleccionados: EstadoInvitacion[];\n  listaEstados = [\n    EstadoInvitacion.NUEVA,\n    EstadoInvitacion.APLICA_INCENTIVO,\n    EstadoInvitacion.NO_APLICA_INCENTIVO,\n    EstadoInvitacion.CON_INCENTIVO,\n    EstadoInvitacion.VENCIDA,\n  ];\n  invitaciones: InvitacionData[] = [];\n  totalRemitente: number;\n  totalInvitado: number;\n  EstadoInvitacion = EstadoInvitacion;\n  private correoOperador: string;\n  private invitacionesTemp: InvitacionDTO[];\n  seleccionarTodosRemitentes = false;\n  seleccionarTodosInvitados = false;\n  maxDate = new Date();\n  form = new FormGroup({\n    periodo: new FormControl(new Date(), [Validators.required]),\n  });\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private dashboardService: DashboardService,\n    private qiipModalService: QiipModalService,\n    private qiipSpinnerService: QiipSpinnerService,\n    private store: Store<any>\n  ) {}\n\n  ngOnInit() {\n    this.initColumnas();\n    this.consultarIncentivos();\n    this.store\n      .select('usuario', 'email')\n      .subscribe((value) => (this.correoOperador = value));\n  }\n\n  aplicarFiltro(event) {\n    const valorDelFiltro = (event.target as HTMLInputElement).value;\n    this.filtrar(valorDelFiltro);\n    this.reiniciarSeleccionTodos();\n  }\n\n  filtrar(texto) {\n    if (texto === null || texto === '') {\n      this.borrarFiltro();\n    } else if (texto) {\n      this.dataSource.filter = texto.trim().toLowerCase();\n\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  borrarFiltro() {\n    this.valorFiltro = '';\n    this.dataSource.filter = this.valorFiltro.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  cargarSeleccionEstado() {\n    if (this.estadosSeleccionados) {\n      this.router.navigate(['.'], {\n        relativeTo: this.route,\n        queryParams: {\n          estado: this.estadosSeleccionados,\n        },\n      });\n    }\n  }\n\n  existenIncentivosSeleccionadas() {\n    return this.invitaciones.some(\n      (value) => value.remitenteSeleccionado || value.invitadoSeleccionado\n    );\n  }\n\n  generarIncentivo() {\n    this.qiipSpinnerService.show();\n    const body = this.obtenerBody();\n    this.dashboardService\n      .generarIncentivos(body)\n      .then((respuesta) => {\n        this.validarRespuestaIncentivos(respuesta);\n        this.consultarIncentivos();\n      })\n      .catch((reason) => {\n        console.error('Error generando Incentivos', reason);\n        this.qiipModalService.abrirModal(\n          ModalType.ERROR,\n          'Hay un error en el envío de incentivos'\n        );\n      })\n      .finally(() => this.qiipSpinnerService.hide());\n  }\n\n  parsearTextoEstado(valor: string) {\n    if (!valor) {\n      return valor;\n    }\n    const palabra = valor\n      .split('_')\n      .map((s) => s.toLowerCase())\n      .join(' ');\n    return palabra[0].toUpperCase() + palabra.substr(1).toLowerCase();\n  }\n\n  calularTotalRemitente() {\n    this.totalRemitente = this.invitaciones\n      .filter((value) => value.remitenteSeleccionado)\n      .reduce(\n        (previousValue, currentValue) =>\n          previousValue + currentValue.montoRemitente,\n        0\n      );\n  }\n\n  calularTotalInvitado() {\n    this.totalInvitado = this.invitaciones\n      .filter((value) => value.invitadoSeleccionado)\n      .reduce(\n        (previousValue, currentValue) =>\n          previousValue + currentValue.montoRemitente,\n        0\n      );\n  }\n\n  private initColumnas() {\n    this.columnasVisibles = [\n      'nombreRemitente',\n      'idUsarioRemitente',\n      'contratoRemitente',\n      'montoRemitente',\n      'remitenteSeleccionado',\n      'nombreInvitado',\n      'idUsuarioInvitado',\n      'contratoInvitado',\n      'montoInvitado',\n      'celularInvitado',\n      'fechaInvitado',\n      'estadoInvitacion',\n      'invitadoSeleccionado',\n    ];\n  }\n\n  private validarRespuestaIncentivos(respuesta: IncentivosGeneradosDTO) {\n    if (respuesta.incentivos && respuesta.incentivos.length > 0) {\n      const personaDTOS = respuesta.incentivos.map((value) => {\n        const invitacionDTO = this.invitacionesTemp.find(\n          (value1) => value.idInvitacion === value1.idInvitacion\n        );\n        if (invitacionDTO) {\n          return invitacionDTO.remitente.idPersona === value.idPersona\n            ? invitacionDTO.remitente\n            : invitacionDTO.invitado;\n        } else {\n          return null;\n        }\n      });\n      this.qiipModalService.abrirModal(\n        ModalType.SUCCESS,\n        ['Incentivos enviados correctamente'].concat(\n          personaDTOS.map(\n            (value) =>\n              `Incentivo otorgado: ${value.valorIncentivo}, a ${value.nombre}`\n          )\n        )\n      );\n    } else {\n      this.qiipModalService.abrirModal(\n        ModalType.ERROR,\n        'No se logro generar ningún incentivo'\n      );\n    }\n  }\n\n  private consultarIncentivos() {\n    this.route.queryParams.subscribe((params) => {\n      this.estadosQueryParams = params.estado;\n      this.estadosSeleccionados = !this.estadosQueryParams\n        ? []\n        : this.estadosSeleccionados;\n      this.consultarIncentivosPorEstados(this.estadosQueryParams);\n    });\n  }\n\n  private consultarIncentivosPorEstados(estadosQueryParams: string[]) {\n    this.reiniciarSeleccionTodos();\n    this.dataSource = new MatTableDataSource([]);\n    const periodo = this.form.value.periodo\n      ? dayjs(this.form.value.periodo).format('YYYY-MM')\n      : null;\n    console.log('\\n\\n\\n' + periodo);\n    if (periodo) {\n      this.qiipSpinnerService.show();\n      this.dashboardService\n        .consultarInvitaciones(periodo, estadosQueryParams)\n        .then((respuesta) => {\n          this.invitacionesTemp = respuesta.invitaciones;\n          this.invitaciones = this.mappearInvitacion(respuesta.invitaciones);\n          this.initDataSource(this.invitaciones);\n          this.filtrar(this.valorFiltro);\n        })\n        .catch((reason) => {\n          console.error('Error consultando invitaciones', reason);\n          this.qiipModalService.abrirModal(\n            ModalType.ERROR,\n            'Ocurrio un error consultando la lista de invitaciones, intentalo más tarde.'\n          );\n        })\n        .finally(() => this.qiipSpinnerService.hide());\n    }\n  }\n\n  private initDataSource(data: any[]) {\n    this.dataSource = new MatTableDataSource(data);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.totalRemitente = 0;\n    this.totalInvitado = 0;\n  }\n\n  private obtenerBody(): GenerarIncentivosDTO {\n    let incentivos: GenerarIncentivoDTO[] = [];\n    const invitacionesSeleccionadas = this.invitaciones.filter(\n      (value) => value.remitenteSeleccionado || value.invitadoSeleccionado\n    );\n    invitacionesSeleccionadas.forEach((value) => {\n      incentivos = value.remitenteSeleccionado\n        ? incentivos.concat(\n            this.obtenerIncentivo(\n              value.idIncentivoRemitente,\n              value.idInvitacion,\n              value.idRemitente\n            )\n          )\n        : incentivos;\n      incentivos = value.invitadoSeleccionado\n        ? incentivos.concat(\n            this.obtenerIncentivo(\n              value.idIncentivoInvitado,\n              value.idInvitacion,\n              value.idInvitado\n            )\n          )\n        : incentivos;\n    });\n    return {\n      correoOperador: this.correoOperador,\n      incentivos,\n    };\n  }\n\n  private obtenerIncentivo(\n    idIncentivo,\n    idInvitacion,\n    idPersona\n  ): GenerarIncentivoDTO {\n    return {\n      idIncentivo,\n      idInvitacion,\n      idPersona,\n    };\n  }\n\n  private mappearInvitacion(invitaciones: InvitacionDTO[]): InvitacionData[] {\n    return invitaciones.map((value) => ({\n      idInvitacion: value.idInvitacion,\n      estadoInvitacion: value.estadoInvitacion,\n      nombreRemitente: value.remitente.nombre,\n      idRemitente: value.remitente.idPersona,\n      idUsuarioRemitente: value.remitente.idUsuario,\n      contratoRemitente: value.remitente.contrato,\n      montoRemitente: value.remitente.valorIncentivo,\n      idIncentivoRemitente: value.remitente.idIncentivo,\n      nombreInvitado: value.invitado.nombre,\n      idInvitado: value.invitado.idPersona,\n      idUsuarioInvitado: value.invitado.idUsuario,\n      contratoInvitado: value.invitado.contrato,\n      montoInvitado: value.invitado.valorIncentivo,\n      idIncentivoInvitado: value.invitado.idIncentivo,\n      celularInvitado: value.invitado.celular,\n      fechaInvitado: value.fechaCreacion,\n      remitenteSeleccionado: false,\n      remitenteHabilitado:\n        value.estadoInvitacion === EstadoInvitacion.APLICA_INCENTIVO,\n      invitadoSeleccionado: false,\n      invitadoHabilitado:\n        value.estadoInvitacion === EstadoInvitacion.APLICA_INCENTIVO,\n    }));\n  }\n\n  actualizarTodosRemitentes() {\n    const datosRenderizados = this.obtenerDatosRenderizados();\n    this.invitaciones.forEach((value) => {\n      if (\n        value.remitenteHabilitado &&\n        datosRenderizados.some(\n          (value1) => value1.idInvitacion === value.idInvitacion\n        )\n      ) {\n        value.remitenteSeleccionado = this.seleccionarTodosRemitentes;\n      }\n    });\n    this.calularTotalRemitente();\n  }\n\n  actualizarTodosInvitados() {\n    const datosRenderizados = this.obtenerDatosRenderizados();\n    this.invitaciones.forEach((value) => {\n      if (\n        value.invitadoHabilitado &&\n        datosRenderizados.some(\n          (value1) => value1.idInvitacion === value.idInvitacion\n        )\n      ) {\n        value.invitadoSeleccionado = this.seleccionarTodosInvitados;\n      }\n    });\n    this.calularTotalRemitente();\n  }\n\n  private obtenerDatosRenderizados() {\n    const datosFiltrado = this.dataSource.sortData(\n      this.dataSource.filteredData,\n      this.dataSource.sort\n    );\n    return this.dataSource._pageData(datosFiltrado);\n  }\n\n  reiniciarSeleccionTodos() {\n    this.seleccionarTodosInvitados = false;\n    this.seleccionarTodosRemitentes = false;\n  }\n\n  consultarPorPeriodo() {\n    const estados = this.route.snapshot.queryParams.estado;\n    this.reiniciarSeleccionTodos();\n    this.consultarIncentivosPorEstados(estados);\n  }\n}\n","<h1 id=\"descTabla\">Incentivos por referenciación</h1>\n<div class=\"row filtros\">\n  <form [formGroup]=\"form\" (ngSubmit)=\"consultarPorPeriodo()\">\n    <div class=\"col-md-6 form-periodo\">\n      <qiip-datepicker-year-month id=\"fecha\" label=\"Ingrese el periodo de consulta\"\n                                  [maxDate]=\"maxDate\" [control]=\"form.get('periodo')\">\n      </qiip-datepicker-year-month>\n    </div>\n    <div class=\"col-sm-2\">\n      <qiip-button label=\"Buscar\" [form]=\"form\" id=\"boton-buscar\" ></qiip-button>\n    </div>\n  </form>\n</div>\n<hr>\n<ng-container>\n  <div class=\"row barra-tabla\">\n    <div class=\"col-md-9\">\n      <mat-form-field floatLabel=\"never\" class=\"form-buscar\">\n        <mat-label>Buscar en lista de invitaciones</mat-label>\n        <input matInput id=\"campo-buscar\" type=\"text\" name=\"search\" placeholder=\"Buscar en lista de invitaciones\" [(ngModel)]=\"valorFiltro\"\n               (keyup)=\"aplicarFiltro($event)\">\n        <button mat-button id=\"boton-borrar-filtro\" *ngIf=\"valorFiltro\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"borrarFiltro()\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n    <div class=\"col-md-3 text-right\">\n      <div>\n        <mat-form-field id=\"estado\" appearance=\"fill\">\n          <mat-label>Estado</mat-label>\n          <mat-select id=\"select-estados\" [(ngModel)]=\"estadosSeleccionados\" multiple (selectionChange)=\"cargarSeleccionEstado()\">\n            <mat-option *ngFor=\"let estado of listaEstados; let i = index\" id=\"opcion-estado-{{i}}\" [value]=\"estado\">{{estado}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"col-md-12\">\n      <div class=\"paginator\" [class.table-not-visible]=\"invitaciones?.length === 0\">\n        <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" (change)=\"reiniciarSeleccionTodos()\"></mat-paginator>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\" [class.table-not-visible]=\"invitaciones?.length === 0\">\n    <div class=\"col-md-12\">\n      <div class=\"table-content\">\n        <div class=\"table-responsive\">\n          <table class=\"mat-elevation-z8\" mat-table [dataSource]=\"dataSource\" matSort aria-describedby=\"descTabla\">\n            <ng-container matColumnDef=\"nombreRemitente\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-nombre-remitente\" class=\"striped1\"><strong>Nombre remitente</strong></th>\n              <td mat-cell *matCellDef=\"let element\" class=\"striped1\"> {{element.nombreRemitente}}</td>\n              <td mat-footer-cell *matFooterCellDef><strong>Total remitentes</strong></td>\n            </ng-container>\n            <ng-container matColumnDef=\"idUsarioRemitente\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-id-remitente\">ID remitente</th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.idUsuarioRemitente}}</td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"contratoRemitente\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-contrato-remitente\" class=\"striped1\">Contrato remitente</th>\n              <td mat-cell *matCellDef=\"let element\" class=\"striped1\"> {{element.contratoRemitente}}</td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"montoRemitente\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-monto-remitente\">Monto incentivo</th>\n              <td mat-cell *matCellDef=\"let element\">$ {{element.montoRemitente | number }}</td>\n              <td mat-footer-cell *matFooterCellDef> <p id=\"total-remitentes\">$ {{totalRemitente | number}}</p> </td>\n            </ng-container>\n            <ng-container matColumnDef=\"remitenteSeleccionado\">\n              <th mat-header-cell *matHeaderCellDef id=\"col-aplicar-remitente\" class=\"striped2 separator-col-r separator-col-l\">\n                <section>\n                  <mat-checkbox id=\"select-aplicar-remitentes\" [(ngModel)]=\"seleccionarTodosRemitentes\" (change)=\"actualizarTodosRemitentes()\"></mat-checkbox>\n                </section>\n              </th>\n              <td mat-cell *matCellDef=\"let element; let i = index;\" class=\"striped2 separator-col-r separator-col-l col-select\">\n                <section>\n                  <mat-checkbox id=\"select-remitente-{{i}}\"\n                                [(ngModel)]=\"element.remitenteSeleccionado\"\n                                [disabled]=\"!element.remitenteHabilitado\"\n                                [indeterminate]=\"!element.remitenteHabilitado\"\n                                (change)=\"calularTotalRemitente()\"\n                  ></mat-checkbox>\n                </section>\n              </td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"nombreInvitado\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-nombre-invitado\" class=\"striped1\"><strong>Nombre invitado</strong></th>\n              <td mat-cell *matCellDef=\"let element\" class=\"striped1\"> {{element.nombreInvitado}}</td>\n              <td mat-footer-cell *matFooterCellDef><strong>Total invitados</strong></td>\n            </ng-container>\n            <ng-container matColumnDef=\"idUsuarioInvitado\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-id-invitado\">ID invitado</th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.idUsuarioInvitado}}</td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"contratoInvitado\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-contrato-invitado\" class=\"striped1\">Contrato invitado</th>\n              <td mat-cell *matCellDef=\"let element\" class=\"striped1\"> {{element.contratoInvitado}}</td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"montoInvitado\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-monto-invitado\">Monto incentivo</th>\n              <td mat-cell *matCellDef=\"let element\">$ {{element.montoInvitado | number}}</td>\n              <td mat-footer-cell *matFooterCellDef> <p id=\"total-invitados\">$ {{totalInvitado | number}}</p> </td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"celularInvitado\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-celular-invitado\" class=\"striped1\">Celular invitado</th>\n              <td mat-cell *matCellDef=\"let element\" class=\"striped1\"> {{element.celularInvitado}}</td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"fechaInvitado\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-fecha-invitacion\">Fecha invitacion</th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.fechaInvitado}}</td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"estadoInvitacion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"col-estado-invitacion\" class=\"striped1\">Estado</th>\n              <td mat-cell *matCellDef=\"let element\" class=\"striped1\"\n                  [class.estado-nuevo]=\"element.estadoInvitacion === EstadoInvitacion.NUEVA\"\n                  [class.estado-aplica-incentivo]=\"element.estadoInvitacion === EstadoInvitacion.APLICA_INCENTIVO\"\n                  [class.estado-no-aplica-incentivo]=\"element.estadoInvitacion === EstadoInvitacion.NO_APLICA_INCENTIVO\"\n                  [class.estado-con-incentivo]=\"element.estadoInvitacion === EstadoInvitacion.CON_INCENTIVO\"\n                  [class.estado-vencida]=\"element.estadoInvitacion === EstadoInvitacion.VENCIDA\">\n                <strong>{{parsearTextoEstado(element.estadoInvitacion)}}</strong></td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n            <ng-container matColumnDef=\"invitadoSeleccionado\">\n              <th mat-header-cell *matHeaderCellDef id=\"col-aplicar-invitado\" class=\"striped2 separator-col-r separator-col-l\">\n                <section>\n                  <mat-checkbox id=\"select-aplicar-invitados\" [(ngModel)]=\"seleccionarTodosInvitados\" (change)=\"actualizarTodosInvitados()\"></mat-checkbox>\n                </section>\n              </th>\n              <td mat-cell *matCellDef=\"let element; let i = index;\" class=\"striped2 separator-col-l\">\n                <section>\n                  <mat-checkbox id=\"select-invitado-{{i}}\"\n                                [(ngModel)]=\"element.invitadoSeleccionado\"\n                                [disabled]=\"!element.invitadoHabilitado\"\n                                [indeterminate]=\"!element.invitadoHabilitado\"\n                                (change)=\"calularTotalInvitado()\"\n                  ></mat-checkbox>\n                </section>\n              </td>\n              <td mat-footer-cell *matFooterCellDef></td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnasVisibles\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: columnasVisibles;\"></tr>\n            <tr mat-footer-row *matFooterRowDef=\"columnasVisibles\"></tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row boton-cerar-content\" [class.table-not-visible]=\"invitaciones?.length === 0\">\n    <div class=\"col-md-12\">\n      <button mat-raised-button color=\"primary\" id=\"boton-generar-incentivos\"\n              [disabled]=\"!existenIncentivosSeleccionadas()\"\n              (click)=\"generarIncentivo()\">Confirmar incentivos\n      </button>\n    </div>\n  </div>\n</ng-container>\n\n<div class=\"row lista-vacia\" *ngIf=\"invitaciones?.length === 0\">\n  <div class=\"col-md-12\">\n    <p class=\"text-center\">Lista de referenciación vacia.</p>\n  </div>\n</div>\n","export enum EstadoPersona {\n  DESCONOCIDO = 'DESCONOCIDO',\n  PENDIENTE = 'PENDIENTE',\n  INVITADO = 'INVITADO',\n  REGISTRADO = 'REGISTRADO',\n}\n\nexport enum EstadoInvitacion {\n  DESCONOCIDO = 'DESCONOCIDO',\n  NUEVA = 'NUEVA',\n  NO_APLICA_INCENTIVO = 'NO_APLICA_INCENTIVO',\n  APLICA_INCENTIVO = 'APLICA_INCENTIVO',\n  CON_INCENTIVO = 'CON_INCENTIVO',\n  VENCIDA = 'VENCIDA',\n}\n\nexport enum EstadoIncentivo {\n  PENDIENTE = 'PENDIENTE',\n  ENTREGADO = 'ENTREGADO',\n}\n","export enum EstadoTareaEmpleadoBloqueado {\n  DESCONOCIDO = 'DESCONOCIDO',\n  APROBADO = 'APROBADO',\n  RESTRINGIDO = 'RESTRINGIDO',\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { DashboardService } from '../../servicios/dashboard.service';\nimport { fromEvent } from 'rxjs';\nimport { ITarea } from '../../modelo/interfaces/ITarea.type';\nimport { EstadoTarea } from '../../modelo/enums/EstadosTarea.enum';\nimport { DatePipe } from '@angular/common';\nimport { HumanizePipe } from '@app/shared/pipes/HumanizePipe.pipe';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { ITareasPaginadas } from '@app/modulos/dashboard/modelo/interfaces/ITareasPaginadas.type';\n\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { Router } from '@angular/router';\nimport { TipoTarea } from '@app/modulos/dashboard/modelo/enums/TipoTarea.enum';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\n\n@Component({\n  selector: 'app-tareas',\n  templateUrl: './tareas.component.html',\n  styleUrls: ['./tareas.component.scss'],\n})\nexport class TareasComponent implements OnInit {\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  tareas: ITarea[];\n  tareasFiltradas: ITarea[];\n  _length = 100;\n  _pageSize = 10;\n  _pageSizeOptions = [10, 25, 50, 100];\n  _pageIndex = 0;\n  _active = 'default';\n  _direction = 'default';\n\n  constructor(\n    private dashboardService: DashboardService,\n    private datePipe: DatePipe,\n    public router: Router,\n    private customModalService: CustomModalService,\n    private humanizePipe: HumanizePipe\n  ) {}\n\n  ngOnInit() {\n    this.consultarTareas();\n    fromEvent(this.filter.nativeElement, 'keyup')\n      .pipe(debounceTime(300), distinctUntilChanged())\n      .subscribe(() => {\n        if (this.filter.nativeElement.value) {\n          const filterValue = this.filter.nativeElement.value\n            .trim()\n            .toLowerCase();\n          this.tareasFiltradas = this.tareas.filter((tarea: ITarea) => {\n            const { a, b, c, d, e } = this.extraerCriteriosBusqueda(tarea);\n            return (a + b + c + d + e).includes(filterValue);\n          });\n        } else {\n          this.tareasFiltradas = this.tareas;\n        }\n      });\n  }\n\n  private extraerCriteriosBusqueda(tarea: ITarea) {\n    const a = this.datePipe.transform(\n      tarea.fechaCreacion,\n      'yyyy/MM/dd HH:mm:ss'\n    );\n    const b = this.humanizePipe.transform(tarea.tipo);\n    const c = tarea.nombre.toLowerCase();\n    const d = this.datePipe.transform(\n      tarea.fechaCreacion,\n      'd MMMM / y - h:mm a'\n    );\n    const e = tarea.criticidad;\n    return { a, b, c, d, e };\n  }\n\n  changePage($event: PageEvent) {\n    this._pageIndex = $event.pageIndex;\n    this._pageSize = $event.pageSize;\n    this.filter.nativeElement.value = '';\n    this.consultarTareas();\n  }\n\n  sortData($event: Sort) {\n    if ($event.direction) {\n      this._active = $event.active;\n      this._direction = $event.direction;\n    } else {\n      this._active = 'default';\n      this._direction = 'default';\n    }\n    this.filter.nativeElement.value = '';\n    this.consultarTareas();\n  }\n\n  verDetalleTarea(tarea: ITarea) {\n    switch (TipoTarea[tarea.tipo]) {\n      case TipoTarea.TAREA_DOCUMENTAL:\n        this.router.navigate(['/dashboard/detalle-tarea', tarea.id]);\n        break;\n      case TipoTarea.REVISION_LISTAS_NEGRAS:\n        this.router.navigate(['/dashboard/revision-listas-negras', tarea.id]);\n        break;\n      case TipoTarea.TAREA_DOCUMENTAL_GENERICA:\n        this.router.navigate(['/dashboard/revision-documentos', tarea.id]);\n        break;\n      default:\n        this.router.navigate(['/dashboard/detalle-generico', tarea.id]);\n    }\n  }\n\n  private consultarTareas() {\n    const offset = this._pageIndex * this._pageSize;\n    this.dashboardService\n      .consultarTareasPorEstado(\n        EstadoTarea.PENDIENTE,\n        offset,\n        this._pageSize,\n        this._active,\n        this._direction\n      )\n      .then((tareasPaginadas: ITareasPaginadas) => {\n        this.tareas = tareasPaginadas.tareas;\n        this.tareasFiltradas = this.tareas;\n        this._length = tareasPaginadas.cantidad;\n      })\n      .catch((err) =>\n        this.customModalService.abrirModal(CustomModalType.ERROR)\n      );\n  }\n}\n","<h1>Bandeja de tareas</h1>\n<div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"filter-content\">\n        <div class=\"search-grid\">\n          <div class=\"input-group\">\n            <input #filter type=\"text\" name=\"search\" placeholder=\"Buscar\"/>\n            <button class=\"reset\" type=\"reset\" (click)=\"filter.value = null; tareasFiltradas = tareas\">\n              <span class=\"icon-clear\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-12\">\n      <div class=\"paginator\">\n        <mat-paginator [length]=\"_length\" [pageSize]=\"_pageSize\" [pageSizeOptions]=\"_pageSizeOptions\"\n                       (page)=\"changePage($event)\"></mat-paginator>\n      </div>\n    </div>\n    <div class=\"col-md-12\">\n      <div class=\"table-responsive\">\n        <table matSort (matSortChange)=\"sortData($event)\">\n          <thead>\n          <th mat-sort-header=\"id\" id=\"head-id\">ID</th>\n          <th mat-sort-header=\"fechaCreacion\">Antiguedad</th>\n          <th mat-sort-header=\"tipoTarea\">Tipo de tarea</th>\n          <th mat-sort-header=\"descripcion\">Descripción</th>\n          <th mat-sort-header=\"criticidad\">Criticidad</th>\n          <th mat-sort-header=\"pais\">Pais</th>\n          <th>Acciones</th>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let tarea of tareasFiltradas\">\n            <td>{{ tarea.id }}</td>\n            <td>{{ tarea.fechaCreacion | date:'yyyy/MM/dd HH:mm:ss' }}</td>\n            <td>{{ tarea.tipo | humanize }}</td>\n            <td>\n              <p>{{ tarea.nombre }} </p>\n              <span>{{tarea.fechaCreacion | date: 'd MMMM / y - h:mm a'}}</span>\n            </td>\n            <td [class.low]=\"tarea.criticidad >= 7 && tarea.criticidad <= 10\"\n                [class.medium]=\"tarea.criticidad >= 4 && tarea.criticidad <= 6\"\n                [class.high]=\"tarea.criticidad >= 1 && tarea.criticidad <= 3\">{{ tarea.criticidad }}\n            </td>\n            <td>{{tarea.paisOperacion}}</td>\n            <td>\n              <a mat-button class=\"see-more-button\" (click)=\"verDetalleTarea(tarea)\">Ver</a>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <h1>{{tareasFiltradas?.length === 0 ? 'No se encontraron tareas activas.': ''}}</h1>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DashboardService } from '@app/modulos/dashboard/servicios/dashboard.service';\nimport { ITareaGenerica } from '@app/modulos/dashboard/modelo/interfaces/ITareaGenerica.type';\nimport { ModalComentarioTareaGenericaComponent } from '@app/modulos/dashboard/componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { Location } from '@angular/common';\nimport { EstadoTarea } from '@app/modulos/dashboard/modelo/enums/EstadosTarea.enum';\n\n@Component({\n  selector: 'app-tarea-generica',\n  templateUrl: './tarea-generica.component.html',\n  styleUrls: ['./tarea-generica.component.scss'],\n})\nexport class TareaGenericaComponent implements OnInit {\n  detalleTarea: ITareaGenerica;\n  bloquearBoton = false;\n  EstadoTarea = EstadoTarea;\n  esReintentable = false;\n\n  constructor(\n    private location: Location,\n    private router: Router,\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private dashboarService: DashboardService,\n    private customModalService: CustomModalService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      const idTarea = +params.id_tarea;\n      this.dashboarService.consultarTareaPorId(idTarea).subscribe(\n        (tarea) => {\n          this.detalleTarea = tarea;\n          this.esReintentable =\n            this.detalleTarea.colaOriginal && this.detalleTarea.eventoOriginal;\n        },\n        (error) => {\n          this.router\n            .navigate(['/dashboard'])\n            .then(() => this.obtenerErrorConsulta(error.data.mensaje))\n            .catch((reason) => console.error(reason));\n          console.error('ERROR consulta tarea generica', error);\n        }\n      );\n    });\n  }\n\n  abrirModalComentario(estado: EstadoTarea) {\n    const modal = this.dialog.open(ModalComentarioTareaGenericaComponent, {\n      data: { estado },\n      panelClass: 'medium-screen-dialog',\n    });\n    modal.afterClosed().subscribe((comentario) => {\n      if (comentario) {\n        this.detalleTarea = Object.assign({}, this.detalleTarea, {\n          comentario,\n        });\n        if (estado === EstadoTarea.REINTENTADA) {\n          this.reintentarTareaGenerica(this.detalleTarea);\n        } else {\n          this.finalizarTareaGenerica(this.detalleTarea);\n        }\n      }\n    });\n    return modal;\n  }\n\n  finalizarTareaGenerica(detalleTarea: ITareaGenerica) {\n    this.bloquearBoton = true;\n    this.dashboarService\n      .finalizarTareaGenerica({\n        idTarea: detalleTarea.id,\n        comentario: detalleTarea.comentario,\n      })\n      .then(() => {\n        this.bloquearBoton = false;\n        this.mostarModalSuccess();\n        this.location.back();\n      })\n      .catch((err) => {\n        this.bloquearBoton = false;\n        this.mostarModalError();\n      });\n  }\n\n  reintentarTareaGenerica(detalleTarea: ITareaGenerica) {\n    this.bloquearBoton = true;\n    this.dashboarService\n      .reintentarTareaGenerica({\n        idTarea: detalleTarea.id,\n        comentario: detalleTarea.comentario,\n      })\n      .then(() => {\n        this.bloquearBoton = false;\n        this.mostarModalSuccess();\n        this.location.back();\n      })\n      .catch((err) => {\n        this.bloquearBoton = false;\n        this.mostarModalError();\n      });\n  }\n\n  mostarModalSuccess() {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS);\n  }\n\n  mostarModalError() {\n    this.customModalService.abrirModal(CustomModalType.ERROR);\n  }\n\n  private obtenerErrorConsulta(error: string) {\n    switch (error) {\n      case 'tarea.detalle.pais':\n        return this.customModalService.abrirModal(CustomModalType.WARNING, {\n          mensaje:\n            'La tarea que intenta consultar no corresponde al país en sesión.',\n        });\n      case 'tarea.detalle.noexiste':\n        return this.customModalService.abrirModal(CustomModalType.ERROR);\n      default:\n        return this.customModalService.abrirModal(CustomModalType.ERROR);\n    }\n  }\n}\n","<div *ngIf=\"detalleTarea\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"navbar-top\">\n        <ul>\n          <li>\n            <a [routerLink]=\"['/dashboard']\">Bandeja de tareas</a>\n          </li>\n          <li>\n            <mat-icon class=\"icon-navigate\">navigate_next</mat-icon>\n          </li>\n          <li class=\"active\">{{ detalleTarea.id}}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h1>{{ detalleTarea.nombre | humanize }}</h1>\n    </div>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <span>Tarea Número</span>\n        <p>{{ detalleTarea.id }}</p>\n      </div>\n      <div class=\"col-md-4\">\n        <span>Fecha de creación</span>\n        <p>{{ detalleTarea.fechaCreacion | date:'yyyy-MM-dd HH:mm' }}</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bg-content clearfix\">\n        <div class=\"col-md-12\">\n          <h2>Tarea:</h2>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Nombre</span>\n          <p>{{ detalleTarea.nombre }}</p>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Evento</span>\n          <p>{{ detalleTarea.nombreEvento }}</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"detalleTarea.datos && (detalleTarea.datos | json) != ({} | json)\">\n      <div class=\"col-md-12\">\n        <span>Datos</span>\n        <pre>{{ detalleTarea.datos | json }}</pre>\n      </div>\n    </div>\n    <br>\n    <hr>\n    <br>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button mat-button class=\"mat-button btns-primary align-r\" (click)=\"abrirModalComentario(EstadoTarea.FINALIZADA)\"\n                *ngIf=\"detalleTarea.estado === 'PENDIENTE'\" [disabled]=\"bloquearBoton\">Finalizar</button>\n        <button mat-button class=\"mat-button btns-primary align-r\" (click)=\"abrirModalComentario(EstadoTarea.REINTENTADA)\"\n                *ngIf=\"detalleTarea.estado === 'PENDIENTE' && esReintentable\" [disabled]=\"bloquearBoton\">Reintentar</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  username$: Observable<any>;\n\n  constructor(private store: Store<any>) {}\n\n  ngOnInit() {\n    this.username$ = this.store.select('usuario', 'username');\n  }\n}\n","<header>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"col-md-4\">\n          <div class=\"brand\">\n            <img src=\"../assets/images/logo-qiip.svg\" alt=\"\">\n          </div>\n        </div>\n        <div class=\"col-md-8 user-login\">\n          <div class=\"txt-user\">\n            <span>{{ username$ | async }}</span>\n            <a >Administrar</a>\n            <btn-cerrar-session></btn-cerrar-session>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</header>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { IAnexo } from '@app/modulos/dashboard/modelo/interfaces/IAnexo.type';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DashboardService } from '@app/modulos/dashboard/servicios/dashboard.service';\nimport { VerArchivoComponent } from '@app/modulos/dashboard/componentes/ver-archivo/ver-archivo.component';\n\n@Component({\n  selector: 'app-anexos-detalle-documento',\n  templateUrl: './anexos-detalle-documento.component.html',\n  styleUrls: ['./anexos-detalle-documento.component.scss'],\n})\nexport class AnexosDetalleDocumentoComponent implements OnInit {\n  @Input() anexos: IAnexo[];\n  @Input() nombreDocumento: string;\n\n  constructor(\n    private dialog: MatDialog,\n    private dashboarService: DashboardService\n  ) {}\n\n  ngOnInit() {}\n\n  descargarArchivo(idDocumento, nombreTipoDocumento) {\n    this.dashboarService\n      .descargarDocumento(idDocumento, nombreTipoDocumento)\n      .subscribe((x) => {\n        console.log('respueta cuando finaliza', x);\n      });\n  }\n\n  mostrarModalVerDocumento(idDocumento) {\n    this.dialog.open(VerArchivoComponent, {\n      height: '70%',\n      width: '50%',\n      data: {\n        idDocumento,\n      },\n    });\n  }\n}\n","<div>\n  <div class=\"row attachment-content\" *ngFor=\"let anexo of anexos; let i = index\">\n    <div class=\"col-xs-6\">\n      Archivo {{i + 1}}\n    </div>\n    <div class=\"col-xs-6\">\n      <button mat-icon-button (click)=\"descargarArchivo(anexo.uuidDocumento, anexo.uuidDocumento)\">\n        <mat-icon class=\"icon-download\" matTooltipClass=\"blue-tooltip\" matTooltip=\"Descargar\">arrow_downward</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"mostrarModalVerDocumento(anexo.uuidDocumento)\">\n        <mat-icon class=\"icon-download\" matTooltipClass=\"blue-tooltip\" matTooltip=\"Vista previa\">search</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n","export enum EstadosDocumento {\n  PENDIENTE = 'PENDIENTE',\n  APROBADO = 'APROBADO',\n  RECHAZADO = 'RECHAZADO',\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DashboardService } from '../../servicios/dashboard.service';\nimport { ITarea } from '../../modelo/interfaces/ITarea.type';\nimport { DatePipe } from '@angular/common';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TipoTarea } from '@app/modulos/dashboard/modelo/enums/TipoTarea.enum';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { ITareaGenerica } from '@app/modulos/dashboard/modelo/interfaces/ITareaGenerica.type';\nimport { ITipoTarea } from '@app/modulos/dashboard/modelo/interfaces/ITiposTareas.type';\nimport { ModalComentarioTareaGenericaComponent } from '@app/modulos/dashboard/componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\nimport * as momentTimezone from 'moment-timezone';\nimport { environment } from '@env/environment';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-tareas-por-tipo',\n  templateUrl: './tareas-por-tipo.component.html',\n  styleUrls: ['./tareas-por-tipo.component.scss'],\n})\nexport class TareasPorTipoComponent implements OnInit {\n  pageSizeOptions = [10, 25, 50, 100];\n\n  valorFiltro: string;\n  seleccionarTodos: boolean;\n  tiposTareas: ITipoTarea[];\n  tipoTareaSeleccionada: ITipoTarea;\n  paramTipoTarea: string;\n\n  tareasPorTipo: any[] = [];\n  tareas: ITareaGenerica[] = [];\n  columnasBase: string[] = [];\n  columnasTarea: string[] = [];\n\n  columnasTipoTarea: string[] = [];\n  columnasVisibles: string[] = [];\n  dataSource: MatTableDataSource<any>;\n  maxDate = new Date();\n  periodo = new FormControl(new Date(), [Validators.required]);\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(\n    public dashboardService: DashboardService,\n    private datePipe: DatePipe,\n    public router: Router,\n    private dialog: MatDialog,\n    private customModalService: CustomModalService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.periodo.valueChanges.pipe(debounceTime(3000)).subscribe((value) => {\n      const day = dayjs(value);\n      if (day.isValid()) {\n        this.actualizarListaPorTipo();\n      }\n    });\n    this.initColumnas();\n    this.consultarTiposTareas();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  verDetalleTarea(tarea: ITarea) {\n    switch (TipoTarea[tarea.tipo]) {\n      case TipoTarea.TAREA_DOCUMENTAL:\n        this.router.navigate(['/dashboard/detalle-tarea', tarea.id]);\n        break;\n      case TipoTarea.REVISION_LISTAS_NEGRAS:\n        this.router.navigate(['/dashboard/revision-listas-negras', tarea.id]);\n        break;\n      case TipoTarea.TAREA_DOCUMENTAL_GENERICA:\n        this.router.navigate(['/dashboard/revision-documentos', tarea.id]);\n        break;\n      default:\n        this.router.navigate(['/dashboard/detalle-generico', tarea.id]);\n    }\n  }\n\n  cargarSeleccionTipoTarea() {\n    if (this.tipoTareaSeleccionada) {\n      this.router.navigate(['.'], {\n        relativeTo: this.route,\n        queryParams: {\n          tipoTarea: this.tipoTareaSeleccionada.id,\n        },\n      });\n    }\n  }\n\n  actualizarListaPorTipo() {\n    this.valorFiltro = null;\n    if (this.tipoTareaSeleccionada) {\n      this.consultarTareas();\n    }\n  }\n\n  cerrarTareasSeleccionadas(finalizar: boolean) {\n    const tareas: ITareaGenerica[] = this.tareasPorTipo.filter(\n      (value) => value.seleccionado\n    );\n    if (tareas.length > 0) {\n      const modal = this.dialog.open(ModalComentarioTareaGenericaComponent, {\n        data: {},\n        panelClass: 'medium-screen-dialog',\n      });\n      modal.afterClosed().subscribe((comentario) => {\n        if (comentario) {\n          if (finalizar) {\n            this.finalizarTareasGenericas(tareas, comentario);\n          } else {\n            this.reintentarTareasGenericas(tareas, comentario);\n          }\n        }\n      });\n      return modal;\n    }\n  }\n\n  finalizarTareasGenericas(\n    tareas: ITareaGenerica[],\n    comentario: string\n  ): Promise<any> {\n    const promesas = tareas.map((value) => {\n      this.dashboardService.finalizarTareaGenerica({\n        idTarea: value.id,\n        comentario,\n      });\n    });\n    return Promise.all(promesas)\n      .then(\n        () => {\n          this.mostarModalSuccess();\n          this.consultarTareas();\n        },\n        (reason) => {\n          this.mostarModalError();\n          this.consultarTareas();\n        }\n      )\n      .catch((err) => {\n        this.mostarModalError();\n        this.consultarTareas();\n      });\n  }\n\n  reintentarTareasGenericas(\n    tareas: ITareaGenerica[],\n    comentario: string\n  ): Promise<any> {\n    const promesas = tareas.map((value) =>\n      this.dashboardService.reintentarTareaGenerica({\n        idTarea: value.id,\n        comentario,\n      })\n    );\n    return Promise.all(promesas)\n      .then(() => {\n        this.mostarModalSuccess();\n        this.consultarTareas();\n      })\n      .catch((err) => {\n        this.mostarModalError();\n        this.consultarTareas();\n      });\n  }\n\n  mostarModalSuccess() {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS);\n  }\n\n  mostarModalError() {\n    this.customModalService.abrirModal(CustomModalType.ERROR);\n  }\n\n  borrarFiltro() {\n    this.valorFiltro = '';\n    this.dataSource.filter = this.valorFiltro.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  esFecha(valor) {\n    const date = new Date(valor);\n    return !isNaN(valor)\n      ? false\n      : date instanceof Date && !isNaN(date.valueOf());\n  }\n\n  esObjeto(valor: any) {\n    return typeof valor === 'object';\n  }\n\n  existenTareasSeleccionadas() {\n    return this.tareasPorTipo.some((value) => value.seleccionado);\n  }\n\n  tareasSeleccionadasSonReintentables() {\n    const tareas: ITareaGenerica[] = this.tareasPorTipo.filter(\n      (value) => value.seleccionado\n    );\n    return tareas.length > 0 && tareas.every((value) => value.esReintentable);\n  }\n\n  actualizarCheckSeleccionTodos() {\n    this.seleccionarTodos = this.dataSource.data.every((value) => {\n      return value.seleccionado || value.deshabilitado;\n    });\n  }\n\n  actualizarTareasSeleccionadas() {\n    this.dataSource.data.forEach((value) => {\n      if (!value.deshabilitado) {\n        value.seleccionado = this.seleccionarTodos;\n      }\n    });\n  }\n\n  parsearStringMayus(valor: string) {\n    let nombre = '';\n    if (valor.includes('_')) {\n      nombre = valor\n        .split('_')\n        .map((s) => s.toLowerCase())\n        .join(' ')\n        .replace(/^\\w/, (c) => c.toUpperCase());\n    } else {\n      nombre = valor\n        .split(/(?=[A-Z])/)\n        .map((s) => s.toLowerCase())\n        .join(' ')\n        .replace(/^\\w/, (c) => c.toUpperCase());\n    }\n    return nombre;\n  }\n\n  private initColumnas() {\n    this.seleccionarTodos = false;\n    this.columnasBase = ['id', 'fechaCreacion', 'criticidad', 'esReintentable'];\n    this.columnasTarea = this.columnasBase.slice();\n    this.columnasVisibles = [\n      'select',\n      'id',\n      'fechaCreacion',\n      'criticidad',\n      'esReintentable',\n      'acciones',\n    ];\n  }\n\n  private consultarTareas() {\n    this.initColumnas();\n    const periodo = dayjs(this.periodo.value).format('YYYY-MM');\n    this.dataSource = new MatTableDataSource([]);\n    this.dashboardService\n      .consultarTareasPorTipo(this.tipoTareaSeleccionada.id, periodo)\n      .subscribe(\n        (lista) => {\n          this.tareas = lista.tareas.sort(this.ordenarPorFecha);\n          this.extraerDatosPorTipoTarea();\n        },\n        (err) => this.customModalService.abrirModal(CustomModalType.ERROR)\n      );\n  }\n\n  private consultarTiposTareas() {\n    const _this = this;\n\n    const param$ = this.route.queryParams.pipe(\n      map((params) => {\n        this.paramTipoTarea = params.tipoTarea;\n        return this.paramTipoTarea;\n      })\n    );\n    const consulta$ = this.dashboardService.consultarTiposTareas();\n    combineLatest(param$, consulta$).subscribe(\n      (value) => {\n        if (value[1].tiposTareas) {\n          this.tiposTareas = value[1].tiposTareas\n            .map((tipo) => this.mappearNombresTipoTares(tipo, _this))\n            .sort(this.ordenarPorNombre);\n        }\n        if (value[0]) {\n          this.tipoTareaSeleccionada = this.tiposTareas.find((tipo) => {\n            return tipo.id.toString() === this.paramTipoTarea;\n          });\n          this.actualizarListaPorTipo();\n        }\n      },\n      () => this.customModalService.abrirModal(CustomModalType.ERROR)\n    );\n  }\n\n  private ordenarPorNombre(a: ITipoTarea, b: ITipoTarea) {\n    const bandA = a.nombre.toUpperCase();\n    const bandB = b.nombre.toUpperCase();\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  private ordenarPorFecha(a: ITareaGenerica, b: ITareaGenerica) {\n    let comparison = 0;\n    if (a.fechaCreacion > b.fechaCreacion) {\n      comparison = 1;\n    } else if (a.fechaCreacion < b.fechaCreacion) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  private mappearNombresTipoTares(tipoTarea: ITipoTarea, _this) {\n    const nombre = _this.parsearStringMayus(tipoTarea.nombre);\n    return {\n      ...tipoTarea,\n      nombre,\n    };\n  }\n\n  private obtenerColumnasVisibles() {\n    const select = ['select'];\n    this.columnasTarea = this.columnasBase.concat(this.columnasTipoTarea);\n    const columnas = select.concat(this.columnasTarea).concat('acciones');\n    return columnas;\n  }\n\n  private extraerDatosPorTipoTarea() {\n    let columnasTipoTarea = [];\n    this.tareasPorTipo = this.tareas.slice().map((value) => {\n      let datos: any = !value.datos\n        ? {}\n        : value.datos.json\n        ? value.datos.json\n        : value.datos;\n      datos = this.eliminarPropiedadesBaseRepetidas(datos);\n      datos = this.eliminarDatosOrigen(datos);\n      datos = this.eliminarPropiedadesObjetosYNull(datos);\n      columnasTipoTarea = this.obtenerPropiedadesJsonDatos(\n        columnasTipoTarea,\n        datos\n      );\n      return {\n        ...value,\n        ...datos,\n        fechaCreacion: momentTimezone(value.fechaCreacion)\n          .tz(environment.zone)\n          .format('YYYY/MM/DD'),\n        seleccionado: false,\n        deshabilitado: this.bloquearSeleccionPorTipoTarea(value),\n      };\n    });\n    this.initDataSource(this.tareasPorTipo, columnasTipoTarea);\n  }\n\n  private eliminarPropiedadesBaseRepetidas(datos: any) {\n    this.columnasBase.forEach((columna) => {\n      delete datos[columna];\n    });\n    return datos;\n  }\n\n  private eliminarDatosOrigen(datos: any) {\n    delete datos.cola;\n    delete datos.eventoOriginal;\n    return datos;\n  }\n\n  private eliminarPropiedadesObjetosYNull(datos: any) {\n    Object.keys(datos).forEach((columna) => {\n      if (datos[columna] && this.esObjeto(datos[columna])) {\n        delete datos[columna];\n      }\n      if (datos[columna] === null || datos[columna] === undefined) {\n        delete datos[columna];\n      }\n    });\n    return datos;\n  }\n\n  private obtenerPropiedadesJsonDatos(columnasTipo: string[], datos: any) {\n    if (this.esObjeto(datos)) {\n      const propiedades = Object.keys(datos);\n      propiedades.forEach((propiedadJson) => {\n        if (columnasTipo.indexOf(propiedadJson) === -1) {\n          columnasTipo.push(propiedadJson);\n        }\n      });\n      return columnasTipo;\n    } else {\n      return columnasTipo;\n    }\n  }\n\n  private initDataSource(data: any[], columnas: string[]) {\n    this.dataSource = new MatTableDataSource(data);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.columnasTipoTarea = columnas;\n    this.columnasVisibles = this.obtenerColumnasVisibles();\n  }\n\n  private bloquearSeleccionPorTipoTarea(value: ITareaGenerica) {\n    let bloquearSeleccion;\n    switch (TipoTarea[value.tipo]) {\n      case TipoTarea.TAREA_DOCUMENTAL:\n        bloquearSeleccion = true;\n        break;\n      case TipoTarea.REVISION_LISTAS_NEGRAS:\n        bloquearSeleccion = true;\n        break;\n      default:\n        bloquearSeleccion = false;\n    }\n    return bloquearSeleccion;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\"><h1>Bandeja de tareas por tipo</h1></div>\n  <div class=\"col-md-6 form-periodo\">\n    <qiip-datepicker-year-month id=\"fecha\" label=\"Ingrese el periodo de consulta\"\n                                [maxDate]=\"maxDate\" [control]=\"periodo\">\n    </qiip-datepicker-year-month>\n  </div>\n</div>\n<div>\n  <div class=\"row filtros\">\n    <div class=\"col-sm-6\">\n      <p>Seleccione el tipo de tarea</p>\n      <mat-form-field floatLabel=\"never\">\n        <mat-label>Tipo de tarea</mat-label>\n        <mat-select [(value)]=\"tipoTareaSeleccionada\" (selectionChange)=\"cargarSeleccionTipoTarea()\" [disabled]=\"periodo.invalid\">\n          <mat-option *ngFor=\"let x of tiposTareas; index as i\" [value]=\"x\">{{x.nombre}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"col-sm-6\">\n      <p>Buscar en lista de tareas</p>\n      <mat-form-field floatLabel=\"never\">\n        <mat-label>Buscar</mat-label>\n        <input matInput type=\"text\" name=\"search\" placeholder=\"Buscar\" [(ngModel)]=\"valorFiltro\"\n               [disabled]=\"!tipoTareaSeleccionada\" (keyup)=\"applyFilter($event)\">\n        <button mat-button *ngIf=\"valorFiltro\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"borrarFiltro()\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n  </div>\n  <ng-container>\n    <div class=\"row\" [class.table-not-visible]=\"tareas?.length === 0\">\n      <div class=\"col-md-12\">\n        <div class=\"paginator\">\n          <mat-paginator [pageSizeOptions]=\"pageSizeOptions\"></mat-paginator>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" [class.table-not-visible]=\"tareas?.length === 0\">\n      <div class=\"col-md-12\">\n        <div class=\"table-content\">\n          <table class=\"mat-elevation-z8\" mat-table [dataSource]=\"dataSource\" matSort>\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <section>\n                  <mat-checkbox [(ngModel)]=\"seleccionarTodos\" (change)=\"actualizarTareasSeleccionadas()\"></mat-checkbox>\n                </section></th>\n              <td mat-cell *matCellDef=\"let element\">\n                <section>\n                  <mat-checkbox [(ngModel)]=\"element.seleccionado\" (change)=\"actualizarCheckSeleccionTodos()\" [disabled]=\"element.deshabilitado\"></mat-checkbox>\n                </section>\n              </td>\n            </ng-container>\n\n            <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of columnasTarea\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{parsearStringMayus(column)}} </th>\n              <ng-container [ngSwitch]=\"column\">\n                <ng-container *ngSwitchCase=\"'fechaCreacion'\">\n                  <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'criticidad'\">\n                  <td mat-cell *matCellDef=\"let element\"\n                      [class.low]=\"element.criticidad >= 7 && element.criticidad <= 10\"\n                      [class.medium]=\"element.criticidad >= 4 && element.criticidad <= 6\"\n                      [class.high]=\"element.criticidad >= 1 && element.criticidad <= 3\"> {{element[column]}} </td>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <ng-container *ngIf=\"esFecha(element[column]); else cellObjeto\">\n                      {{element[column] | date:'yyyy/MM/dd HH:mm:ss'}}\n                    </ng-container>\n                    <ng-template #cellObjeto>\n                      <ng-container *ngIf=\"esObjeto(element[column]); else defaultCell\">\n                        {{element[column] | json}}\n                      </ng-container>\n                    </ng-template>\n                    <ng-template #defaultCell>\n                      {{element[column]}}\n                    </ng-template>\n                  </td>\n                </ng-container>\n              </ng-container>\n            </ng-container>\n\n            <ng-container matColumnDef=\"acciones\">\n              <th mat-header-cell *matHeaderCellDef> Acciones</th>\n              <td mat-cell *matCellDef=\"let tarea\">\n                <button mat-raised-button color=\"primary\" (click)=\"verDetalleTarea(tarea)\">Ver</button>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnasVisibles\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: columnasVisibles;\"></tr>\n          </table>\n        </div>\n      </div>\n    </div>\n    <div class=\"row boton-cerar-content\" [class.table-not-visible]=\"tareas?.length === 0\">\n      <div class=\"col-md-12\">\n        <button mat-raised-button color=\"primary\" [disabled]=\"!existenTareasSeleccionadas() || !tareasSeleccionadasSonReintentables()\"\n                (click)=\"cerrarTareasSeleccionadas(false)\">Reintentar tareas seleccionadas\n        </button>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!existenTareasSeleccionadas()\"\n                (click)=\"cerrarTareasSeleccionadas(true)\">Cerrar tareas seleccionadas\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"tareas?.length === 0\">\n    <div class=\"col-md-12\">\n      <p class=\"text-center\">Lista de tareas vacia.</p>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PaisAmbiente } from '@app/shared/modelos/enums/paisAmbiente.enum';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-menu-izquierdo',\n  templateUrl: './menu-izquierdo.component.html',\n  styleUrls: ['./menu-izquierdo.component.scss'],\n})\nexport class MenuIzquierdoComponent implements OnInit {\n  @Input() abrirMenu: boolean;\n  pais: PaisAmbiente;\n  PaisAmbiente = PaisAmbiente;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.pais = environment.envCountry as PaisAmbiente;\n  }\n}\n","<ng-container>\n  <div class=\"side-bar side-bar-open\" *ngIf=\"abrirMenu\">\n    <nav>\n      <ul>\n        <li routerLink=\"/dashboard\">\n          <mat-icon>home</mat-icon>\n          <a>Bandeja de tareas</a>\n        </li>\n        <li routerLink=\"/dashboard/tareas-por-tipo\">\n          <mat-icon>list</mat-icon>\n          <a>Buscar tareas por tipos</a>\n        </li>\n        <hr *ngIf=\"PaisAmbiente.MX === pais\">\n        <li *ngIf=\"PaisAmbiente.MX === pais\" routerLinkActive=\"active\" routerLink=\"/dashboard/invitaciones-empresa\">\n          <mat-icon>notification_important</mat-icon>\n          <a>Invitaciones empresa</a>\n        </li>\n        <li routerLink=\"/dashboard/incentivos\">\n          <mat-icon>card_giftcard</mat-icon>\n          <a>Incentivos</a>\n        </li>\n        <hr>\n        <li routerLink=\"/dashboard/ahorrador/bloquear-acceso\" >\n          <mat-icon>lock</mat-icon>\n          <a>Bloquear acceso</a>\n        </li>\n        <li routerLink=\"/dashboard/ahorrador/baja-usuario\">\n          <mat-icon>delete_forever</mat-icon>\n          <a>Dar de baja</a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  <div class=\"side-bar side-bar-collapsed\" *ngIf=\"!abrirMenu\">\n    <nav>\n      <ul>\n        <li routerLink=\"/dashboard\">\n          <mat-icon>home</mat-icon>\n        </li>\n        <li routerLink=\"/dashboard/tareas-por-tipo\">\n          <mat-icon>list</mat-icon>\n        </li>\n        <hr>\n        <li *ngIf=\"PaisAmbiente.MX === pais\" routerLink=\"/dashboard/invitaciones-empresa\">\n          <mat-icon>notification_important</mat-icon>\n        </li>\n        <li routerLink=\"/dashboard/incentivos\">\n          <mat-icon>card_giftcard</mat-icon>\n        </li>\n        <hr>\n        <li routerLink=\"/dashboard/ahorrador/bloquear-acceso\">\n          <mat-icon>lock</mat-icon>\n        </li>\n        <li routerLink=\"/dashboard/ahorrador/baja-usuario\">\n          <mat-icon>delete_forever</mat-icon>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DashboardService } from '@app/modulos/dashboard/servicios/dashboard.service';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { TiposDeDescargas } from '@app/modulos/dashboard/modelo/enums/TiposDeDescargas.enum';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-descargar-documento',\n  templateUrl: './descargar-documento.component.html',\n})\nexport class DescargarDocumentoComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private customModalService: CustomModalService,\n    private dashboarService: DashboardService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      const idDocumento = params.id_documento;\n      const tipoDescarga = this.route.snapshot.data.tipoDescarga;\n      idDocumento\n        ? this.descargarArchivo(idDocumento, tipoDescarga)\n        : this.redirecionarTareas();\n    });\n  }\n\n  descargarArchivo(idDocumento, tipoDescarga): void {\n    const respuesta: Observable<any> =\n      tipoDescarga === TiposDeDescargas.DOCUMENTAL\n        ? this.dashboarService.descargarDocumento(idDocumento, 'documento')\n        : this.dashboarService.descargarConstanciaFiscal(idDocumento);\n\n    respuesta.subscribe(\n      (x) => this.redirecionarTareas(),\n      () =>\n        this.customModalService\n          .abrirModal(CustomModalType.ERROR)\n          .afterClosed()\n          .subscribe(() => {\n            this.redirecionarTareas();\n          })\n    );\n  }\n  redirecionarTareas(): void {\n    this.router.navigate(['dashboard']);\n  }\n}\n","<h1>Su descargara comenzará en breve... </h1>","import { Observable } from 'rxjs';\nimport { EstadoTarea } from '../../modelo/enums/EstadosTarea.enum';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalComentariosComponent } from '../../componentes/modal-comentarios/modal-comentarios.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DashboardService } from '../../servicios/dashboard.service';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { IDocumento } from '../../modelo/interfaces/IDocumento.type';\nimport { EstadosDocumento } from '../../modelo/enums/EstadosDocumento.enum';\nimport { ModalDatosEmpresaComponent } from '@app/modulos/dashboard/componentes/modal-datos-empresa/modal-datos-empresa.component';\nimport { IDatosEmpresaMexicoResponse } from '@app/modulos/dashboard/modelo/interfaces/IDatosEmpresaMexicoResponse.type';\nimport { TiposDatoEmpresaMexico } from '@app/modulos/dashboard/modelo/enums/TiposDatoEmpresaMexico.enum';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { IAnexo } from '@app/modulos/dashboard/modelo/interfaces/IAnexo.type';\nimport { ITareaDocumental } from '@app/modulos/dashboard/modelo/interfaces/ITareaDocumental';\nimport { map } from 'rxjs/operators';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-detalle-tarea',\n  templateUrl: './detalle-tarea.component.html',\n  styleUrls: ['./detalle-tarea.component.scss'],\n})\nexport class DetalleTareaComponent implements OnInit {\n  ultimaVersion: number;\n  idTarea: number;\n  estadoDocumento: Observable<EstadoTarea>;\n  estadoTarea = EstadoTarea;\n  documentosForm: FormGroup;\n  tiposRechazo;\n  estadosDocumento = EstadosDocumento;\n  tiposDato = TiposDatoEmpresaMexico;\n  uuidEmpresa: string;\n  esperaRespuesta = true;\n  tareaDocumental: ITareaDocumental;\n\n  public get documentosFormulario() {\n    return this.documentosForm.get('documentos') as FormArray;\n  }\n\n  constructor(\n    private _location: Location,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    private dashboarService: DashboardService,\n    private customModalService: CustomModalService\n  ) {}\n\n  ngOnInit() {\n    this.documentosForm = this.fb.group({\n      documentos: this.fb.array([]),\n      rfc: ['', Validators.pattern(/^[A-Za-z0-9]+$/)],\n      razonSocial: ['', Validators.pattern(/^[aA-zZÁáéÉíÍóÓúÚ0-9&.,' -]+$/)],\n    });\n    this.dashboarService\n      .consultarListaTiposRechazo()\n      .subscribe((x) => (this.tiposRechazo = x));\n    this.route.params.subscribe((params) => {\n      this.idTarea = +params['id_tarea'];\n      const control = this.documentosForm.controls['documentos'] as FormArray;\n      this.estadoDocumento = this.dashboarService\n        .consultarEstadoTareaDocumental(this.idTarea)\n        .pipe(map((x: { estado: string }) => EstadoTarea[x.estado]));\n      this.dashboarService\n        .consultarTareasDocumentalesPorId(this.idTarea)\n        .subscribe(\n          (tareaDocumental: ITareaDocumental) => {\n            this.tareaDocumental = tareaDocumental;\n            const documentosBack = tareaDocumental.documentos;\n            this.uuidEmpresa = this.obtenerUUIDEmpresa(documentosBack);\n            if (documentosBack) {\n              documentosBack.sort((a, b) => b.idTarea - a.idTarea);\n              this.ultimaVersion = documentosBack[0].idTarea;\n              documentosBack.forEach((documentoBack) => {\n                control.push(\n                  this.iniciarDocumento(documentoBack, this.idTarea)\n                );\n              });\n            }\n            if (this.uuidEmpresa) {\n              this.dashboarService\n                .consultarDatosEmpresaMexico(this.uuidEmpresa)\n                .subscribe(\n                  (values: IDatosEmpresaMexicoResponse) => {\n                    this.documentosForm.patchValue({\n                      rfc: values.rfc,\n                      razonSocial: values.razonSocial,\n                    });\n                    this.documentosForm\n                      .get('documentos')\n                      .valueChanges.subscribe(\n                        () => '',\n                        (err) => console.error(err)\n                      );\n                  },\n                  (err) => {\n                    if (err.status !== 404) {\n                      this.mostarModalError();\n                      console.error('No se poseen datos existentes', err);\n                    }\n                  }\n                );\n            }\n          },\n          (error) => {\n            console.error('No se encontraron Tareas', error);\n            this.router\n              .navigate(['/dashboard'])\n              .then(() => this.mostarModalError())\n              .catch((reason) => console.error(reason));\n          }\n        );\n    });\n  }\n\n  validarEspaciosBlancos(control: AbstractControl) {\n    const valor = control.value;\n    if (valor && valor.trim() !== '') {\n      control.setValue(valor.trim());\n    }\n  }\n\n  iniciarDocumento(value, idTarea) {\n    const anexos: IAnexo[] = value.anexos.sort((a, b) => a.anexo - b.anexo);\n    return this.fb.group(\n      {\n        nombreDocumento: [value.nombreDocumento],\n        fechaCarga: [value.fechaCarga],\n        idTarea: [value.idTarea],\n        anexos: new FormControl(anexos),\n        estado: [\n          value.estado,\n          Validators.compose([Validators.required, this.validarEstado]),\n        ],\n        tipoRechazo: [value.tipoRechazo, Validators.required],\n        comentario: [value.comentario],\n        procesado: value.idTarea !== idTarea,\n        version: value.version,\n      },\n      { validator: this.validarRechazo }\n    );\n  }\n\n  esPosibleEnviarFormulario(a: boolean, b: boolean): boolean {\n    return b ? !a && b : true;\n  }\n\n  documentosFiltrados(documentos) {\n    let documentosFiltrados = [];\n\n    documentos\n      .filter((doc) => doc.idTarea === this.idTarea)\n      .forEach((value: IDocumento) => {\n        documentosFiltrados = documentosFiltrados.concat(\n          value.anexos.map((x) => ({\n            uuidDocumento: x.uuidDocumento,\n            estado: value.estado,\n            tipoRechazo: value.tipoRechazo ? value.tipoRechazo : 'DESCONOCIDO',\n            comentario: value.comentario,\n          }))\n        );\n      });\n\n    return documentosFiltrados;\n  }\n\n  seleccionadoRFC(b, a) {\n    const esRFC = new RegExp('RFC');\n    if (!esRFC.exec(a)) {\n      return;\n    }\n    b === 'APROBADO'\n      ? this.documentosForm.get('rfc').setValidators([Validators.required])\n      : this.documentosForm.get('rfc').setValidators(null);\n    this.documentosForm.get('rfc').updateValueAndValidity();\n  }\n\n  trackByFn(index, item) {\n    return index;\n  }\n\n  enviar(documentosForm: FormGroup) {\n    const formularioDatos = documentosForm.value;\n    if (documentosForm.valid && this.esperaRespuesta) {\n      const docsFiltrados = this.documentosFiltrados(\n        formularioDatos.documentos\n      );\n      const rfc: string = formularioDatos.rfc;\n      const data = {\n        uuidEmpresa: this.uuidEmpresa,\n        razonSocial: formularioDatos.razonSocial,\n        rfc,\n      };\n      this.esperaRespuesta = false;\n      this.dashboarService\n        .enviarComandoFinalizarTareaDocumental({\n          idTarea: this.idTarea,\n          documentos: docsFiltrados,\n        })\n        .then(() =>\n          rfc !== ''\n            ? this.dashboarService.registrarDatosEmpresaMexico(data)\n            : 'no registrar Datos empresa'\n        )\n        .then(() => {\n          this.esperaRespuesta = false;\n          this.mostarModalSuccess();\n          this._location.back();\n        })\n        .catch((err) => {\n          this.mostarModalError();\n          this.esperaRespuesta = true;\n        });\n    }\n  }\n\n  validarRechazo(control: AbstractControl): { [key: string]: any } {\n    const estado = control.get('estado').value;\n    const tipoRechazo = control.get('tipoRechazo').value;\n    const comentario = control.get('comentario').value;\n    if (estado === EstadosDocumento.RECHAZADO) {\n      if (tipoRechazo === 'DESCONOCIDO') {\n        return { tipoRechazo: { value: control.get('tipoRechazo').value } };\n      } else if (!comentario) {\n        return { comentario: { value: control.get('comentario').value } };\n      }\n    }\n    return null;\n  }\n\n  mostrarModal(documentoCtrl: any, soloLectura?: boolean) {\n    const estado = documentoCtrl.value['estado'];\n    const modal = this.dialog.open(ModalComentariosComponent, {\n      data: {\n        comentario: documentoCtrl.value['comentario'],\n        color: estado === EstadosDocumento.APROBADO ? 'azul' : 'naranja',\n        soloLectura: soloLectura,\n      },\n      panelClass: 'medium-screen-dialog',\n    });\n    modal.afterClosed().subscribe((nuevoComentario) => {\n      const mensaje =\n        nuevoComentario !== ' '\n          ? nuevoComentario || documentoCtrl.controls['comentario'].value\n          : null;\n      documentoCtrl.controls['comentario'].setValue(mensaje);\n    });\n    return modal;\n  }\n\n  validarEstado(control: AbstractControl): { [key: string]: any } {\n    return EstadosDocumento.PENDIENTE === control.value\n      ? { pendiente: { value: control.value } }\n      : null;\n  }\n\n  abrirModal(tipo: TiposDatoEmpresaMexico) {\n    const modal = this.dialog.open(ModalDatosEmpresaComponent, {\n      data: {\n        tipo: tipo,\n        valor: this.getFormValue(tipo),\n      },\n      panelClass: 'medium-screen-dialog',\n    });\n    modal.afterClosed().subscribe((obj) => {\n      if (obj) {\n        this.setFormValue(obj.tipo, obj.valor);\n      }\n    });\n    return modal;\n  }\n\n  getFormValue(tipo: TiposDatoEmpresaMexico) {\n    return this.documentosForm.get([tipo]).value;\n  }\n\n  private setFormValue(tipo: TiposDatoEmpresaMexico, valor: any) {\n    this.documentosForm.patchValue({ [tipo]: valor });\n  }\n\n  private obtenerUUIDEmpresa(documentosBack: IDocumento[]) {\n    if (documentosBack && documentosBack.length !== 0) {\n      return documentosBack[0].uuidEmpresa;\n    }\n    return null;\n  }\n\n  mostarModalSuccess() {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS);\n  }\n\n  mostarModalError() {\n    this.customModalService.abrirModal(CustomModalType.ERROR);\n  }\n}\n","<div>\n\n  <form [formGroup]=\"documentosForm\">\n\n    <div class=\"\">\n      <article class=\"row\">\n        <div class=\"col-md-12 navbar-top\">\n          <ul>\n            <li>\n              <a [routerLink]=\"['/dashboard']\">Bandeja de tareas</a>\n            </li>\n            <li>\n              <mat-icon class=\"icon-navigate\">navigate_next</mat-icon>\n            </li>\n            <li class=\"active\">Aprobación de documentos</li>\n          </ul>\n        </div>\n        <div class=\"col-md-12\">\n          <h1>Detalle tarea</h1>\n        </div>\n      </article>\n\n      <div class=\"card\">\n\n        <div class=\"bg-content clearfix\" *ngIf=\"tareaDocumental\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <h2>Empresa:</h2>\n            </div>\n            <div class=\"col-md-4\">\n              <span>Nombre:</span>\n              <p>{{ tareaDocumental.nombreEmpresa }}</p>\n            </div>\n\n            <div class=\"col-md-12\">\n              <h2>Representante legal:</h2>\n            </div>\n            <div class=\"col-md-4\">\n              <span>Nombre:</span>\n              <p>{{ tareaDocumental.nombreRepresentante }}</p>\n            </div>\n            <ng-container *ngIf=\"tareaDocumental.idAdministrador !== tareaDocumental.idRepresentante\">\n              <div class=\"col-md-12\">\n                <h2>Administrador:</h2>\n              </div>\n              <div class=\"col-md-4\">\n                <span>Nombre:</span>\n                <p>{{ tareaDocumental.nombreAdministrador }}</p>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12 table-responsive\">\n            <table class=\"table\">\n              <thead>\n              <tr>\n                <th>Tarea</th>\n                <th>Documento</th>\n                <th>Archivos</th>\n                <th>¿Aprobado?</th>\n                <th>Tipo de rechazo</th>\n                <th>Comentario</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr *ngFor=\"let documentoCtrl of documentosFormulario.controls; let i=index; trackBy: trackByFn\"\n                  [class.version-antigua]=\"ultimaVersion !== documentoCtrl.value['idTarea']\">\n                <ng-container formArrayName=\"documentos\">\n                  <ng-container [formGroup]=\"documentoCtrl\">\n                    <td>{{documentoCtrl.value['idTarea']}}</td>\n                    <td>\n                      <p>{{ documentoCtrl.value['nombreDocumento'] }}</p>\n                      <span>{{ documentoCtrl.value['fechaCarga'] | date:'dd/MM/yyyy'}}</span>\n                    </td>\n                    <td class=\"anexos-cell\">\n                      <app-anexos-detalle-documento\n                        [anexos]=\"documentoCtrl.value['anexos']\"></app-anexos-detalle-documento>\n                    </td>\n                    <td>\n                      <ng-container *ngIf=\"documentoCtrl.value['procesado']; else elseEstadoBlock\">\n                        <div class=\"\">{{documentoCtrl.value['estado'] === estadosDocumento.APROBADO ? 'Si': 'No'}}</div>\n                      </ng-container>\n                      <ng-template #elseEstadoBlock>\n                        <mat-radio-group class=\"radio-group\" formControlName=\"estado\"\n                                         (change)=\"seleccionadoRFC($event.value,documentoCtrl.value['nombreDocumento'])\">\n                          <mat-radio-button class=\"radio-button\" name=\"estado\" value=\"APROBADO\">Si</mat-radio-button>\n                          <mat-radio-button class=\"radio-button\" name=\"estado\" value=\"RECHAZADO\">No</mat-radio-button>\n                        </mat-radio-group>\n                      </ng-template>\n                    </td>\n                    <td>\n                      <ng-container *ngIf=\"documentoCtrl.value['procesado']; else elseTipoRechazoBlock\">\n                        <div class=\"\">{{ documentoCtrl.value['tipoRechazo'] | remplazarLetras: '_' }}</div>\n                      </ng-container>\n                      <ng-template #elseTipoRechazoBlock>\n                        <mat-form-field>\n                          <mat-select formControlName=\"tipoRechazo\"\n                                      [disabled]=\"documentoCtrl.value['estado'] === estadosDocumento.APROBADO || documentoCtrl.value['estado'] === estadosDocumento.PENDIENTE\">\n                            <mat-option *ngFor=\"let tipo of tiposRechazo\" [value]=\"tipo\">\n                              {{tipo | remplazarLetras: '_'}}\n                            </mat-option>\n                          </mat-select>\n                        </mat-form-field>\n                      </ng-template>\n                    </td>\n                    <ng-container *ngIf=\"documentoCtrl.value['procesado']; else elseComentarioBlock\">\n                      <ng-container *ngIf=\"documentoCtrl.value['comentario']; else elseComentarioSinContenidoBlock\">\n                        <td class=\"preloaded text-overflow-ellipsis\">\n                          {{ documentoCtrl.value['comentario'] }}\n                          <mat-icon class=\"icon-more\" (click)=\"mostrarModal(documentoCtrl, true)\">more_horiz</mat-icon>\n                        </td>\n                      </ng-container>\n                      <ng-template #elseComentarioSinContenidoBlock>\n                        <td class=\"disabled\"></td>\n                      </ng-template>\n                    </ng-container>\n                    <ng-template #elseComentarioBlock>\n                      <ng-container\n                        *ngIf=\"documentoCtrl.value['estado'] === estadosDocumento.PENDIENTE; else elseComentarioEstadoBlock\">\n                        <td class=\"disabled\" matTooltip=\"Hace falta aprobar o rechazar este documento.\"\n                            matTooltipClass=\"red-tooltip\"></td>\n                      </ng-container>\n                      <ng-template #elseComentarioEstadoBlock>\n                        <ng-container\n                          *ngIf=\"documentoCtrl.value['estado'] === estadosDocumento.RECHAZADO && documentoCtrl.value['tipoRechazo'] === 'DESCONOCIDO' ; else elseComentarioTipoRechazoBlock\">\n                          <td class=\"disabled\" matTooltip=\"Hace falta diligenciar el tipo de rechazo.\"\n                              matTooltipClass=\"red-tooltip\"></td>\n                        </ng-container>\n                        <ng-template #elseComentarioTipoRechazoBlock>\n                          <td class=\"text-overflow-ellipsis\">\n                            {{ documentoCtrl.value['comentario'] }}\n                            <p class=\"comentario-informar\">\n                                  <span *ngIf=\"!documentoCtrl.value['comentario']\">\n                                    Escribe un comentario\n                                  </span>\n                              <mat-icon class=\"icon-edit\" (click)=\"mostrarModal(documentoCtrl)\">edit</mat-icon>\n                            </p>\n                          </td>\n                        </ng-template>\n                      </ng-template>\n                    </ng-template>\n                  </ng-container>\n                </ng-container>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div class=\"comentarios\">\n          <div class=\"row\">\n            <div class=\"col-md-4 col-md-offset-4\">\n              <div class=\"documents\">\n                <div class=\"form-group clearfix\">\n                  <div class=\"group \" [ngClass]=\"documentosForm.get('rfc').invalid ? 'error__input': ''\">\n                    <input class=\"form-control\" formControlName=\"rfc\"\n                           (input)=\"validarEspaciosBlancos( documentosForm.get('rfc'))\">\n                    <mat-icon class=\"icon-edit mat-icon material-icons\" (click)=\"abrirModal(tiposDato.RFC)\">edit\n                    </mat-icon>\n                  </div>\n                  <label class=\"control-label\">RFC #:</label>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"form-group\">\n                <label class=\"control-label\">Razón social</label>\n                <div class=\"group\"\n                     [ngClass]=\"documentosForm.get('razonSocial').touched && documentosForm.get('razonSocial').invalid ? 'error__input': ''\">\n                  <textarea formControlName=\"razonSocial\"\n                            (blur)=\"validarEspaciosBlancos( documentosForm.get('razonSocial'))\"></textarea>\n                  <mat-icon class=\"icon-edit mat-icon material-icons\" (click)=\"abrirModal(tiposDato.RAZON_SOCIAL)\">\n                    edit\n                  </mat-icon>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\" *ngIf=\"(estadoDocumento | async) === estadoTarea.PENDIENTE\">\n              <button mat-button class=\"mat-button btns-primary align-r\"\n                      (click)=\"enviar(documentosForm)\"\n                      [disabled]=\"esPosibleEnviarFormulario(documentosForm.valid,esperaRespuesta)\">\n                Finalizar\n              </button>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </form>\n\n</div>\n","import {\n  Component,\n  OnInit,\n  Inject,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { DashboardService } from '@app/modulos/dashboard/servicios/dashboard.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-ver-archivo',\n  templateUrl: './ver-archivo.component.html',\n  styleUrls: ['./ver-archivo.component.scss'],\n})\nexport class VerArchivoComponent implements OnInit {\n  @ViewChild('iframe', { static: true }) iframe: ElementRef;\n  srcDocumento$: Observable<any>;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<VerArchivoComponent>,\n    private dashboardService: DashboardService\n  ) {\n    this.obtenerDocumento(data.idDocumento);\n  }\n\n  ngOnInit() {}\n\n  obtenerDocumento(idDocumento: string) {\n    if (idDocumento) {\n      this.srcDocumento$ = this.dashboardService.previsualizarArchivo(\n        idDocumento\n      );\n    }\n  }\n\n  onFrameLoad() {\n    const document =\n      this.iframe.nativeElement.contentDocument ||\n      this.iframe.nativeElement.contentWindow;\n    const head = document.head || document.getElementsByTagName('head')[0];\n    if (head) {\n      const style = document.createElement('style');\n      style.type = 'text/css';\n      if (style.styleSheet) {\n        style.styleSheet.cssText = 'img { width:100% }';\n      } else {\n        style.appendChild(document.createTextNode('img { width:100% }'));\n      }\n      head.appendChild(style);\n    }\n  }\n}\n","<div class=\"iframe-content\">\n  <iframe #iframe [attr.src]=\"srcDocumento$ | async \" (load)=\"onFrameLoad()\"></iframe>\n</div>\n","export enum TiposDatoEmpresaMexico {\n  RFC = 'rfc',\n  FIEL = 'fiel',\n  RAZON_SOCIAL = 'razonSocial',\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { EstadoTarea } from '@app/modulos/dashboard/modelo/enums/EstadosTarea.enum';\n\n@Component({\n  selector: 'app-modal-comentario-tarea-generica',\n  templateUrl: './modal-comentario-tarea-generica.component.html',\n  styleUrls: ['./modal-comentario-tarea-generica.component.scss'],\n})\nexport class ModalComentarioTareaGenericaComponent implements OnInit {\n  comentario: string;\n  EstadoTarea = EstadoTarea;\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalComentarioTareaGenericaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { estado: EstadoTarea }\n  ) {\n    this.comentario = '';\n  }\n\n  ngOnInit() {}\n\n  finalizar() {\n    this.dialogRef.close(this.comentario);\n  }\n\n  cancelar() {\n    this.dialogRef.close(null);\n  }\n}\n","<div class=\"modal-info\" class=\"blue\" >\n  <div class=\"modal-header omega\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"cancelar()\">\n      <mat-icon>clear</mat-icon>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <h1>Comentario</h1>\n    <div>\n      <p *ngIf=\"data.estado === EstadoTarea.FINALIZADA\">Agrega el comentario de la finalización de la tarea.</p>\n      <p *ngIf=\"data.estado === EstadoTarea.REINTENTADA\">Agrega el comentario del reintento de la tarea.</p>\n    </div>\n    <form #modalForm=\"ngForm\">\n      <textarea class=\"form-control\" id=\"comentario\" name=\"comentario\" [(ngModel)]=\"comentario\" maxlength=\"500\" required></textarea>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <div class=\"btns-footer\">\n      <button mat-button class=\"mat-button btns-secondary dark-bg\" (click)=\"finalizar()\" [disabled]=\"!modalForm.form.valid\">Enviar</button>\n      <button mat-button class=\"mat-button btns-secondary dark-bg\" (click)=\"cancelar()\">Cancelar</button>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal-comentarios',\n  templateUrl: './modal-comentarios.component.html',\n  styleUrls: ['./modal-comentarios.component.scss'],\n})\nexport class ModalComentariosComponent implements OnInit {\n  comentario: string;\n  _comentario: string;\n  color: string;\n  soloLectura: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalComentariosComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.comentario = data.comentario;\n    this._comentario = data.comentario;\n    this.color = data.color;\n    this.soloLectura = data.soloLectura;\n  }\n\n  ngOnInit() {}\n\n  enviar() {\n    this.dialogRef.close(this.comentario === '' ? ' ' : this.comentario);\n  }\n\n  cancelar() {\n    this.dialogRef.close(this._comentario);\n  }\n}\n","  <div class=\"modal-info\" [ngClass]=\" {'orange': color === 'naranja', 'blue': color === 'azul'}\" >\n      <div class=\"modal-header omega\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"cancelar()\">\n          <mat-icon>clear</mat-icon>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <h1>Comentario</h1>\n        <div *ngIf=\"color === 'naranja'; else elseComentarioBlock\">\n          <p>Agrega el motivo de la desaprobación del documento</p>\n        </div>\n        <ng-template #elseComentarioBlock>\n          <p>Agrega a continuación el comentario que desees.</p>\n        </ng-template>\n        <textarea name=\"comentario\" [(ngModel)]=\"comentario\" maxlength=\"255\" [disabled]=\"soloLectura\"></textarea>\n      </div>\n      <div class=\"modal-footer\" *ngIf=\"!soloLectura\" >\n        <div class=\"btns-footer\">\n          <button mat-button class=\"mat-button btns-secondary dark-bg\" (click)=\"enviar()\">Enviar</button>\n          <button mat-button class=\"mat-button btns-secondary dark-bg\" (click)=\"cancelar()\">Cancelar</button>\n      </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DashboardService } from '../../servicios/dashboard.service';\nimport { ITareaGenerica } from '../../modelo/interfaces/ITareaGenerica.type';\nimport { CustomModalType } from '../../modelo/enums/CustomModalTypes.enum';\nimport { CustomModalService } from '../../../../shared/servicios/custom-modal.service';\nimport { IEmpleadoRestringido } from '../../modelo/interfaces/IEmpleadoRestringido.type';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { INombreEmpresa } from '../../modelo/interfaces/INombreEmpresa.type';\nimport { EstadoTareaEmpleadoBloqueado } from '../../modelo/enums/EstadoTareaEmpleadoBloqueado.enum';\nimport { flatMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tarea-revision-listas-negras',\n  templateUrl: './tarea-revision-listas-negras.component.html',\n  styleUrls: ['./tarea-revision-listas-negras.component.scss'],\n})\nexport class TareaRevisionListasNegrasComponent implements OnInit {\n  detalleTarea: ITareaGenerica;\n  datosEmpleado: IEmpleadoRestringido;\n  form: FormGroup;\n  cargando = false;\n  nombreEmpresa$: Observable<INombreEmpresa>;\n  EstadoTareaEmpleadoBloqueado = EstadoTareaEmpleadoBloqueado;\n\n  constructor(\n    public dashboarService: DashboardService,\n    private location: Location,\n    private fb: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private customModalService: CustomModalService\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      aceptaListasNegras: this.fb.control(null, Validators.required),\n    });\n    this.route.params\n      .pipe(\n        flatMap((params) => {\n          const idTarea = +params.id_tarea;\n          return this.dashboarService.consultarTareaPorId(idTarea);\n        })\n      )\n      .subscribe(\n        (tarea) => {\n          this.detalleTarea = tarea;\n          this.datosEmpleado = this.detalleTarea.datos as IEmpleadoRestringido;\n          this.nombreEmpresa$ = this.dashboarService.consultarNombreEmpresaDeUsuario(\n            this.datosEmpleado.idUsuario\n          );\n        },\n        (error) => {\n          this.router\n            .navigate(['/dashboard'])\n            .then(() => this.mostarModalError())\n            .catch((reason) => console.error(reason));\n          return console.error('ERROR consulta tarea generica', error);\n        }\n      );\n  }\n\n  guardar() {\n    if (this.form.valid) {\n      this.cargando = true;\n      const estado: EstadoTareaEmpleadoBloqueado = this.form.getRawValue()\n        .aceptaListasNegras;\n      this.dashboarService\n        .enviarComandoFinalizarTareaRevisionListasNegras({\n          idTarea: this.detalleTarea.id,\n          idUsuario: this.datosEmpleado.idUsuario,\n          estado,\n        })\n        .then(() => {\n          this.cargando = false;\n          this.mostarModalSuccess();\n          this.location.back();\n        })\n        .catch((err) => {\n          this.cargando = false;\n          this.mostarModalError();\n        });\n    }\n  }\n\n  mostarModalSuccess() {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS);\n  }\n\n  mostarModalError() {\n    this.customModalService.abrirModal(CustomModalType.ERROR);\n  }\n}\n","<div *ngIf=\"detalleTarea\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"navbar-top\">\n        <ul>\n          <li>\n            <a [routerLink]=\"['/dashboard']\">Bandeja de tareas</a>\n          </li>\n          <li>\n            <mat-icon class=\"icon-navigate\">navigate_next</mat-icon>\n          </li>\n          <li class=\"active\">{{ detalleTarea.tipo | humanize }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h1 i18n>Revision de listas negras</h1>\n    </div>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"row\">\n      <h4>Datos de la tarea:</h4>\n      <div class=\"col-md-4\">\n        <span>Tarea Número</span>\n        <p>{{ detalleTarea.id }}</p>\n      </div>\n      <div class=\"col-md-4\">\n        <span>Fecha de creación</span>\n        <p>{{ detalleTarea.fechaCreacion | date:'yyyy-MM-dd HH:mm' }}</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bg-content clearfix\">\n        <div class=\"col-md-12\">\n          <h2>Tarea:</h2>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Nombre</span>\n          <p>{{ detalleTarea.nombre }}</p>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Evento</span>\n          <p>{{ detalleTarea.nombreEvento }}</p>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"detalleTarea.datos && (detalleTarea.datos | json) != ({} | json)\">\n      <div class=\"row\">\n        <h4>Datos del usuario:</h4>\n        <div class=\"col-md-4\">\n          <span>Nombre</span>\n          <p>{{datosEmpleado.primerNombre}} {{datosEmpleado.otrosNombres}} {{datosEmpleado.primerApellido}}\n            {{datosEmpleado.segundoApellido}}</p>\n        </div>\n        <div class=\"col-md-4\" *ngIf=\"datosEmpleado.correo\">\n          <span>Correo</span>\n          <p>{{datosEmpleado.correo}}</p>\n        </div>\n        <div class=\"col-md-4\" *ngIf=\"datosEmpleado.celular\">\n          <span>Celular</span>\n          <p>{{datosEmpleado.celular}}</p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-4\" *ngIf=\"datosEmpleado.rfc || datosEmpleado.identificacion\">\n          <span i18n>RFC</span>\n          <p>{{datosEmpleado.rfc || datosEmpleado.identificacion}}</p>\n        </div>\n        <div class=\"col-md-4\" *ngIf=\"nombreEmpresa$ | async as empresa\">\n          <span>Empresa</span>\n          <p>{{empresa.nombre}}</p>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Id de Usuario</span>\n          <p>{{datosEmpleado.idUsuario}}</p>\n        </div>\n      </div>\n    </ng-container>\n    <br>\n    <form [formGroup]=\"form\" id=\"formularioEmpleadoBloqueado\">\n      <div class=\"row\">\n        <h4 i18n>Selecciona si desea autorizar al usuario para usar qiip</h4>\n        <div class=\"col-md-4\">\n\n          <mat-radio-group formControlName=\"aceptaListasNegras\">\n            <mat-radio-button id=\"opcionAceptar\" [value]=\"EstadoTareaEmpleadoBloqueado.APROBADO\">Si</mat-radio-button>\n            <mat-radio-button id=\"opcionRechazar\" [value]=\"EstadoTareaEmpleadoBloqueado.RESTRINGIDO\">No</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n      <br>\n      <hr>\n      <br>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <button mat-button class=\"mat-button btns-primary align-r\" id=\"botonFinalizar\" (click)=\"guardar()\"\n                  [disabled]=\"!form.valid || cargando\">Finalizar\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","export enum TiposDeDescargas {\n  DOCUMENTAL,\n  CONSTANCIA_FISCAL,\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DashboardService } from '@app/modulos/dashboard/servicios/dashboard.service';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { flatMap, map, tap } from 'rxjs/operators';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { ITareaRevisionDocumento } from '@dashboard/modelo/interfaces/ITareaRevisionDocumento.type';\nimport { fromPromise } from 'rxjs/internal-compatibility';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { EstadoTarea } from '@dashboard/modelo/enums/EstadosTarea.enum';\nimport { ModalComentarioTareaGenericaComponent } from '@dashboard/componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component';\nimport { VerArchivoComponent } from '@dashboard/componentes/ver-archivo/ver-archivo.component';\nimport { IDocumentoUsuario } from '@dashboard/modelo/interfaces/IDocumentoUsuario.type';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-tarea-documentos',\n  templateUrl: './tarea-documentos.component.html',\n  styleUrls: ['./tarea-documentos.component.scss'],\n})\nexport class TareaDocumentosComponent implements OnInit {\n  tareaDocumental: ITareaRevisionDocumento;\n  idTarea: number;\n  bloquearBoton = false;\n  EstadoTarea = EstadoTarea;\n\n  pageSizeOptions = [10, 25, 50, 100];\n  columnas: string[] = [\n    'id',\n    'codigoTipoDocumento',\n    'tipoArchivo',\n    'fechaCreacion',\n    'acciones',\n  ];\n  dataSource: MatTableDataSource<any>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(\n    public router: Router,\n    public dialog: MatDialog,\n    private location: Location,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private dashboarService: DashboardService,\n    private customModalService: CustomModalService\n  ) {}\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource([]);\n    this.consultarDatos();\n  }\n\n  consultarDatos() {\n    this.route.params\n      .pipe(\n        map((value) => value.idTarea),\n        tap((idTarea) => (this.idTarea = idTarea)),\n        flatMap((idTarea) =>\n          idTarea\n            ? fromPromise(\n                this.dashboarService.consultarTareaRevisionDocumentos(idTarea)\n              )\n            : throwError('Id no definido')\n        )\n      )\n      .subscribe(\n        (value) => {\n          if (EstadoTarea[value.estadoTarea] === EstadoTarea.FINALIZADA) {\n            this.router.navigate(['/dashboard']);\n          }\n          this.tareaDocumental = value;\n          this.dataSource = new MatTableDataSource(\n            this.tareaDocumental.documentos\n          );\n        },\n        (error) => {\n          console.error(\n            'Error consultando tarea de revision de documentos:',\n            error\n          );\n          this.mostarModalError();\n          return this.router.navigate(['/dashboard']);\n        }\n      );\n  }\n\n  mostarModalSuccess() {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS);\n  }\n\n  mostarModalError() {\n    this.customModalService.abrirModal(CustomModalType.ERROR);\n  }\n\n  verDocumento(documento: IDocumentoUsuario) {\n    this.dialog.open(VerArchivoComponent, {\n      height: '70%',\n      width: '50%',\n      data: {\n        idDocumento: documento.id,\n      },\n    });\n  }\n\n  descargarDocumento(documento: IDocumentoUsuario) {\n    this.dashboarService\n      .descargarDocumento(documento.id, 'archivo_' + documento.id)\n      .subscribe((x) => {\n        console.log('Documento descargado', x);\n      });\n  }\n\n  abrirModalComentario() {\n    const modal = this.abrirModal();\n    modal.afterClosed().subscribe((comentario) => {\n      return this.finalizarTarea(comentario);\n    });\n    return modal;\n  }\n\n  abrirModal() {\n    return this.dialog.open(ModalComentarioTareaGenericaComponent, {\n      data: {},\n      panelClass: 'medium-screen-dialog',\n    });\n  }\n\n  finalizarTarea(comentario: string): Promise<any> {\n    if (comentario) {\n      this.bloquearBoton = true;\n      return this.dashboarService\n        .finalizarTareaGenerica({\n          idTarea: this.idTarea,\n          comentario,\n        })\n        .then(() => {\n          this.mostarModalSuccess();\n          return this.router.navigate(['/dashboard']);\n        })\n        .catch((err) => {\n          console.error('Error finalizando tarea: ', err);\n          this.mostarModalError();\n        })\n        .finally(() => (this.bloquearBoton = false));\n    }\n  }\n}\n","<div *ngIf=\"tareaDocumental\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"navbar-top\">\n        <ul>\n          <li>\n            <a [routerLink]=\"['/dashboard']\">Bandeja de tareas</a>\n          </li>\n          <li>\n            <mat-icon class=\"icon-navigate\">navigate_next</mat-icon>\n          </li>\n          <li class=\"active\"> Revision de documentos </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h1>{{ tareaDocumental.nombreCompletoUsuario | humanize }}</h1>\n    </div>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"row\">\n      <div class=\"bg-content clearfix\">\n        <div class=\"col-md-12\">\n          <h2>Tarea: {{ idTarea }}</h2>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Correo</span>\n          <p>{{ tareaDocumental.correoUsuario }}</p>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Telefono</span>\n          <p>{{ tareaDocumental.telefonoUsuario }}</p>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Id usuario</span>\n          <p>{{ tareaDocumental.idUsuario }}</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"table-content\">\n          <p id=\"mydesc\">Documentos:</p>\n          <table class=\"mat-elevation-z8\" mat-table [dataSource]=\"dataSource\" matSort aria-describedby=\"mydesc\">\n            <ng-container matColumnDef=\"id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"id\"> ID </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"codigoTipoDocumento\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"tipo\"> Tipo Documento </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.codigoTipoDocumento}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"tipoArchivo\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"tipoArchivo\"> Tipo Archivo </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.tipoArchivo}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"fechaCreacion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header id=\"fecha\"> Fecha </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.fechaCreacion | date:'yyyy/MM/dd HH:mm:ss'}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"acciones\">\n              <th mat-header-cell *matHeaderCellDef id=\"acciones\"> Acciones </th>\n              <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button color=\"primary\" (click)=\"verDocumento(element)\">\n                  <mat-icon>preview</mat-icon>\n                </button>\n                <button mat-icon-button color=\"primary\" (click)=\"descargarDocumento(element)\">\n                  <mat-icon>cloud_download</mat-icon>\n                </button>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnas\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: columnas;\"></tr>\n          </table>\n        </div>\n      </div>\n    </div>\n    <br>\n    <br>\n    <div class=\"row\" *ngIf=\"tareaDocumental.datos && (tareaDocumental.datos | json) != ({} | json)\">\n      <div class=\"bg-content clearfix\">\n        <div class=\"col-md-12\">\n          <h2>Datos</h2>\n          <pre>{{ tareaDocumental.datos | json }}</pre>\n        </div>\n    </div>\n    <br>\n    <hr>\n    <br>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button mat-button class=\"mat-button btns-primary align-r\"\n                (click)=\"abrirModalComentario()\"\n                *ngIf=\"tareaDocumental.estadoTarea === 'PENDIENTE'\"\n                [disabled]=\"bloquearBoton\">Finalizar</button>\n      </div>\n    </div>\n  </div>\n</div>\n"]}