{"version":3,"sources":["webpack:///src/app/modulos/comercial/vista/seleccionar-tipo-empresa/seleccionar-tipo-empresa.component.ts","webpack:///src/app/modulos/comercial/vista/seleccionar-tipo-empresa/seleccionar-tipo-empresa.component.html","webpack:///src/app/modulos/comercial/validador/expresionesRegulares.ts","webpack:///src/app/modulos/comercial/componentes/menu-izquierdo/menu-izquierdo.component.ts","webpack:///src/app/modulos/comercial/componentes/menu-izquierdo/menu-izquierdo.component.html","webpack:///src/app/modulos/comercial/comercial.module.ts","webpack:///src/app/modulos/comercial/modelo/tipo-identificacion-empresa.enum.ts","webpack:///node_modules/ngx-uploader/fesm2015/ngx-uploader.js","webpack:///src/app/modulos/comercial/comercial.component.ts","webpack:///src/app/modulos/comercial/comercial.component.html","webpack:///src/app/modulos/comercial/modelo/tipo-notificacion.enum.ts","webpack:///src/app/modulos/comercial/componentes/registro-empresa-mexico/registro-empresa-mexico.component.ts","webpack:///src/app/modulos/comercial/componentes/registro-empresa-mexico/registro-empresa-mexico.component.html","webpack:///src/app/modulos/comercial/componentes/subir-layout/subir-layout.component.ts","webpack:///src/app/modulos/comercial/componentes/subir-layout/subir-layout.component.html","webpack:///src/app/modulos/comercial/validador/registro-empresa.validador.ts","webpack:///src/app/modulos/comercial/vista/notificar/notificar.component.ts","webpack:///src/app/modulos/comercial/vista/notificar/notificar.component.html","webpack:///src/app/modulos/comercial/componentes/registro-empresa-colombia/registro-empresa-colombia.component.ts","webpack:///src/app/modulos/comercial/componentes/registro-empresa-colombia/registro-empresa-colombia.component.html"],"names":["SeleccionarTipoEmpresaComponent","PaisAmbiente","pais","envCountry","selector","templateUrl","styleUrls","validarTextoSinNumero","pattern","minLength","maxLength","MenuIzquierdoComponent","router","opcionSeleccionada","home","lista","notificaciones","events","subscribe","val","obtenerSeccionSeleccionada","url","includes","seleccionarOption","nombre","abrirMenu","isAdmin","routes","path","component","children","pathMatch","canLoad","data","paises","MX","redirectTo","ComercialModule","forChild","declarations","imports","TipoIdentificacionEmpresa","UploadStatus","humanizeBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","NgUploaderService","concurrency","Number","POSITIVE_INFINITY","contentTypes","maxUploads","maxFileSize","queue","serviceEvents","uploadScheduler","subs","pipe","upload","startUpload","uploadOutput","emit","incomingFiles","allowedIncomingFiles","reduce","call","acc","checkFile","futureQueueLength","length","isContentTypeAllowed","type","isFileSizeAllowed","size","concat","rejectedFile","makeUploadFile","file","push","map","uploadFile","input","event","uploadFileIndex","findIndex","next","files","filter","progress","status","Queue","forEach","id","sub","unsubscribe","fileIndex","Cancelled","find","splice","observer","closed","complete","output","err","error","method","headers","xhr","XMLHttpRequest","time","Date","getTime","progressStartTime","startTime","speed","eta","addEventListener","e","lengthComputable","percentage","round","loaded","total","diff","ceil","Uploading","speedHuman","endTime","etaHuman","secondsToHuman","onreadystatechange","readyState","DONE","speedAverage","Done","responseStatus","response","JSON","parse","responseHeaders","parseResponseHeaders","getAllResponseHeaders","open","withCredentials","nativeFile","uploadIndex","outFile","Object","keys","key","setRequestHeader","bodyToSend","includeWebKitFormBoundary","form","append","fieldName","name","send","abort","sec","toISOString","substr","random","toString","substring","Array","undefined","mimetype","allContentTypesAllowed","fileSize","index","generateId","FormData","lastModifiedDate","lastModified","httpHeaders","split","x","NgFileDropDirective","elementRef","stopEvent","stopPropagation","preventDefault","_sub","options","allowedContentTypes","el","nativeElement","uploadInput","initInputEvents","handleFiles","dataTransfer","ɵfac","NgFileDropDirective_Factory","t","ɵdir","selectors","hostBindings","NgFileDropDirective_HostBindings","rf","ctx","NgFileDropDirective_drop_HostBindingHandler","$event","onDrop","NgFileDropDirective_dragover_HostBindingHandler","onDragOver","NgFileDropDirective_dragleave_HostBindingHandler","onDragLeave","inputs","outputs","ctorParameters","propDecorators","args","NgFileSelectDirective","fileListener","removeEventListener","NgFileSelectDirective_Factory","NgxUploaderModule","ɵmod","ɵinj","factory","NgxUploaderModule_Factory","ngJitMode","exports","ComercialComponent","store","cargandoService","cookiesService","username$","select","cargando$","cargar$","asObservable","sideNav","openedChange","opened","obtenerEstadoMenu","close","obtenerInformacionCookie","mostarMenu","guardarInformacionCookie","actualizarEstadoMenu","TipoNotificacion","RegistroEmpresaMexicoComponent","fb","apiService","customModal","cargando","formularioEmpresa","crearFormulario","group","identificacion","control","required","tipoIdEmpresa","nombreAdministrador","totalEmpleados","min","max","correoAdministrador","validarEmailCampo","validator","updateOn","valid","value","userSub","registrarEmpresa","result","codigoPais","idUsuario","post","then","abrirModal","SUCCESS","mensaje","reset","codigo","ERROR","valor","setValue","trim","markAsDirty","get","regExpr","RegExp","emailValue","test","String","toLowerCase","enviarFormulario","validarEnBlur","validarEnBlurYHacerTrim","SubirLayoutComponent","customModalService","endPoint","enviarEstadoLayout","empresaSubscription","validarTipoDeArchivo","setTimeout","eliminarDocumento","estado","estadoSubidaDocumento","_disabled","cargaExcelExitosa","mostrarModalErrorValidacion","mostrarModalErrorPersonalizado","mostrarModalError","some","body","getCurrentSesion","sesion","accessToken","getAccessToken","jwt","getJwtToken","endPointNotificacion","dialog","afterClosed","errorValidacion","respuesta","onUploadOutput","disabled","identificacionColombiaValidador","tipoIdentificacion","tipoIdentificacionControl","controls","identificacionControl","NIT","validNit","invalidNIT","validCedula","invalidCedula","identificacionMexicoValidador","REGISTRO_PATRONAL","validRP","invalidRegistroPatronal","validRFC","invalidRFC","NotificarComponent","http","limitesMensaje","SMS","PUSH","CORREO","formulario","obtenerAcciones","titulo","tipo","campana","accion","descripcion","checkTodos","datosFormulario","idCampania","medios","todos","cargaArchivo","enviarPeticionTodos","mediosSeleccionados","medio","setValidators","updateValueAndValidity","httpOptions","toPromise","acciones","actualizaValidaciones","seleccionCambio","RegistroEmpresaColombiaComponent","correo"],"mappings":"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","file":"modulos-comercial-comercial-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { PaisAmbiente } from '@app/shared/modelos/enums/paisAmbiente.enum';\n\n@Component({\n  selector: 'app-seleccionar-tipo-empresa',\n  templateUrl: './seleccionar-tipo-empresa.component.html',\n  styleUrls: ['./seleccionar-tipo-empresa.component.scss'],\n})\nexport class SeleccionarTipoEmpresaComponent implements OnInit {\n  pais: PaisAmbiente;\n  PaisAmbiente = PaisAmbiente;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.pais = environment.envCountry as PaisAmbiente;\n  }\n}\n","<ng-container [ngSwitch]=\"pais\">\n  <app-registro-empresa-mexico *ngSwitchCase=\"PaisAmbiente.MX\"></app-registro-empresa-mexico>\n  <app-registro-empresa-colombia *ngSwitchCase=\"PaisAmbiente.CO\"></app-registro-empresa-colombia>\n</ng-container>\n","import { Validators, ValidatorFn } from '@angular/forms';\n\nexport const validarTextoSinNumero: ValidatorFn[] = [\n  Validators.pattern(\n    /^[a-zA-Z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0178][a-zA-Z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0178\\.\\- ']*$/\n  ),\n  Validators.minLength(2),\n  Validators.maxLength(70),\n];\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PaisAmbiente } from '@app/shared/modelos/enums/paisAmbiente.enum';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-menu-izquierdo',\n  templateUrl: './menu-izquierdo.component.html',\n  styleUrls: ['./menu-izquierdo.component.scss'],\n})\nexport class MenuIzquierdoComponent implements OnInit {\n  @Input() abrirMenu: boolean;\n  @Input() isAdmin: boolean;\n  opcionSeleccionada: any = {\n    home: false,\n    lista: false,\n    notificaciones: false,\n  };\n  pais: PaisAmbiente;\n  PaisAmbiente = PaisAmbiente;\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    this.router.events.subscribe((val: any) => {\n      this.obtenerSeccionSeleccionada(val.url);\n    });\n    this.pais = environment.envCountry as PaisAmbiente;\n  }\n\n  obtenerSeccionSeleccionada(url: string) {\n    if (url) {\n      if (url.includes('invitaciones-empresa')) {\n        this.seleccionarOption('lista');\n      } else if (url.includes('notificaciones')) {\n        this.seleccionarOption('notificaciones');\n      } else {\n        this.seleccionarOption('home');\n      }\n    }\n  }\n\n  seleccionarOption(nombre: string) {\n    this.opcionSeleccionada = {};\n    this.opcionSeleccionada[nombre] = true;\n  }\n}\n","<ng-container>\n  <div class=\"side-bar side-bar-open\" *ngIf=\"abrirMenu\">\n    <button mat-button routerLink=\"/comercial\" [class.es-seleccionado]=\"opcionSeleccionada.home\">\n      <mat-icon>contact_mail</mat-icon>\n      Registrar empresa\n    </button>\n    <button mat-button routerLink=\"/comercial/invitaciones-empresa\" [class.es-seleccionado]=\"opcionSeleccionada.lista\" *ngIf=\"pais === PaisAmbiente.MX\">\n      <mat-icon>list</mat-icon>\n      Invitaciones empresa\n    </button>\n    <button mat-button routerLink=\"/comercial/notificaciones\" [class.es-seleccionado]=\"opcionSeleccionada.notificaciones\">\n      <mat-icon>notifications</mat-icon>\n      Notificaciones\n    </button>\n  </div>\n  <div class=\"side-bar side-bar-collapsed\" *ngIf=\"!abrirMenu\">\n    <button mat-button routerLink=\"/comercial\" [class.es-seleccionado]=\"opcionSeleccionada.home\">\n      <mat-icon>contact_mail</mat-icon>\n    </button>\n    <button mat-button routerLink=\"/comercial/invitaciones-empresa\" [class.es-seleccionado]=\"opcionSeleccionada.lista\" *ngIf=\"pais === PaisAmbiente.MX\">\n      <mat-icon>list</mat-icon>\n    </button>\n    <button mat-button routerLink=\"/comercial/notificaciones\" [class.es-seleccionado]=\"opcionSeleccionada.notificaciones\">\n      <mat-icon>notifications</mat-icon>\n    </button>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComercialComponent } from './comercial.component';\nimport { SeleccionarTipoEmpresaComponent } from './vista/seleccionar-tipo-empresa/seleccionar-tipo-empresa.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegistroEmpresaMexicoComponent } from './componentes/registro-empresa-mexico/registro-empresa-mexico.component';\nimport { RegistroEmpresaColombiaComponent } from './componentes/registro-empresa-colombia/registro-empresa-colombia.component';\nimport { MenuIzquierdoComponent } from './componentes/menu-izquierdo/menu-izquierdo.component';\nimport { NotificarComponent } from './vista/notificar/notificar.component';\nimport { SubirLayoutComponent } from './componentes/subir-layout/subir-layout.component';\nimport { NgxUploaderModule } from 'ngx-uploader';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { PaisAmbienteGuard } from '../../core/guards/pais-ambiente.guard';\nimport { PaisAmbiente } from '../../shared/modelos/enums/paisAmbiente.enum';\nimport { InvitacionesEmpresaComponent } from '../../shared/componentes/invitaciones-empresa/invitaciones-empresa.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComercialComponent,\n    children: [\n      {\n        path: '',\n        component: SeleccionarTipoEmpresaComponent,\n        pathMatch: 'full',\n      },\n      {\n        path: 'invitaciones-empresa',\n        component: InvitacionesEmpresaComponent,\n        canLoad: [PaisAmbienteGuard],\n        data: { paises: [PaisAmbiente.MX] },\n      },\n      {\n        path: 'notificaciones',\n        component: NotificarComponent,\n      },\n      { path: '**', redirectTo: 'login' },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [\n    ComercialComponent,\n    SeleccionarTipoEmpresaComponent,\n    RegistroEmpresaMexicoComponent,\n    RegistroEmpresaColombiaComponent,\n    MenuIzquierdoComponent,\n    NotificarComponent,\n    SubirLayoutComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    NgxUploaderModule,\n    HttpClientModule,\n  ],\n})\nexport class ComercialModule {}\n","export enum TipoIdentificacionEmpresa {\n  REGISTRO_PATRONAL = 'REGISTRO_PATRONAL',\n  RFC = 'RFC',\n  NIT = 'NIT',\n  CEDULA = 'CEDULA',\n}\n","import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { mergeMap, finalize } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nvar UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[UploadStatus[\"Queue\"] = 0] = \"Queue\";\n    UploadStatus[UploadStatus[\"Uploading\"] = 1] = \"Uploading\";\n    UploadStatus[UploadStatus[\"Done\"] = 2] = \"Done\";\n    UploadStatus[UploadStatus[\"Cancelled\"] = 3] = \"Cancelled\";\n})(UploadStatus || (UploadStatus = {}));\n\nfunction humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nclass NgUploaderService {\n    constructor(concurrency = Number.POSITIVE_INFINITY, contentTypes = ['*'], maxUploads = Number.POSITIVE_INFINITY, maxFileSize = Number.POSITIVE_INFINITY) {\n        this.queue = [];\n        this.serviceEvents = new EventEmitter();\n        this.uploadScheduler = new Subject();\n        this.subs = [];\n        this.contentTypes = contentTypes;\n        this.maxUploads = maxUploads;\n        this.maxFileSize = maxFileSize;\n        this.uploadScheduler\n            .pipe(mergeMap(upload => this.startUpload(upload), concurrency))\n            .subscribe(uploadOutput => this.serviceEvents.emit(uploadOutput));\n    }\n    handleFiles(incomingFiles) {\n        const allowedIncomingFiles = [].reduce.call(incomingFiles, (acc, checkFile, i) => {\n            const futureQueueLength = acc.length + this.queue.length + 1;\n            if (this.isContentTypeAllowed(checkFile.type) &&\n                futureQueueLength <= this.maxUploads &&\n                this.isFileSizeAllowed(checkFile.size)) {\n                acc = acc.concat(checkFile);\n            }\n            else {\n                const rejectedFile = this.makeUploadFile(checkFile, i);\n                this.serviceEvents.emit({ type: 'rejected', file: rejectedFile });\n            }\n            return acc;\n        }, []);\n        this.queue.push(...[].map.call(allowedIncomingFiles, (file, i) => {\n            const uploadFile = this.makeUploadFile(file, i);\n            this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n            return uploadFile;\n        }));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n    }\n    initInputEvents(input) {\n        return input.subscribe((event) => {\n            switch (event.type) {\n                case 'uploadFile':\n                    const uploadFileIndex = this.queue.findIndex(file => file === event.file);\n                    if (uploadFileIndex !== -1 && event.file) {\n                        this.uploadScheduler.next({ file: this.queue[uploadFileIndex], event: event });\n                    }\n                    break;\n                case 'uploadAll':\n                    const files = this.queue.filter(file => file.progress.status === UploadStatus.Queue);\n                    files.forEach(file => this.uploadScheduler.next({ file: file, event: event }));\n                    break;\n                case 'cancel':\n                    const id = event.id || null;\n                    if (!id) {\n                        return;\n                    }\n                    const subs = this.subs.filter(sub => sub.id === id);\n                    subs.forEach(sub => {\n                        if (sub.sub) {\n                            sub.sub.unsubscribe();\n                            const fileIndex = this.queue.findIndex(file => file.id === id);\n                            if (fileIndex !== -1) {\n                                this.queue[fileIndex].progress.status = UploadStatus.Cancelled;\n                                this.serviceEvents.emit({ type: 'cancelled', file: this.queue[fileIndex] });\n                            }\n                        }\n                    });\n                    break;\n                case 'cancelAll':\n                    this.subs.forEach(sub => {\n                        if (sub.sub) {\n                            sub.sub.unsubscribe();\n                        }\n                        const file = this.queue.find(uploadFile => uploadFile.id === sub.id);\n                        if (file) {\n                            file.progress.status = UploadStatus.Cancelled;\n                            this.serviceEvents.emit({ type: 'cancelled', file: file });\n                        }\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    const i = this.queue.findIndex(file => file.id === event.id);\n                    if (i !== -1) {\n                        const file = this.queue[i];\n                        this.queue.splice(i, 1);\n                        this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (this.queue.length) {\n                        this.queue = [];\n                        this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    }\n    startUpload(upload) {\n        return new Observable(observer => {\n            const sub = this.uploadFile(upload.file, upload.event)\n                .pipe(finalize(() => {\n                if (!observer.closed) {\n                    observer.complete();\n                }\n            }))\n                .subscribe(output => {\n                observer.next(output);\n            }, err => {\n                observer.error(err);\n                observer.complete();\n            }, () => {\n                observer.complete();\n            });\n            this.subs.push({ id: upload.file.id, sub: sub });\n        });\n    }\n    uploadFile(file, event) {\n        return new Observable(observer => {\n            const url = event.url || '';\n            const method = event.method || 'POST';\n            const data = event.data || {};\n            const headers = event.headers || {};\n            const xhr = new XMLHttpRequest();\n            const time = new Date().getTime();\n            let progressStartTime = (file.progress.data && file.progress.data.startTime) || time;\n            let speed = 0;\n            let eta = null;\n            xhr.upload.addEventListener('progress', (e) => {\n                if (e.lengthComputable) {\n                    const percentage = Math.round((e.loaded * 100) / e.total);\n                    const diff = new Date().getTime() - time;\n                    speed = Math.round((e.loaded / diff) * 1000);\n                    progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n                    eta = Math.ceil((e.total - e.loaded) / speed);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: `${humanizeBytes(speed)}/s`,\n                            startTime: progressStartTime,\n                            endTime: null,\n                            eta: eta,\n                            etaHuman: this.secondsToHuman(eta)\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', (e) => {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    const speedAverage = Math.round((file.size / (new Date().getTime() - progressStartTime)) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: `${humanizeBytes(speedAverage)}/s`,\n                            startTime: progressStartTime,\n                            endTime: new Date().getTime(),\n                            eta: eta,\n                            etaHuman: this.secondsToHuman(eta || 0)\n                        }\n                    };\n                    file.responseStatus = xhr.status;\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    file.responseHeaders = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            try {\n                const uploadFile = file.nativeFile;\n                const uploadIndex = this.queue.findIndex(outFile => outFile.nativeFile === uploadFile);\n                if (this.queue[uploadIndex].progress.status === UploadStatus.Cancelled) {\n                    observer.complete();\n                }\n                Object.keys(headers).forEach(key => xhr.setRequestHeader(key, headers[key]));\n                let bodyToSend;\n                if (event.includeWebKitFormBoundary !== false) {\n                    Object.keys(data).forEach(key => file.form.append(key, data[key]));\n                    file.form.append(event.fieldName || 'file', uploadFile, uploadFile.name);\n                    bodyToSend = file.form;\n                }\n                else {\n                    bodyToSend = uploadFile;\n                }\n                this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(bodyToSend);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return () => {\n                xhr.abort();\n            };\n        });\n    }\n    secondsToHuman(sec) {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    }\n    generateId() {\n        return Math.random().toString(36).substring(7);\n    }\n    setContentTypes(contentTypes) {\n        if (typeof contentTypes !== 'undefined' && contentTypes instanceof Array) {\n            if (contentTypes.find((type) => type === '*') !== undefined) {\n                this.contentTypes = ['*'];\n            }\n            else {\n                this.contentTypes = contentTypes;\n            }\n            return;\n        }\n        this.contentTypes = ['*'];\n    }\n    allContentTypesAllowed() {\n        return this.contentTypes.find((type) => type === '*') !== undefined;\n    }\n    isContentTypeAllowed(mimetype) {\n        if (this.allContentTypesAllowed()) {\n            return true;\n        }\n        return this.contentTypes.find((type) => type === mimetype) !== undefined;\n    }\n    isFileSizeAllowed(fileSize) {\n        if (!this.maxFileSize) {\n            return true;\n        }\n        return fileSize <= this.maxFileSize;\n    }\n    makeUploadFile(file, index) {\n        return {\n            fileIndex: index,\n            id: this.generateId(),\n            name: file.name,\n            size: file.size,\n            type: file.type,\n            form: new FormData(),\n            progress: {\n                status: UploadStatus.Queue,\n                data: {\n                    percentage: 0,\n                    speed: 0,\n                    speedHuman: `${humanizeBytes(0)}/s`,\n                    startTime: null,\n                    endTime: null,\n                    eta: null,\n                    etaHuman: null\n                }\n            },\n            lastModifiedDate: new Date(file.lastModified),\n            sub: undefined,\n            nativeFile: file\n        };\n    }\n    parseResponseHeaders(httpHeaders) {\n        if (!httpHeaders) {\n            return;\n        }\n        return httpHeaders\n            .split('\\n')\n            .map((x) => x.split(/: */, 2))\n            .filter((x) => x[0])\n            .reduce((acc, x) => {\n            acc[x[0]] = x[1];\n            return acc;\n        }, {});\n    }\n}\n\nclass NgFileDropDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.uploadOutput = new EventEmitter();\n    }\n    ngOnInit() {\n        this._sub = [];\n        const concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        const allowedContentTypes = this.options && this.options.allowedContentTypes || ['*'];\n        const maxUploads = this.options && this.options.maxUploads || Number.POSITIVE_INFINITY;\n        const maxFileSize = this.options && this.options.maxFileSize || Number.POSITIVE_INFINITY;\n        this.upload = new NgUploaderService(concurrency, allowedContentTypes, maxUploads, maxFileSize);\n        this.el = this.elementRef.nativeElement;\n        this._sub.push(this.upload.serviceEvents.subscribe((event) => {\n            this.uploadOutput.emit(event);\n        }));\n        if (this.uploadInput instanceof EventEmitter) {\n            this._sub.push(this.upload.initInputEvents(this.uploadInput));\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    }\n    ngOnDestroy() {\n        this._sub.forEach(sub => sub.unsubscribe());\n    }\n    onDrop(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        const event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    }\n    onDragOver(e) {\n        if (!e) {\n            return;\n        }\n        const event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    }\n    onDragLeave(e) {\n        if (!e) {\n            return;\n        }\n        const event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    }\n}\nNgFileDropDirective.ɵfac = function NgFileDropDirective_Factory(t) { return new (t || NgFileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgFileDropDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgFileDropDirective, selectors: [[\"\", \"ngFileDrop\", \"\"]], hostBindings: function NgFileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function NgFileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function NgFileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function NgFileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { options: \"options\", uploadInput: \"uploadInput\" }, outputs: { uploadOutput: \"uploadOutput\" } });\nNgFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgFileDropDirective.propDecorators = {\n    options: [{ type: Input }],\n    uploadInput: [{ type: Input }],\n    uploadOutput: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgFileDropDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngFileDrop]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { uploadOutput: [{\n            type: Output\n        }], onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], options: [{\n            type: Input\n        }], uploadInput: [{\n            type: Input\n        }] }); })();\n\nclass NgFileSelectDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.fileListener = () => {\n            if (this.el.files) {\n                this.upload.handleFiles(this.el.files);\n            }\n        };\n        this.uploadOutput = new EventEmitter();\n    }\n    ngOnInit() {\n        this._sub = [];\n        const concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        const allowedContentTypes = this.options && this.options.allowedContentTypes || ['*'];\n        const maxUploads = this.options && this.options.maxUploads || Number.POSITIVE_INFINITY;\n        const maxFileSize = this.options && this.options.maxFileSize || Number.POSITIVE_INFINITY;\n        this.upload = new NgUploaderService(concurrency, allowedContentTypes, maxUploads, maxFileSize);\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this._sub.push(this.upload.serviceEvents.subscribe((event) => {\n            this.uploadOutput.emit(event);\n        }));\n        if (this.uploadInput instanceof EventEmitter) {\n            this._sub.push(this.upload.initInputEvents(this.uploadInput));\n        }\n    }\n    ngOnDestroy() {\n        if (this.el) {\n            this.el.removeEventListener('change', this.fileListener, false);\n            this._sub.forEach(sub => sub.unsubscribe());\n        }\n    }\n}\nNgFileSelectDirective.ɵfac = function NgFileSelectDirective_Factory(t) { return new (t || NgFileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgFileSelectDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgFileSelectDirective, selectors: [[\"\", \"ngFileSelect\", \"\"]], inputs: { options: \"options\", uploadInput: \"uploadInput\" }, outputs: { uploadOutput: \"uploadOutput\" } });\nNgFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgFileSelectDirective.propDecorators = {\n    options: [{ type: Input }],\n    uploadInput: [{ type: Input }],\n    uploadOutput: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgFileSelectDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngFileSelect]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { uploadOutput: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], uploadInput: [{\n            type: Input\n        }] }); })();\n\nclass NgxUploaderModule {\n}\nNgxUploaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxUploaderModule });\nNgxUploaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxUploaderModule_Factory(t) { return new (t || NgxUploaderModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxUploaderModule, { declarations: [NgFileDropDirective, NgFileSelectDirective], exports: [NgFileDropDirective, NgFileSelectDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxUploaderModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgFileDropDirective, NgFileSelectDirective],\n                exports: [NgFileDropDirective, NgFileSelectDirective]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-uploader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgFileDropDirective, NgFileSelectDirective, NgUploaderService, NgxUploaderModule, UploadStatus, humanizeBytes };\n\n//# sourceMappingURL=ngx-uploader.js.map","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { PaisAmbiente } from '@app/shared/modelos/enums/paisAmbiente.enum';\nimport { environment } from '@env/environment';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { CookiesUtilsService } from '@app/shared/servicios/cookies-utils.service';\nimport { CargandoService } from '@app/shared/servicios/cargando.service';\n\n@Component({\n  selector: 'app-comercial',\n  templateUrl: './comercial.component.html',\n  styleUrls: ['./comercial.component.scss'],\n})\nexport class ComercialComponent implements OnInit {\n  username$: Observable<any>;\n  cargando$: Observable<boolean | null>;\n  pais: PaisAmbiente;\n  PaisAmbiente = PaisAmbiente;\n  @ViewChild(MatSidenav, { static: true }) sideNav: MatSidenav;\n\n  constructor(\n    private store: Store<any>,\n    private cargandoService: CargandoService,\n    private cookiesService: CookiesUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.username$ = this.store.select('usuario', 'username');\n    this.cargando$ = this.cargandoService.cargar$.asObservable();\n    this.pais = environment.envCountry as PaisAmbiente;\n  }\n\n  subscribeSideNavChange() {\n    this.sideNav.openedChange.asObservable().subscribe((opened) => {\n      if (!this.obtenerEstadoMenu() && this.sideNav.opened) {\n        this.sideNav.close();\n      }\n    });\n  }\n  obtenerEstadoMenu() {\n    return this.cookiesService.obtenerInformacionCookie('mostrarMenuIzquierdo');\n  }\n\n  actualizarEstadoMenu(mostarMenu) {\n    this.cookiesService.guardarInformacionCookie(\n      'mostrarMenuIzquierdo',\n      mostarMenu\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <img src=\"../assets/images/brand.png\" alt=\"\">\n    <span class=\"example-spacer\"></span>\n    <button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">\n      <mat-icon>account_circle</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <div class=\"menu-content\">\n        <p class=\"user-name\"><strong>{{ username$ | async }}</strong></p>\n        <p i18n>Comercial</p>\n        <br>\n        <btn-cerrar-session></btn-cerrar-session>\n      </div>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-progress-bar *ngIf=\"cargando$ | async\" mode=\"indeterminate\" color=\"secondary\"></mat-progress-bar>\n\n<mat-sidenav-container>\n  <mat-sidenav #sidenav mode=\"side\" opened=\"true\">\n    <button mat-button class=\"button-toogle-menu\" (click)=\"sidenav.toggle(); actualizarEstadoMenu(sidenav.opened)\"\n            [class.menu-open]=\"sidenav.opened\">\n      <mat-icon *ngIf=\"!sidenav.opened\">menu</mat-icon>\n      <mat-icon *ngIf=\"sidenav.opened\">clear</mat-icon>\n    </button>\n    <app-menu-izquierdo [abrirMenu]=\"sidenav.opened\"></app-menu-izquierdo>\n  </mat-sidenav>\n\n  <mat-sidenav-content [class.full-width-with-collapsed-menu]=\"!sidenav.opened\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","export enum TipoNotificacion {\n  PUSH = 'PUSH',\n  SMS = 'SMS',\n  CORREO = 'E_MAIL',\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs/operators';\nimport { RegistroEmpresaMexico } from '@app/modulos/comercial/modelo/registroEmpresa.model';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { identificacionMexicoValidador } from '@app/modulos/comercial/validador/registro-empresa.validador';\nimport { TipoIdentificacionEmpresa } from '@app/modulos/comercial/modelo/tipo-identificacion-empresa.enum';\nimport { validarTextoSinNumero } from '@app/modulos/comercial/validador/expresionesRegulares';\nimport { ApiService } from '@core/servicios/api.service';\n\n@Component({\n  selector: 'app-registro-empresa-mexico',\n  templateUrl: './registro-empresa-mexico.component.html',\n  styleUrls: ['./registro-empresa-mexico.component.scss'],\n})\nexport class RegistroEmpresaMexicoComponent implements OnInit {\n  formularioEmpresa: FormGroup;\n  userSub: string;\n  cargando = false;\n  TipoIdentificacionEmpresa = TipoIdentificacionEmpresa;\n\n  constructor(\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    private customModal: CustomModalService,\n    private store: Store<any>\n  ) {}\n\n  ngOnInit() {\n    this.formularioEmpresa = this.crearFormulario(this.fb);\n  }\n\n  crearFormulario(fb: FormBuilder): FormGroup {\n    return fb.group(\n      {\n        identificacion: fb.control('', [Validators.required]),\n        tipoIdEmpresa: fb.control('', [Validators.required]),\n        nombreAdministrador: fb.control('', [\n          ...validarTextoSinNumero,\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n        ]),\n        totalEmpleados: fb.control('', [\n          Validators.pattern('^[0-9]*'),\n          Validators.min(1),\n          Validators.max(2147483647),\n          Validators.maxLength(10),\n          Validators.required,\n        ]),\n        nombre: fb.control('', [\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n          Validators.pattern(\n            '^[a-zA-Z0-9\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0178][a-zA-Z0-9\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0178 ().&@,#-]{0,301}$'\n          ),\n        ]),\n        correoAdministrador: fb.control('', [\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n          this.validarEmailCampo,\n        ]),\n      },\n      {\n        validator: identificacionMexicoValidador(\n          'tipoIdEmpresa',\n          'identificacion'\n        ),\n        updateOn: 'blur',\n      }\n    );\n  }\n\n  enviarFormulario(): void {\n    if (this.formularioEmpresa.valid) {\n      this.store\n        .select('usuario', 'sub')\n        .pipe(first())\n        .subscribe((value) => {\n          this.userSub = value;\n          this.registrarEmpresa();\n        });\n    }\n  }\n\n  registrarEmpresa() {\n    this.cargando = true;\n    const result: RegistroEmpresaMexico = {\n      ...this.formularioEmpresa.value,\n      codigoPais: 'MX',\n      idUsuario: this.userSub,\n    };\n    this.apiService\n      .post('empresa/sin_contrato/registrar', result)\n      .then(() => {\n        this.customModal.abrirModal(CustomModalType.SUCCESS, {\n          mensaje: 'Los cambios se han realizado con éxito.',\n        });\n        this.formularioEmpresa.reset();\n        this.cargando = false;\n      })\n      .catch((e) => {\n        this.cargando = false;\n\n        switch (e.data.codigo) {\n          case 'empresa.identificacion.duplicada':\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'Esta identificacion no se encuentra disponible.',\n            });\n            break;\n          case 'empresa.identificacion.salesforce.no-existe':\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'La empresa no se encuentra registrada en salesforce',\n            });\n            break;\n          default:\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'Sucedio un error inesperado en la aplicación.',\n            });\n        }\n      });\n  }\n\n  validarEnBlurYHacerTrim(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  get identificacion() {\n    return this.formularioEmpresa.get('identificacion');\n  }\n\n  get tipoIdEmpresa() {\n    return this.formularioEmpresa.get('tipoIdEmpresa');\n  }\n\n  get nombreAdministrador(): any {\n    return this.formularioEmpresa.get('nombreAdministrador');\n  }\n\n  get totalEmpleados() {\n    return this.formularioEmpresa.get('totalEmpleados');\n  }\n\n  get nombre(): any {\n    return this.formularioEmpresa.get('nombre');\n  }\n\n  get correoAdministrador(): any {\n    return this.formularioEmpresa.get('correoAdministrador');\n  }\n\n  validarEnBlur(control: AbstractControl) {\n    control.markAsDirty();\n  }\n\n  validarEmailCampo(control: AbstractControl): { pattern: boolean } {\n    const regExpr = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    const emailValue = control.value\n      ? regExpr.test(String(control.value).toLowerCase())\n      : true;\n    if (!emailValue) {\n      return { pattern: true };\n    }\n    return null;\n  }\n}\n","<h1>Selecciona el tipo de cuenta que tienes y escribe los <br> siguientes datos:</h1>\n<mat-radio-group class=\"radio-group__tipo-empresa\" >\n  <mat-radio-button [disabled]=\"true\"  value=\"1\">La empresa no subirá lista de colaboradores pero si subirá el documento de descuentos de nómina.</mat-radio-button>\n  <mat-radio-button value=\"2\" [checked]=\"true\">La empresa no subirá lista de colaboradores ni documento de descuentos de nómina.</mat-radio-button>\n  <mat-radio-button [disabled]=\"true\" value=\"3\">La empresa subirá los documentos de lista de colaboradores y descuentos de nómina.</mat-radio-button>\n\n</mat-radio-group>\n\n<form [formGroup]=\"formularioEmpresa\" autocomplete=\"off\" id=\"formularioCuenta\" (ngSubmit)=\"enviarFormulario()\">\n  <div class=\"row\" >\n    <div class=\"col-md-6\">\n      <div class=\"form-group\" >\n        <label for=\"nombre\" class=\"control-label\">Nombre de la empresa</label>\n        <input  formControlName=\"nombre\" id=\"nombre\" type=\"text\" class=\"form-control\" maxlength=\"301\" placeholder=\"Escribe el nombre de la empresa\" (blur)=\"validarEnBlur(nombre)\">\n        <app-mostrar-error-formularios id=\"erroresNombre\" [control]=\"nombre\" ></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"tipoIdEmpresa\" class=\"control-label\" i18n>Tipo de idetificación</label>\n        <mat-select formControlName=\"tipoIdEmpresa\" id=\"tipoIdEmpresa\"\n                    (blur)=\"validarEnBlur(tipoIdEmpresa)\" placeholder=\"Selecciona el tipo de identificación de la empresa\">\n          <mat-option [value]=\"TipoIdentificacionEmpresa.RFC\" [attr.data-test-id]=\"'tipoIdEmpresaOpcionRFC'\">RFC</mat-option>\n          <mat-option [value]=\"TipoIdentificacionEmpresa.REGISTRO_PATRONAL\" [attr.data-test-id]=\"'tipoIdEmpresaOpcionREGISTRO_PATRONAL'\">Registro patronal</mat-option>\n        </mat-select>\n        <app-mostrar-error-formularios id=\"erroresTipoIdEmpresa\"\n                                       [control]=\"tipoIdEmpresa\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"identificacion\" class=\"control-label\" i18n>Número de identificación</label>\n        <input formControlName=\"identificacion\" id=\"identificacion\" type=\"text\" maxlength=\"17\" class=\"form-control\"\n               placeholder=\"Escribe el número de identificación de la empresa\" (blur)=\"validarEnBlurYHacerTrim(identificacion)\"\n               [class.ng-invalid]=\"formularioEmpresa.errors && (formularioEmpresa.errors['invalidNIT'] || formularioEmpresa.errors['invalidCedula'])\">\n        <app-mostrar-error-formularios id=\"erroresIdentificacion\"\n                                       [control]=\"identificacion\"></app-mostrar-error-formularios>\n        <ng-container *ngIf=\"identificacion.value && formularioEmpresa.errors\">\n          <p class=\"error\"\n             *ngIf=\"identificacion.dirty && formularioEmpresa.errors['invalidRegistroPatronal'] && !formularioEmpresa.errors['invalidRegistroPatronal'].valid\">\n            El formato del Registro patronal no es valido</p>\n          <p class=\"error\"\n             *ngIf=\"identificacion.dirty && formularioEmpresa.errors['invalidRFC'] && !formularioEmpresa.errors['invalidRFC'].valid\">\n            El formato del RFC no es valido</p>\n        </ng-container>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"nombreAdministrador\" class=\"control-label\" i18n>Nombre del administrador</label>\n        <input formControlName=\"nombreAdministrador\" id=\"nombreAdministrador\" type=\"text\" class=\"form-control\"\n               maxlength=\"301\" placeholder=\"Escribe el nombre del administrador de la empresa\"\n               (blur)=\"validarEnBlurYHacerTrim(nombreAdministrador)\">\n        <app-mostrar-error-formularios id=\"erroresNombreAdministrador\"\n                                       [control]=\"nombreAdministrador\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\" >\n        <label for=\"totalEmpleados\" class=\"control-label\">Total de empleados</label>\n        <input formControlName=\"totalEmpleados\" id=\"totalEmpleados\" type=\"number\" maxlength=\"10\" class=\"form-control\" placeholder=\"Escribe el total de empleados\" (blur)=\"validarEnBlur(totalEmpleados)\">\n        <app-mostrar-error-formularios id=\"erroresTotal\" [control]=\"totalEmpleados\" ></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"correoAdministrador\" class=\"control-label\" i18n>Correo del representante de la empresa</label>\n        <input formControlName=\"correoAdministrador\" id=\"correoAdministrador\" type=\"text\" class=\"form-control\"\n               maxlength=\"301\" placeholder=\"Escribe el correo del representante de la empresa\"\n               (blur)=\"validarEnBlurYHacerTrim(correoAdministrador)\">\n        <app-mostrar-error-formularios id=\"erroresCorreoAdministrador\"\n                                       [control]=\"correoAdministrador\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-12 col-xs-12 omega\">\n      <button [attr.id]=\"'botonContinuar'\" color=\"primary\" mat-button  type=\"submit\" [disabled]=\"!formularioEmpresa.valid || cargando\"  class=\"mat-button btns-primary align-r\">Guardar cambios</button>\n    </div>\n  </div>\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { environment } from '@env/environment';\nimport {\n  humanizeBytes,\n  UploaderOptions,\n  UploadFile,\n  UploadInput,\n  UploadOutput,\n} from 'ngx-uploader';\nimport { Subscription } from 'rxjs';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { RespuestaEnvioNotificaciones } from '@app/modulos/comercial/modelo/notificacion-dto.model';\nimport { ApiService } from '@core/servicios/api.service';\n\n@Component({\n  selector: 'app-subir-layout',\n  templateUrl: './subir-layout.component.html',\n  styleUrls: ['./subir-layout.component.scss'],\n})\nexport class SubirLayoutComponent implements OnInit, OnDestroy {\n  uuidEmpresa: string;\n  _disabled: boolean;\n\n  nombre: string;\n  files: UploadFile;\n  options: UploaderOptions;\n  empresaSubscription: Subscription;\n  uploadInput: EventEmitter<UploadInput>;\n  cargando = false;\n  humanizeBytes: (bytes: number) => string;\n\n  @Input() disabled: boolean;\n  @Input() endPoint = 'enviar_mensajes';\n  @Output() enviarEstadoLayout = new EventEmitter();\n  @ViewChild('file', { static: true }) file: ElementRef;\n\n  constructor(\n    private apiService: ApiService,\n    private customModalService: CustomModalService\n  ) {\n    this.uploadInput = new EventEmitter<UploadInput>();\n    this.humanizeBytes = humanizeBytes;\n  }\n\n  ngOnInit() {\n    this.options = {\n      concurrency: 0,\n      allowedContentTypes: [\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/msexcel',\n        'application/vnd.ms-excel',\n      ],\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.empresaSubscription) {\n      this.empresaSubscription.unsubscribe();\n    }\n  }\n\n  onUploadOutput(output: UploadOutput): void {\n    this.validarTipoDeArchivo(output);\n    if (output.type === 'addedToQueue' && typeof output.file !== 'undefined') {\n      setTimeout(() => {\n        if (output.file.size > 635000) {\n          this.eliminarDocumento();\n          this.customModalService.abrirModal(CustomModalType.ERROR, {\n            mensaje: 'Recuerda cargar un archivo menor a 635 kb',\n          });\n        } else {\n          this.files = output.file;\n          this.nombre = output.file.name;\n        }\n      }, 200);\n    } else if (\n      output.type === 'uploading' &&\n      typeof output.file !== 'undefined'\n    ) {\n      this.cargando = true;\n      this.enviarEstadoLayout.emit({\n        estado: false,\n        estadoSubidaDocumento: output.file.progress.data.percentage,\n      });\n    } else if (output.type === 'done') {\n      this._disabled = false;\n      this.cargando = false;\n      switch (output.file.responseStatus) {\n        case 200:\n          this.cargaExcelExitosa(output.file.response);\n          break;\n        case 400:\n          this.mostrarModalErrorValidacion(output.file.response);\n          break;\n        case 0:\n          this.mostrarModalErrorPersonalizado(\n            'No pudimos enviar la notificación, recuerda cargar un archivo máximo con 20.000 registros'\n          );\n          break;\n        default:\n          this.mostrarModalError();\n      }\n      this.eliminarDocumento();\n    }\n  }\n\n  private validarTipoDeArchivo(output: UploadOutput) {\n    if (\n      typeof output.file !== 'undefined' &&\n      !this.options.allowedContentTypes.some(\n        (value) => value === output.file.type\n      )\n    ) {\n      this.customModalService.abrirModal(CustomModalType.ERROR, {\n        mensaje:\n          'El archivo no es válido. Solo puedes subir documentos tipo XLS ó XLSX',\n      });\n    }\n  }\n\n  eliminarDocumento() {\n    this.uploadInput.emit({ type: 'removeAll' });\n    this.uploadInput.emit({ type: 'cancelAll' });\n    this.files = null;\n    this.file.nativeElement.value = null;\n    this.nombre = null;\n  }\n\n  startUpload(body: any): void {\n    this._disabled = true;\n    this.cargando = true;\n    this.apiService.getCurrentSesion().then((sesion) => {\n      const accessToken = sesion.getAccessToken();\n      const jwt = accessToken.getJwtToken();\n      const event: UploadInput = {\n        type: 'uploadFile',\n        file: this.files,\n        url: environment.endPointNotificacion + this.endPoint,\n        method: 'POST',\n        headers: { ['Authorization']: 'Bearer ' + jwt },\n        data: body,\n      };\n      this.uploadInput.emit(event);\n    });\n  }\n\n  mostrarModalError() {\n    const dialog = this.customModalService.abrirModal(CustomModalType.ERROR, {\n      mensaje: 'La notificación no pudo ser enviada',\n    });\n    dialog.afterClosed().subscribe(() => {\n      this._disabled = false;\n    });\n  }\n\n  mostrarModalErrorPersonalizado(mensaje: string) {\n    const dialog = this.customModalService.abrirModal(CustomModalType.ERROR, {\n      mensaje,\n    });\n    dialog.afterClosed().subscribe(() => {\n      this._disabled = false;\n    });\n  }\n\n  mostrarModalErrorValidacion(errorValidacion: {\n    mensaje: string;\n    campos: string[];\n  }) {\n    const dialog = this.customModalService.abrirModal(CustomModalType.ERROR, {\n      mensaje: ['La notificación no pudo ser enviada', errorValidacion.mensaje],\n    });\n    dialog.afterClosed().subscribe(() => {\n      this._disabled = false;\n    });\n  }\n\n  cargaExcelExitosa(respuesta: RespuestaEnvioNotificaciones) {\n    let dialog = this.customModalService.abrirModal(CustomModalType.SUCCESS, {\n      mensaje: respuesta.mensaje,\n    });\n    if (dialog) {\n      dialog.afterClosed().subscribe(() => {\n        this._disabled = false;\n        this.enviarEstadoLayout.emit('modalCerrado');\n      });\n    }\n  }\n}\n","<label class=\"loading-status\">\n  <div id=\"upload_button\" >\n    <label class=\"contenedor-input\">\n      <input type=\"file\" #file name=\"file\" id=\"file\" ngFileSelect [disabled]=\"disabled || _disabled\" [options]=\"options\"\n        [uploadInput]=\"uploadInput\" (uploadOutput)=\"onUploadOutput($event)\">\n      <span class=\"btns  mat-button\" [class.disabled]=\"disabled || _disabled\" >Seleccionar</span>\n    </label>\n  </div>\n</label>\n","import { FormGroup } from '@angular/forms';\nimport { TipoIdentificacionEmpresa } from '../modelo/tipo-identificacion-empresa.enum';\n\nexport function identificacionColombiaValidador(\n  tipoIdentificacion: string,\n  identificacion: string\n) {\n  return (group: FormGroup): { [key: string]: any } => {\n    const tipoIdentificacionControl = group.controls[tipoIdentificacion];\n    const identificacionControl = group.controls[identificacion];\n    if (tipoIdentificacionControl.value === TipoIdentificacionEmpresa.NIT) {\n      const validNit = new RegExp(/^[0-9]{8,15}-{1}[0-9]{1}$/).test(\n        String(identificacionControl.value).toLowerCase()\n      );\n      return validNit\n        ? null\n        : { invalidNIT: { valid: false, value: identificacionControl.value } };\n    } else {\n      const validCedula = new RegExp(/^[1-9][0-9]{5,10}$/).test(\n        String(identificacionControl.value).toLowerCase()\n      );\n      return validCedula\n        ? null\n        : {\n            invalidCedula: { valid: false, value: identificacionControl.value },\n          };\n    }\n  };\n}\n\nexport function identificacionMexicoValidador(\n  tipoIdentificacion: string,\n  identificacion: string\n) {\n  return (group: FormGroup): { [key: string]: any } => {\n    const tipoIdentificacionControl = group.controls[tipoIdentificacion];\n    const identificacionControl = group.controls[identificacion];\n    if (\n      tipoIdentificacionControl.value ===\n      TipoIdentificacionEmpresa.REGISTRO_PATRONAL\n    ) {\n      const validRP = new RegExp(/^[a-zA-Z0-9]{11}[a-zA-Z0-9]{0,2}$/).test(\n        String(identificacionControl.value).toLowerCase()\n      );\n      return validRP\n        ? null\n        : {\n            invalidRegistroPatronal: {\n              valid: false,\n              value: identificacionControl.value,\n            },\n          };\n    } else {\n      const validRFC = /^([A-Z,Ñ,&]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[A-Z|\\d]{3})$/.test(\n        String(identificacionControl.value)\n      );\n      return validRFC\n        ? null\n        : { invalidRFC: { valid: false, value: identificacionControl.value } };\n    }\n  };\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs/operators';\nimport { TipoNotificacion } from '@app/modulos/comercial/modelo/tipo-notificacion.enum';\nimport {\n  ArchivoMensajesDTO,\n  RespuestaEnvioNotificaciones,\n} from '@app/modulos/comercial/modelo/notificacion-dto.model';\nimport { SubirLayoutComponent } from '@app/modulos/comercial/componentes/subir-layout/subir-layout.component';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Accion } from '@app/modulos/comercial/modelo/accion.model';\nimport { ApiService } from '@core/servicios/api.service';\n\n@Component({\n  selector: 'app-notificar',\n  templateUrl: './notificar.component.html',\n  styleUrls: ['./notificar.component.scss'],\n})\nexport class NotificarComponent implements OnInit {\n  @ViewChild('cargaArchivo', { static: true })\n  cargaArchivo: SubirLayoutComponent;\n\n  userSub: string;\n  cargando = false;\n  formulario: FormGroup;\n  TipoNotificacion = TipoNotificacion;\n  limitesMensaje = {\n    SMS: 160,\n    PUSH: 240,\n    CORREO: 500,\n  };\n  acciones: [Accion];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<any>,\n    private http: HttpClient,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.formulario = this.crearFormulario(this.fb);\n    this.store\n      .select('usuario', 'sub')\n      .pipe(first())\n      .subscribe((value) => {\n        this.userSub = value;\n      });\n    this.obtenerAcciones();\n  }\n\n  crearFormulario(fb: FormBuilder): FormGroup {\n    return fb.group({\n      titulo: fb.control('', [\n        Validators.required,\n        Validators.maxLength(65),\n        Validators.minLength(2),\n      ]),\n      tipo: fb.control('', [Validators.required]),\n      campana: fb.control('', [\n        Validators.required,\n        Validators.maxLength(65),\n        Validators.minLength(2),\n      ]),\n      accion: fb.control(''),\n      descripcion: fb.control('', [\n        Validators.required,\n        Validators.maxLength(160),\n        Validators.minLength(5),\n      ]),\n      checkTodos: fb.control(false, [Validators.required]),\n    });\n  }\n\n  enviarFormulario(): void {\n    if (this.formulario.valid) {\n      const datosFormulario = this.formulario.value;\n      const body: ArchivoMensajesDTO = {\n        idCampania: datosFormulario.campana,\n        titulo: datosFormulario.titulo,\n        mensaje: datosFormulario.descripcion,\n        medios: datosFormulario.tipo,\n        todos: datosFormulario.checkTodos,\n        accion: datosFormulario.accion,\n        idUsuario: this.userSub,\n      };\n      if (!this.checkTodos.value && this.cargaArchivo.files) {\n        this.cargaArchivo.startUpload(body);\n      } else {\n        this.enviarPeticionTodos(body);\n      }\n    }\n  }\n\n  get titulo() {\n    return this.formulario.get('titulo');\n  }\n\n  get tipo() {\n    return this.formulario.get('tipo');\n  }\n\n  get campana() {\n    return this.formulario.get('campana');\n  }\n\n  get accion() {\n    return this.formulario.get('accion');\n  }\n\n  get descripcion(): any {\n    return this.formulario.get('descripcion');\n  }\n\n  get checkTodos(): any {\n    return this.formulario.get('checkTodos');\n  }\n\n  validarEnBlur(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  validarEnBlurYHacerTrim(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  errorArchivoRequerido() {\n    return !this.checkTodos.value && !this.cargaArchivo.files;\n  }\n\n  seleccionCambio() {\n    if (this.checkTodos.value && this.cargaArchivo) {\n      this.cargaArchivo.eliminarDocumento();\n    }\n  }\n\n  actualizaValidaciones() {\n    const mediosSeleccionados: string[] = this.tipo.value;\n    if (mediosSeleccionados.some((medio) => medio === TipoNotificacion.SMS)) {\n      this.descripcion.setValidators([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(this.limitesMensaje.SMS),\n      ]);\n    } else if (\n      mediosSeleccionados.some((medio) => medio === TipoNotificacion.PUSH)\n    ) {\n      this.descripcion.setValidators([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(this.limitesMensaje.PUSH),\n      ]);\n    } else {\n      this.descripcion.setValidators([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(this.limitesMensaje.CORREO),\n      ]);\n    }\n    this.descripcion.updateValueAndValidity();\n    this.formulario.updateValueAndValidity();\n  }\n\n  enviarPeticionTodos(body: ArchivoMensajesDTO) {\n    this.cargando = true;\n    this.apiService\n      .getCurrentSesion()\n      .then((sesion) => {\n        const accessToken = sesion.getAccessToken();\n        const jwt = accessToken.getJwtToken();\n        const httpOptions = {\n          headers: new HttpHeaders({\n            ['Authorization']: 'Bearer ' + jwt,\n          }),\n        };\n        const url =\n          environment.endPointNotificacion + this.cargaArchivo.endPoint;\n        return this.http\n          .post<RespuestaEnvioNotificaciones>(url, body, httpOptions)\n          .toPromise();\n      })\n      .then(\n        (respuesta) => {\n          this.cargando = false;\n          this.cargaArchivo.cargaExcelExitosa(respuesta);\n        },\n        () => {\n          this.cargando = false;\n          this.cargaArchivo.mostrarModalError();\n        }\n      );\n  }\n\n  obtenerAcciones() {\n    this.apiService.get('notificacion/acciones').then((acciones: [Accion]) => {\n      this.acciones = acciones;\n    });\n  }\n}\n","<h1 i18n>Notificaciones</h1>\n\n<div class=\"contenedor-formulario\">\n  <form [formGroup]=\"formulario\" autocomplete=\"off\" id=\"formulario\" (ngSubmit)=\"enviarFormulario()\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"titulo\" class=\"control-label\" i18n>Título</label>\n          <input formControlName=\"titulo\" id=\"titulo\" type=\"text\" class=\"form-control\" maxlength=\"301\"\n                 placeholder=\"Título de notificación\" (blur)=\"validarEnBlurYHacerTrim(titulo)\">\n          <app-mostrar-error-formularios id=\"erroresTitulo\" [control]=\"titulo\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"tipo\" class=\"control-label\" i18n>Tipo</label>\n          <mat-select formControlName=\"tipo\" id=\"tipo\" multiple placeholder=\"SMS, Notificación push\" (selectionChange)=\"actualizaValidaciones()\">\n            <mat-option [value]=\"TipoNotificacion.SMS\">SMS</mat-option>\n            <!-- <mat-option [value]=\"TipoNotificacion.CORREO\">Correo</mat-option> -->\n            <mat-option [value]=\"TipoNotificacion.PUSH\">Notificación Push</mat-option>\n          </mat-select>\n          <app-mostrar-error-formularios id=\"erroresTipo\" [control]=\"tipo\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"campana\" class=\"control-label\" i18n>Notificación</label>\n          <input formControlName=\"campana\" id=\"campana\" type=\"text\" class=\"form-control\" maxlength=\"301\"\n                 placeholder=\"Identificador de la notificación\" (blur)=\"validarEnBlurYHacerTrim(campana)\">\n          <app-mostrar-error-formularios id=\"erroresCampana\" [control]=\"campana\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"accion\" class=\"control-label\" i18n>Acción (opcional)</label>\n          <mat-select formControlName=\"accion\" id=\"accion\" placeholder=\"Accion\">\n            <mat-option *ngFor=\"let accion of acciones\" [value]=\"accion.valor\">{{accion.descripcion}}</mat-option>\n          </mat-select>\n          <app-mostrar-error-formularios id=\"erroresAccion\" [control]=\"accion\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-6\" style=\"display: none\">\n        <div class=\"form-group\">\n          <label for=\"checkTodos\" class=\"control-label\" i18n>Enviar a:</label>\n          <mat-checkbox formControlName=\"checkTodos\" id=\"checkTodos\" type=\"text\" class=\"form-control\" (change)=\"seleccionCambio()\">\n            ¿Todos los usuarios?\n          </mat-checkbox>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group form-upload\">\n          <label for=\"archivo\" class=\"control-label\" i18n>Subir archivo</label>\n          <div class=\"campo-archivo\">\n            {{cargaArchivo.nombre || \"No se ha seleccionado ningún archivo\"}}\n            <app-subir-layout #cargaArchivo [disabled]=\"checkTodos.value\"></app-subir-layout>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"form-group form-descripcion\">\n          <label for=\"descripcion\" class=\"control-label\" i18n>Mensaje</label>\n          <!-- <p class=\"ayuda\">Puedes usar los siguientes parametros en el mensaje: {{'{primer_nombre_usuario}'}}</p> -->\n          <textarea matInput formControlName=\"descripcion\" id=\"descripcion\" type=\"text\" class=\"form-control\"\n                 placeholder=\"Texto de la notificación\" (blur)=\"validarEnBlurYHacerTrim(descripcion)\"></textarea>\n          <app-mostrar-error-formularios id=\"erroresDescripcion\" [control]=\"descripcion\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <button mat-button i18n type=\"submit\" [attr.id]=\"'botonEnviar'\" color=\"primary\" class=\"mat-button btns-primary align-r\"\n                [disabled]=\"!formulario.valid || cargando || errorArchivoRequerido() || cargaArchivo.cargando\">\n                Enviar\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs/operators';\nimport { RegistroEmpresaColombia } from '@app/modulos/comercial/modelo/registroEmpresa.model';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { TipoIdentificacionEmpresa } from '@app/modulos/comercial/modelo/tipo-identificacion-empresa.enum';\nimport { identificacionColombiaValidador } from '@app/modulos/comercial/validador/registro-empresa.validador';\nimport { validarTextoSinNumero } from '@app/modulos/comercial/validador/expresionesRegulares';\nimport { ApiService } from '@core/servicios/api.service';\n\n@Component({\n  selector: 'app-registro-empresa-colombia',\n  templateUrl: './registro-empresa-colombia.component.html',\n  styleUrls: ['./registro-empresa-colombia.component.scss'],\n})\nexport class RegistroEmpresaColombiaComponent implements OnInit {\n  formularioEmpresa: FormGroup;\n  userSub: string;\n  cargando = false;\n  correo: string;\n  TipoIdentificacionEmpresa = TipoIdentificacionEmpresa;\n\n  constructor(\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    private customModal: CustomModalService,\n    private store: Store<any>\n  ) {}\n\n  ngOnInit() {\n    this.formularioEmpresa = this.crearFormulario(this.fb);\n  }\n\n  crearFormulario(fb: FormBuilder): FormGroup {\n    return fb.group(\n      {\n        identificacion: fb.control('', [Validators.required]),\n        tipoIdEmpresa: fb.control('', [Validators.required]),\n        totalEmpleados: fb.control('', [\n          Validators.required,\n          Validators.pattern('^[0-9]*'),\n          Validators.min(1),\n          Validators.max(2147483647),\n          Validators.maxLength(10),\n        ]),\n        nombre: fb.control('', [\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n        ]),\n        nombreAdministrador: fb.control('', [\n          ...validarTextoSinNumero,\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n        ]),\n        correoAdministrador: fb.control('', [\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n          this.validarEmailCampo,\n        ]),\n      },\n      {\n        validator: identificacionColombiaValidador(\n          'tipoIdEmpresa',\n          'identificacion'\n        ),\n      }\n    );\n  }\n\n  enviarFormulario(): void {\n    if (this.formularioEmpresa.valid) {\n      this.store\n        .select('usuario', 'sub')\n        .pipe(first())\n        .subscribe((value) => {\n          this.userSub = value;\n          this.registrarEmpresa();\n        });\n    }\n  }\n\n  registrarEmpresa() {\n    this.correo = this.formularioEmpresa.get('correoAdministrador').value;\n    this.cargando = true;\n    const result: RegistroEmpresaColombia = {\n      ...this.formularioEmpresa.value,\n      codigoPais: 'CO',\n      idUsuario: this.userSub,\n      correoAdministrador: this.correo.toLowerCase(),\n    };\n    this.apiService\n      .post('empresa/sin_contrato/registrar', result)\n      .then(() => {\n        this.customModal.abrirModal(CustomModalType.SUCCESS, {\n          mensaje: 'Los cambios se han realizado con éxito.',\n        });\n        this.formularioEmpresa.reset();\n        this.cargando = false;\n      })\n      .catch((e) => {\n        this.cargando = false;\n\n        switch (e.data.codigo) {\n          case 'empresa.identificacion.duplicada':\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'Esta identificacion no se encuentra disponible.',\n            });\n            break;\n          case 'empresa.identificacion.salesforce.no-existe':\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'La empresa no se encuentra registrada en salesforce',\n            });\n            break;\n          default:\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'Sucedio un error inesperado en la aplicación.',\n            });\n        }\n      });\n  }\n\n  get identificacion() {\n    return this.formularioEmpresa.get('identificacion');\n  }\n\n  get tipoIdEmpresa() {\n    return this.formularioEmpresa.get('tipoIdEmpresa');\n  }\n\n  get totalEmpleados() {\n    return this.formularioEmpresa.get('totalEmpleados');\n  }\n\n  get nombre(): any {\n    return this.formularioEmpresa.get('nombre');\n  }\n\n  get nombreAdministrador(): any {\n    return this.formularioEmpresa.get('nombreAdministrador');\n  }\n\n  get correoAdministrador(): any {\n    return this.formularioEmpresa.get('correoAdministrador');\n  }\n\n  validarEnBlur(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  validarEnBlurYHacerTrim(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  validarEmailCampo(control: AbstractControl): { pattern: boolean } {\n    const regExpr = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    const emailValue = control.value\n      ? regExpr.test(String(control.value).toLowerCase())\n      : true;\n    if (!emailValue) {\n      return { pattern: true };\n    }\n    return null;\n  }\n}\n","<h1 i18n>Ingresa la información de la empresa que deseas <br> registrar en qiip:</h1>\n\n<form [formGroup]=\"formularioEmpresa\" autocomplete=\"off\" id=\"formularioEmpresa\" (ngSubmit)=\"enviarFormulario()\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"nombre\" class=\"control-label\" i18n>Nombre de la empresa</label>\n        <input formControlName=\"nombre\" id=\"nombre\" type=\"text\" class=\"form-control\" maxlength=\"301\"\n               placeholder=\"Escribe el nombre de la empresa\" (blur)=\"validarEnBlurYHacerTrim(nombre)\">\n        <app-mostrar-error-formularios id=\"erroresNombre\" [control]=\"nombre\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"tipoIdEmpresa\" class=\"control-label\" i18n>Tipo de indetificación</label>\n        <mat-select formControlName=\"tipoIdEmpresa\" id=\"tipoIdEmpresa\"\n                    (blur)=\"validarEnBlur(tipoIdEmpresa)\" placeholder=\"Selecciona el tipo de identificación de la empresa\">\n          <mat-option [value]=\"TipoIdentificacionEmpresa.NIT\" [attr.data-test-id]=\"'tipoIdEmpresaOpcionNIT'\">NIT</mat-option>\n          <mat-option [value]=\"TipoIdentificacionEmpresa.CEDULA\" [attr.data-test-id]=\"'tipoIdEmpresaOpcionCEDULA'\">Cédula</mat-option>\n        </mat-select>\n        <app-mostrar-error-formularios id=\"erroresTipoIdEmpresa\"\n                                       [control]=\"tipoIdEmpresa\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"identificacion\" class=\"control-label\" i18n>Número de identificación</label>\n        <input formControlName=\"identificacion\" id=\"identificacion\" type=\"text\" maxlength=\"17\" class=\"form-control\"\n               placeholder=\"Escribe el número de identificación de la empresa\" (blur)=\"validarEnBlurYHacerTrim(identificacion)\"\n               [class.ng-invalid]=\"formularioEmpresa.errors && (formularioEmpresa.errors['invalidNIT'] || formularioEmpresa.errors['invalidCedula'])\">\n        <app-mostrar-error-formularios id=\"erroresIdentificacion\"\n                                       [control]=\"identificacion\"></app-mostrar-error-formularios>\n        <ng-container *ngIf=\"identificacion.value && formularioEmpresa.errors\">\n          <p class=\"error\"\n             *ngIf=\"identificacion.dirty && formularioEmpresa.errors['invalidNIT'] && !formularioEmpresa.errors['invalidNIT'].valid\">\n            El formato del NIT no es valido</p>\n          <p class=\"error\"\n             *ngIf=\"identificacion.dirty && formularioEmpresa.errors['invalidCedula'] && !formularioEmpresa.errors['invalidCedula'].valid\">\n            El formato de la identificacion no\n            es valido</p>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"nombreAdministrador\" class=\"control-label\" i18n>Nombre del administrador</label>\n        <input formControlName=\"nombreAdministrador\" id=\"nombreAdministrador\" type=\"text\" class=\"form-control\"\n               maxlength=\"301\" placeholder=\"Escribe el nombre del administrador de la empresa\"\n               (blur)=\"validarEnBlurYHacerTrim(nombreAdministrador)\">\n        <app-mostrar-error-formularios id=\"erroresNombreAdministrador\"\n                                       [control]=\"nombreAdministrador\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"correoAdministrador\" class=\"control-label\" i18n>Correo del administrador</label>\n        <input formControlName=\"correoAdministrador\" id=\"correoAdministrador\" type=\"text\" class=\"form-control\"\n               maxlength=\"301\" placeholder=\"Escribe el correo del administrador de la empresa\"\n               (blur)=\"validarEnBlurYHacerTrim(correoAdministrador)\">\n        <app-mostrar-error-formularios id=\"erroresCorreoAdministrador\"\n                                       [control]=\"correoAdministrador\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"totalEmpleados\" class=\"control-label\" i18n>Total de empleados</label>\n        <input formControlName=\"totalEmpleados\" id=\"totalEmpleados\" type=\"text\" maxlength=\"10\" class=\"form-control\"\n               placeholder=\"Escribe el total de empleados\" (blur)=\"validarEnBlurYHacerTrim(totalEmpleados)\">\n        <app-mostrar-error-formularios id=\"erroresTotal\" [control]=\"totalEmpleados\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-12 col-xs-12 omega\">\n      <button [attr.id]=\"'botonContinuar'\" color=\"primary\" mat-button type=\"submit\"\n              [disabled]=\"!formularioEmpresa.valid || cargando\" class=\"mat-button btns-primary align-r\" i18n>Guardar\n        cambios\n      </button>\n    </div>\n  </div>\n</form>\n"]}