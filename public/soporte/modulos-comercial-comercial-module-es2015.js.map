{"version":3,"sources":["./src/app/modulos/comercial/vista/seleccionar-tipo-empresa/seleccionar-tipo-empresa.component.ts","./src/app/modulos/comercial/vista/seleccionar-tipo-empresa/seleccionar-tipo-empresa.component.html","./src/app/modulos/comercial/validador/expresionesRegulares.ts","./src/app/modulos/comercial/componentes/menu-izquierdo/menu-izquierdo.component.ts","./src/app/modulos/comercial/componentes/menu-izquierdo/menu-izquierdo.component.html","./src/app/modulos/comercial/comercial.module.ts","./src/app/modulos/comercial/modelo/tipo-identificacion-empresa.enum.ts","./node_modules/ngx-uploader/fesm2015/ngx-uploader.js","./src/app/modulos/comercial/comercial.component.ts","./src/app/modulos/comercial/comercial.component.html","./src/app/modulos/comercial/modelo/tipo-notificacion.enum.ts","./src/app/modulos/comercial/componentes/registro-empresa-mexico/registro-empresa-mexico.component.ts","./src/app/modulos/comercial/componentes/registro-empresa-mexico/registro-empresa-mexico.component.html","./src/app/modulos/comercial/componentes/subir-layout/subir-layout.component.ts","./src/app/modulos/comercial/componentes/subir-layout/subir-layout.component.html","./src/app/modulos/comercial/validador/registro-empresa.validador.ts","./src/app/modulos/comercial/vista/notificar/notificar.component.ts","./src/app/modulos/comercial/vista/notificar/notificar.component.html","./src/app/modulos/comercial/componentes/registro-empresa-colombia/registro-empresa-colombia.component.ts","./src/app/modulos/comercial/componentes/registro-empresa-colombia/registro-empresa-colombia.component.html"],"names":[],"mappings":"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9B,2IAAgC;oBAChC,2GAAsB;oBACtB,uFAAkB;oBAClB,qGAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,yEAAc;oBACd,mEAAmB;oBACnB,mEAAY;oBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC7B,+DAAiB;oBACjB,sEAAgB;iBACjB;aACF;;;;;;;;;;;;;;AC/DD;AAAA;AAAA,IAAY,yBAKX;AALD,WAAY,yBAAyB;IACnC,oEAAuC;IACvC,wCAAW;IACX,wCAAW;IACX,8CAAiB;AACnB,CAAC,EALW,yBAAyB,KAAzB,yBAAyB,QAKpC;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2G;AAChE;AACS;;AAEZ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,kBAAkB,+DAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uCAAuC;AAChF;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC,yCAAyC;AAC9E;AACA,SAAS;AACT,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,kDAAkD;AACrG;AACA;AACA;AACA;AACA,qEAAqE,2BAA2B;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,iDAAiD;AAC1G;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gCAAgC;AACrF;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,8BAA8B;AAC/E;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,sBAAsB,+DAAQ;AAC9B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,4BAA4B,+BAA+B;AAC3D,SAAS;AACT;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4BAA4B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;A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","file":"modulos-comercial-comercial-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { PaisAmbiente } from '@app/shared/modelos/enums/paisAmbiente.enum';\n\n@Component({\n  selector: 'app-seleccionar-tipo-empresa',\n  templateUrl: './seleccionar-tipo-empresa.component.html',\n  styleUrls: ['./seleccionar-tipo-empresa.component.scss'],\n})\nexport class SeleccionarTipoEmpresaComponent implements OnInit {\n  pais: PaisAmbiente;\n  PaisAmbiente = PaisAmbiente;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.pais = environment.envCountry as PaisAmbiente;\n  }\n}\n","<ng-container [ngSwitch]=\"pais\">\n  <app-registro-empresa-mexico *ngSwitchCase=\"PaisAmbiente.MX\"></app-registro-empresa-mexico>\n  <app-registro-empresa-colombia *ngSwitchCase=\"PaisAmbiente.CO\"></app-registro-empresa-colombia>\n</ng-container>\n","import { Validators, ValidatorFn } from '@angular/forms';\n\nexport const validarTextoSinNumero: ValidatorFn[] = [\n  Validators.pattern(\n    /^[a-zA-Z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0178][a-zA-Z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0178\\.\\- ']*$/\n  ),\n  Validators.minLength(2),\n  Validators.maxLength(70),\n];\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PaisAmbiente } from '@app/shared/modelos/enums/paisAmbiente.enum';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-menu-izquierdo',\n  templateUrl: './menu-izquierdo.component.html',\n  styleUrls: ['./menu-izquierdo.component.scss'],\n})\nexport class MenuIzquierdoComponent implements OnInit {\n  @Input() abrirMenu: boolean;\n  @Input() isAdmin: boolean;\n  opcionSeleccionada: any = {\n    home: false,\n    lista: false,\n    notificaciones: false,\n  };\n  pais: PaisAmbiente;\n  PaisAmbiente = PaisAmbiente;\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    this.router.events.subscribe((val: any) => {\n      this.obtenerSeccionSeleccionada(val.url);\n    });\n    this.pais = environment.envCountry as PaisAmbiente;\n  }\n\n  obtenerSeccionSeleccionada(url: string) {\n    if (url) {\n      if (url.includes('invitaciones-empresa')) {\n        this.seleccionarOption('lista');\n      } else if (url.includes('notificaciones')) {\n        this.seleccionarOption('notificaciones');\n      } else {\n        this.seleccionarOption('home');\n      }\n    }\n  }\n\n  seleccionarOption(nombre: string) {\n    this.opcionSeleccionada = {};\n    this.opcionSeleccionada[nombre] = true;\n  }\n}\n","<ng-container>\n  <div class=\"side-bar side-bar-open\" *ngIf=\"abrirMenu\">\n    <button mat-button routerLink=\"/comercial\" [class.es-seleccionado]=\"opcionSeleccionada.home\">\n      <mat-icon>contact_mail</mat-icon>\n      Registrar empresa\n    </button>\n    <button mat-button routerLink=\"/comercial/invitaciones-empresa\" [class.es-seleccionado]=\"opcionSeleccionada.lista\" *ngIf=\"pais === PaisAmbiente.MX\">\n      <mat-icon>list</mat-icon>\n      Invitaciones empresa\n    </button>\n    <button mat-button routerLink=\"/comercial/notificaciones\" [class.es-seleccionado]=\"opcionSeleccionada.notificaciones\">\n      <mat-icon>notifications</mat-icon>\n      Notificaciones\n    </button>\n  </div>\n  <div class=\"side-bar side-bar-collapsed\" *ngIf=\"!abrirMenu\">\n    <button mat-button routerLink=\"/comercial\" [class.es-seleccionado]=\"opcionSeleccionada.home\">\n      <mat-icon>contact_mail</mat-icon>\n    </button>\n    <button mat-button routerLink=\"/comercial/invitaciones-empresa\" [class.es-seleccionado]=\"opcionSeleccionada.lista\" *ngIf=\"pais === PaisAmbiente.MX\">\n      <mat-icon>list</mat-icon>\n    </button>\n    <button mat-button routerLink=\"/comercial/notificaciones\" [class.es-seleccionado]=\"opcionSeleccionada.notificaciones\">\n      <mat-icon>notifications</mat-icon>\n    </button>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComercialComponent } from './comercial.component';\nimport { SeleccionarTipoEmpresaComponent } from './vista/seleccionar-tipo-empresa/seleccionar-tipo-empresa.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegistroEmpresaMexicoComponent } from './componentes/registro-empresa-mexico/registro-empresa-mexico.component';\nimport { RegistroEmpresaColombiaComponent } from './componentes/registro-empresa-colombia/registro-empresa-colombia.component';\nimport { MenuIzquierdoComponent } from './componentes/menu-izquierdo/menu-izquierdo.component';\nimport { NotificarComponent } from './vista/notificar/notificar.component';\nimport { SubirLayoutComponent } from './componentes/subir-layout/subir-layout.component';\nimport { NgxUploaderModule } from 'ngx-uploader';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { PaisAmbienteGuard } from '../../core/guards/pais-ambiente.guard';\nimport { PaisAmbiente } from '../../shared/modelos/enums/paisAmbiente.enum';\nimport { InvitacionesEmpresaComponent } from '../../shared/componentes/invitaciones-empresa/invitaciones-empresa.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComercialComponent,\n    children: [\n      {\n        path: '',\n        component: SeleccionarTipoEmpresaComponent,\n        pathMatch: 'full',\n      },\n      {\n        path: 'invitaciones-empresa',\n        component: InvitacionesEmpresaComponent,\n        canLoad: [PaisAmbienteGuard],\n        data: { paises: [PaisAmbiente.MX] },\n      },\n      {\n        path: 'notificaciones',\n        component: NotificarComponent,\n      },\n      { path: '**', redirectTo: 'login' },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [\n    ComercialComponent,\n    SeleccionarTipoEmpresaComponent,\n    RegistroEmpresaMexicoComponent,\n    RegistroEmpresaColombiaComponent,\n    MenuIzquierdoComponent,\n    NotificarComponent,\n    SubirLayoutComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    NgxUploaderModule,\n    HttpClientModule,\n  ],\n})\nexport class ComercialModule {}\n","export enum TipoIdentificacionEmpresa {\n  REGISTRO_PATRONAL = 'REGISTRO_PATRONAL',\n  RFC = 'RFC',\n  NIT = 'NIT',\n  CEDULA = 'CEDULA',\n}\n","import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { mergeMap, finalize } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nvar UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[UploadStatus[\"Queue\"] = 0] = \"Queue\";\n    UploadStatus[UploadStatus[\"Uploading\"] = 1] = \"Uploading\";\n    UploadStatus[UploadStatus[\"Done\"] = 2] = \"Done\";\n    UploadStatus[UploadStatus[\"Cancelled\"] = 3] = \"Cancelled\";\n})(UploadStatus || (UploadStatus = {}));\n\nfunction humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nclass NgUploaderService {\n    constructor(concurrency = Number.POSITIVE_INFINITY, contentTypes = ['*'], maxUploads = Number.POSITIVE_INFINITY, maxFileSize = Number.POSITIVE_INFINITY) {\n        this.queue = [];\n        this.serviceEvents = new EventEmitter();\n        this.uploadScheduler = new Subject();\n        this.subs = [];\n        this.contentTypes = contentTypes;\n        this.maxUploads = maxUploads;\n        this.maxFileSize = maxFileSize;\n        this.uploadScheduler\n            .pipe(mergeMap(upload => this.startUpload(upload), concurrency))\n            .subscribe(uploadOutput => this.serviceEvents.emit(uploadOutput));\n    }\n    handleFiles(incomingFiles) {\n        const allowedIncomingFiles = [].reduce.call(incomingFiles, (acc, checkFile, i) => {\n            const futureQueueLength = acc.length + this.queue.length + 1;\n            if (this.isContentTypeAllowed(checkFile.type) &&\n                futureQueueLength <= this.maxUploads &&\n                this.isFileSizeAllowed(checkFile.size)) {\n                acc = acc.concat(checkFile);\n            }\n            else {\n                const rejectedFile = this.makeUploadFile(checkFile, i);\n                this.serviceEvents.emit({ type: 'rejected', file: rejectedFile });\n            }\n            return acc;\n        }, []);\n        this.queue.push(...[].map.call(allowedIncomingFiles, (file, i) => {\n            const uploadFile = this.makeUploadFile(file, i);\n            this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n            return uploadFile;\n        }));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n    }\n    initInputEvents(input) {\n        return input.subscribe((event) => {\n            switch (event.type) {\n                case 'uploadFile':\n                    const uploadFileIndex = this.queue.findIndex(file => file === event.file);\n                    if (uploadFileIndex !== -1 && event.file) {\n                        this.uploadScheduler.next({ file: this.queue[uploadFileIndex], event: event });\n                    }\n                    break;\n                case 'uploadAll':\n                    const files = this.queue.filter(file => file.progress.status === UploadStatus.Queue);\n                    files.forEach(file => this.uploadScheduler.next({ file: file, event: event }));\n                    break;\n                case 'cancel':\n                    const id = event.id || null;\n                    if (!id) {\n                        return;\n                    }\n                    const subs = this.subs.filter(sub => sub.id === id);\n                    subs.forEach(sub => {\n                        if (sub.sub) {\n                            sub.sub.unsubscribe();\n                            const fileIndex = this.queue.findIndex(file => file.id === id);\n                            if (fileIndex !== -1) {\n                                this.queue[fileIndex].progress.status = UploadStatus.Cancelled;\n                                this.serviceEvents.emit({ type: 'cancelled', file: this.queue[fileIndex] });\n                            }\n                        }\n                    });\n                    break;\n                case 'cancelAll':\n                    this.subs.forEach(sub => {\n                        if (sub.sub) {\n                            sub.sub.unsubscribe();\n                        }\n                        const file = this.queue.find(uploadFile => uploadFile.id === sub.id);\n                        if (file) {\n                            file.progress.status = UploadStatus.Cancelled;\n                            this.serviceEvents.emit({ type: 'cancelled', file: file });\n                        }\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    const i = this.queue.findIndex(file => file.id === event.id);\n                    if (i !== -1) {\n                        const file = this.queue[i];\n                        this.queue.splice(i, 1);\n                        this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (this.queue.length) {\n                        this.queue = [];\n                        this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    }\n    startUpload(upload) {\n        return new Observable(observer => {\n            const sub = this.uploadFile(upload.file, upload.event)\n                .pipe(finalize(() => {\n                if (!observer.closed) {\n                    observer.complete();\n                }\n            }))\n                .subscribe(output => {\n                observer.next(output);\n            }, err => {\n                observer.error(err);\n                observer.complete();\n            }, () => {\n                observer.complete();\n            });\n            this.subs.push({ id: upload.file.id, sub: sub });\n        });\n    }\n    uploadFile(file, event) {\n        return new Observable(observer => {\n            const url = event.url || '';\n            const method = event.method || 'POST';\n            const data = event.data || {};\n            const headers = event.headers || {};\n            const xhr = new XMLHttpRequest();\n            const time = new Date().getTime();\n            let progressStartTime = (file.progress.data && file.progress.data.startTime) || time;\n            let speed = 0;\n            let eta = null;\n            xhr.upload.addEventListener('progress', (e) => {\n                if (e.lengthComputable) {\n                    const percentage = Math.round((e.loaded * 100) / e.total);\n                    const diff = new Date().getTime() - time;\n                    speed = Math.round((e.loaded / diff) * 1000);\n                    progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n                    eta = Math.ceil((e.total - e.loaded) / speed);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: `${humanizeBytes(speed)}/s`,\n                            startTime: progressStartTime,\n                            endTime: null,\n                            eta: eta,\n                            etaHuman: this.secondsToHuman(eta)\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', (e) => {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    const speedAverage = Math.round((file.size / (new Date().getTime() - progressStartTime)) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: `${humanizeBytes(speedAverage)}/s`,\n                            startTime: progressStartTime,\n                            endTime: new Date().getTime(),\n                            eta: eta,\n                            etaHuman: this.secondsToHuman(eta || 0)\n                        }\n                    };\n                    file.responseStatus = xhr.status;\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    file.responseHeaders = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            try {\n                const uploadFile = file.nativeFile;\n                const uploadIndex = this.queue.findIndex(outFile => outFile.nativeFile === uploadFile);\n                if (this.queue[uploadIndex].progress.status === UploadStatus.Cancelled) {\n                    observer.complete();\n                }\n                Object.keys(headers).forEach(key => xhr.setRequestHeader(key, headers[key]));\n                let bodyToSend;\n                if (event.includeWebKitFormBoundary !== false) {\n                    Object.keys(data).forEach(key => file.form.append(key, data[key]));\n                    file.form.append(event.fieldName || 'file', uploadFile, uploadFile.name);\n                    bodyToSend = file.form;\n                }\n                else {\n                    bodyToSend = uploadFile;\n                }\n                this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(bodyToSend);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return () => {\n                xhr.abort();\n            };\n        });\n    }\n    secondsToHuman(sec) {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    }\n    generateId() {\n        return Math.random().toString(36).substring(7);\n    }\n    setContentTypes(contentTypes) {\n        if (typeof contentTypes !== 'undefined' && contentTypes instanceof Array) {\n            if (contentTypes.find((type) => type === '*') !== undefined) {\n                this.contentTypes = ['*'];\n            }\n            else {\n                this.contentTypes = contentTypes;\n            }\n            return;\n        }\n        this.contentTypes = ['*'];\n    }\n    allContentTypesAllowed() {\n        return this.contentTypes.find((type) => type === '*') !== undefined;\n    }\n    isContentTypeAllowed(mimetype) {\n        if (this.allContentTypesAllowed()) {\n            return true;\n        }\n        return this.contentTypes.find((type) => type === mimetype) !== undefined;\n    }\n    isFileSizeAllowed(fileSize) {\n        if (!this.maxFileSize) {\n            return true;\n        }\n        return fileSize <= this.maxFileSize;\n    }\n    makeUploadFile(file, index) {\n        return {\n            fileIndex: index,\n            id: this.generateId(),\n            name: file.name,\n            size: file.size,\n            type: file.type,\n            form: new FormData(),\n            progress: {\n                status: UploadStatus.Queue,\n                data: {\n                    percentage: 0,\n                    speed: 0,\n                    speedHuman: `${humanizeBytes(0)}/s`,\n                    startTime: null,\n                    endTime: null,\n                    eta: null,\n                    etaHuman: null\n                }\n            },\n            lastModifiedDate: new Date(file.lastModified),\n            sub: undefined,\n            nativeFile: file\n        };\n    }\n    parseResponseHeaders(httpHeaders) {\n        if (!httpHeaders) {\n            return;\n        }\n        return httpHeaders\n            .split('\\n')\n            .map((x) => x.split(/: */, 2))\n            .filter((x) => x[0])\n            .reduce((acc, x) => {\n            acc[x[0]] = x[1];\n            return acc;\n        }, {});\n    }\n}\n\nclass NgFileDropDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.uploadOutput = new EventEmitter();\n    }\n    ngOnInit() {\n        this._sub = [];\n        const concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        const allowedContentTypes = this.options && this.options.allowedContentTypes || ['*'];\n        const maxUploads = this.options && this.options.maxUploads || Number.POSITIVE_INFINITY;\n        const maxFileSize = this.options && this.options.maxFileSize || Number.POSITIVE_INFINITY;\n        this.upload = new NgUploaderService(concurrency, allowedContentTypes, maxUploads, maxFileSize);\n        this.el = this.elementRef.nativeElement;\n        this._sub.push(this.upload.serviceEvents.subscribe((event) => {\n            this.uploadOutput.emit(event);\n        }));\n        if (this.uploadInput instanceof EventEmitter) {\n            this._sub.push(this.upload.initInputEvents(this.uploadInput));\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    }\n    ngOnDestroy() {\n        this._sub.forEach(sub => sub.unsubscribe());\n    }\n    onDrop(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        const event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    }\n    onDragOver(e) {\n        if (!e) {\n            return;\n        }\n        const event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    }\n    onDragLeave(e) {\n        if (!e) {\n            return;\n        }\n        const event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    }\n}\nNgFileDropDirective.ɵfac = function NgFileDropDirective_Factory(t) { return new (t || NgFileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgFileDropDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgFileDropDirective, selectors: [[\"\", \"ngFileDrop\", \"\"]], hostBindings: function NgFileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function NgFileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function NgFileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function NgFileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { options: \"options\", uploadInput: \"uploadInput\" }, outputs: { uploadOutput: \"uploadOutput\" } });\nNgFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgFileDropDirective.propDecorators = {\n    options: [{ type: Input }],\n    uploadInput: [{ type: Input }],\n    uploadOutput: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgFileDropDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngFileDrop]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { uploadOutput: [{\n            type: Output\n        }], onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], options: [{\n            type: Input\n        }], uploadInput: [{\n            type: Input\n        }] }); })();\n\nclass NgFileSelectDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.fileListener = () => {\n            if (this.el.files) {\n                this.upload.handleFiles(this.el.files);\n            }\n        };\n        this.uploadOutput = new EventEmitter();\n    }\n    ngOnInit() {\n        this._sub = [];\n        const concurrency = this.options && this.options.concurrency || Number.POSITIVE_INFINITY;\n        const allowedContentTypes = this.options && this.options.allowedContentTypes || ['*'];\n        const maxUploads = this.options && this.options.maxUploads || Number.POSITIVE_INFINITY;\n        const maxFileSize = this.options && this.options.maxFileSize || Number.POSITIVE_INFINITY;\n        this.upload = new NgUploaderService(concurrency, allowedContentTypes, maxUploads, maxFileSize);\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this._sub.push(this.upload.serviceEvents.subscribe((event) => {\n            this.uploadOutput.emit(event);\n        }));\n        if (this.uploadInput instanceof EventEmitter) {\n            this._sub.push(this.upload.initInputEvents(this.uploadInput));\n        }\n    }\n    ngOnDestroy() {\n        if (this.el) {\n            this.el.removeEventListener('change', this.fileListener, false);\n            this._sub.forEach(sub => sub.unsubscribe());\n        }\n    }\n}\nNgFileSelectDirective.ɵfac = function NgFileSelectDirective_Factory(t) { return new (t || NgFileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgFileSelectDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgFileSelectDirective, selectors: [[\"\", \"ngFileSelect\", \"\"]], inputs: { options: \"options\", uploadInput: \"uploadInput\" }, outputs: { uploadOutput: \"uploadOutput\" } });\nNgFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgFileSelectDirective.propDecorators = {\n    options: [{ type: Input }],\n    uploadInput: [{ type: Input }],\n    uploadOutput: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgFileSelectDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngFileSelect]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { uploadOutput: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], uploadInput: [{\n            type: Input\n        }] }); })();\n\nclass NgxUploaderModule {\n}\nNgxUploaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxUploaderModule });\nNgxUploaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxUploaderModule_Factory(t) { return new (t || NgxUploaderModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxUploaderModule, { declarations: [NgFileDropDirective, NgFileSelectDirective], exports: [NgFileDropDirective, NgFileSelectDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxUploaderModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgFileDropDirective, NgFileSelectDirective],\n                exports: [NgFileDropDirective, NgFileSelectDirective]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-uploader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgFileDropDirective, NgFileSelectDirective, NgUploaderService, NgxUploaderModule, UploadStatus, humanizeBytes };\n\n//# sourceMappingURL=ngx-uploader.js.map","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { PaisAmbiente } from '@app/shared/modelos/enums/paisAmbiente.enum';\nimport { environment } from '@env/environment';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { CookiesUtilsService } from '@app/shared/servicios/cookies-utils.service';\nimport { CargandoService } from '@app/shared/servicios/cargando.service';\n\n@Component({\n  selector: 'app-comercial',\n  templateUrl: './comercial.component.html',\n  styleUrls: ['./comercial.component.scss'],\n})\nexport class ComercialComponent implements OnInit {\n  username$: Observable<any>;\n  cargando$: Observable<boolean | null>;\n  pais: PaisAmbiente;\n  PaisAmbiente = PaisAmbiente;\n  @ViewChild(MatSidenav, { static: true }) sideNav: MatSidenav;\n\n  constructor(\n    private store: Store<any>,\n    private cargandoService: CargandoService,\n    private cookiesService: CookiesUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.username$ = this.store.select('usuario', 'username');\n    this.cargando$ = this.cargandoService.cargar$.asObservable();\n    this.pais = environment.envCountry as PaisAmbiente;\n  }\n\n  subscribeSideNavChange() {\n    this.sideNav.openedChange.asObservable().subscribe((opened) => {\n      if (!this.obtenerEstadoMenu() && this.sideNav.opened) {\n        this.sideNav.close();\n      }\n    });\n  }\n  obtenerEstadoMenu() {\n    return this.cookiesService.obtenerInformacionCookie('mostrarMenuIzquierdo');\n  }\n\n  actualizarEstadoMenu(mostarMenu) {\n    this.cookiesService.guardarInformacionCookie(\n      'mostrarMenuIzquierdo',\n      mostarMenu\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <img src=\"../assets/images/brand.png\" alt=\"\">\n    <span class=\"example-spacer\"></span>\n    <button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">\n      <mat-icon>account_circle</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <div class=\"menu-content\">\n        <p class=\"user-name\"><strong>{{ username$ | async }}</strong></p>\n        <p i18n>Comercial</p>\n        <br>\n        <btn-cerrar-session></btn-cerrar-session>\n      </div>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-progress-bar *ngIf=\"cargando$ | async\" mode=\"indeterminate\" color=\"secondary\"></mat-progress-bar>\n\n<mat-sidenav-container>\n  <mat-sidenav #sidenav mode=\"side\" opened=\"true\">\n    <button mat-button class=\"button-toogle-menu\" (click)=\"sidenav.toggle(); actualizarEstadoMenu(sidenav.opened)\"\n            [class.menu-open]=\"sidenav.opened\">\n      <mat-icon *ngIf=\"!sidenav.opened\">menu</mat-icon>\n      <mat-icon *ngIf=\"sidenav.opened\">clear</mat-icon>\n    </button>\n    <app-menu-izquierdo [abrirMenu]=\"sidenav.opened\"></app-menu-izquierdo>\n  </mat-sidenav>\n\n  <mat-sidenav-content [class.full-width-with-collapsed-menu]=\"!sidenav.opened\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","export enum TipoNotificacion {\n  PUSH = 'PUSH',\n  SMS = 'SMS',\n  CORREO = 'E_MAIL',\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs/operators';\nimport { RegistroEmpresaMexico } from '@app/modulos/comercial/modelo/registroEmpresa.model';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { identificacionMexicoValidador } from '@app/modulos/comercial/validador/registro-empresa.validador';\nimport { TipoIdentificacionEmpresa } from '@app/modulos/comercial/modelo/tipo-identificacion-empresa.enum';\nimport { validarTextoSinNumero } from '@app/modulos/comercial/validador/expresionesRegulares';\nimport { ApiService } from '@core/servicios/api.service';\n\n@Component({\n  selector: 'app-registro-empresa-mexico',\n  templateUrl: './registro-empresa-mexico.component.html',\n  styleUrls: ['./registro-empresa-mexico.component.scss'],\n})\nexport class RegistroEmpresaMexicoComponent implements OnInit {\n  formularioEmpresa: FormGroup;\n  userSub: string;\n  cargando = false;\n  TipoIdentificacionEmpresa = TipoIdentificacionEmpresa;\n\n  constructor(\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    private customModal: CustomModalService,\n    private store: Store<any>\n  ) {}\n\n  ngOnInit() {\n    this.formularioEmpresa = this.crearFormulario(this.fb);\n  }\n\n  crearFormulario(fb: FormBuilder): FormGroup {\n    return fb.group(\n      {\n        identificacion: fb.control('', [Validators.required]),\n        tipoIdEmpresa: fb.control('', [Validators.required]),\n        nombreAdministrador: fb.control('', [\n          ...validarTextoSinNumero,\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n        ]),\n        totalEmpleados: fb.control('', [\n          Validators.pattern('^[0-9]*'),\n          Validators.min(1),\n          Validators.max(2147483647),\n          Validators.maxLength(10),\n          Validators.required,\n        ]),\n        nombre: fb.control('', [\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n          Validators.pattern(\n            '^[a-zA-Z0-9\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0178][a-zA-Z0-9\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0178 ().&@,#-]{0,301}$'\n          ),\n        ]),\n        correoAdministrador: fb.control('', [\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n          this.validarEmailCampo,\n        ]),\n      },\n      {\n        validator: identificacionMexicoValidador(\n          'tipoIdEmpresa',\n          'identificacion'\n        ),\n        updateOn: 'blur',\n      }\n    );\n  }\n\n  enviarFormulario(): void {\n    if (this.formularioEmpresa.valid) {\n      this.store\n        .select('usuario', 'sub')\n        .pipe(first())\n        .subscribe((value) => {\n          this.userSub = value;\n          this.registrarEmpresa();\n        });\n    }\n  }\n\n  registrarEmpresa() {\n    this.cargando = true;\n    const result: RegistroEmpresaMexico = {\n      ...this.formularioEmpresa.value,\n      codigoPais: 'MX',\n      idUsuario: this.userSub,\n    };\n    this.apiService\n      .post('empresa/sin_contrato/registrar', result)\n      .then(() => {\n        this.customModal.abrirModal(CustomModalType.SUCCESS, {\n          mensaje: 'Los cambios se han realizado con éxito.',\n        });\n        this.formularioEmpresa.reset();\n        this.cargando = false;\n      })\n      .catch((e) => {\n        this.cargando = false;\n\n        switch (e.data.codigo) {\n          case 'empresa.identificacion.duplicada':\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'Esta identificacion no se encuentra disponible.',\n            });\n            break;\n          case 'empresa.identificacion.salesforce.no-existe':\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'La empresa no se encuentra registrada en salesforce',\n            });\n            break;\n          default:\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'Sucedio un error inesperado en la aplicación.',\n            });\n        }\n      });\n  }\n\n  validarEnBlurYHacerTrim(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  get identificacion() {\n    return this.formularioEmpresa.get('identificacion');\n  }\n\n  get tipoIdEmpresa() {\n    return this.formularioEmpresa.get('tipoIdEmpresa');\n  }\n\n  get nombreAdministrador(): any {\n    return this.formularioEmpresa.get('nombreAdministrador');\n  }\n\n  get totalEmpleados() {\n    return this.formularioEmpresa.get('totalEmpleados');\n  }\n\n  get nombre(): any {\n    return this.formularioEmpresa.get('nombre');\n  }\n\n  get correoAdministrador(): any {\n    return this.formularioEmpresa.get('correoAdministrador');\n  }\n\n  validarEnBlur(control: AbstractControl) {\n    control.markAsDirty();\n  }\n\n  validarEmailCampo(control: AbstractControl): { pattern: boolean } {\n    const regExpr = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    const emailValue = control.value\n      ? regExpr.test(String(control.value).toLowerCase())\n      : true;\n    if (!emailValue) {\n      return { pattern: true };\n    }\n    return null;\n  }\n}\n","<h1>Selecciona el tipo de cuenta que tienes y escribe los <br> siguientes datos:</h1>\n<mat-radio-group class=\"radio-group__tipo-empresa\" >\n  <mat-radio-button [disabled]=\"true\"  value=\"1\">La empresa no subirá lista de colaboradores pero si subirá el documento de descuentos de nómina.</mat-radio-button>\n  <mat-radio-button value=\"2\" [checked]=\"true\">La empresa no subirá lista de colaboradores ni documento de descuentos de nómina.</mat-radio-button>\n  <mat-radio-button [disabled]=\"true\" value=\"3\">La empresa subirá los documentos de lista de colaboradores y descuentos de nómina.</mat-radio-button>\n\n</mat-radio-group>\n\n<form [formGroup]=\"formularioEmpresa\" autocomplete=\"off\" id=\"formularioCuenta\" (ngSubmit)=\"enviarFormulario()\">\n  <div class=\"row\" >\n    <div class=\"col-md-6\">\n      <div class=\"form-group\" >\n        <label for=\"nombre\" class=\"control-label\">Nombre de la empresa</label>\n        <input  formControlName=\"nombre\" id=\"nombre\" type=\"text\" class=\"form-control\" maxlength=\"301\" placeholder=\"Escribe el nombre de la empresa\" (blur)=\"validarEnBlur(nombre)\">\n        <app-mostrar-error-formularios id=\"erroresNombre\" [control]=\"nombre\" ></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"tipoIdEmpresa\" class=\"control-label\" i18n>Tipo de idetificación</label>\n        <mat-select formControlName=\"tipoIdEmpresa\" id=\"tipoIdEmpresa\"\n                    (blur)=\"validarEnBlur(tipoIdEmpresa)\" placeholder=\"Selecciona el tipo de identificación de la empresa\">\n          <mat-option [value]=\"TipoIdentificacionEmpresa.RFC\" [attr.data-test-id]=\"'tipoIdEmpresaOpcionRFC'\">RFC</mat-option>\n          <mat-option [value]=\"TipoIdentificacionEmpresa.REGISTRO_PATRONAL\" [attr.data-test-id]=\"'tipoIdEmpresaOpcionREGISTRO_PATRONAL'\">Registro patronal</mat-option>\n        </mat-select>\n        <app-mostrar-error-formularios id=\"erroresTipoIdEmpresa\"\n                                       [control]=\"tipoIdEmpresa\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"identificacion\" class=\"control-label\" i18n>Número de identificación</label>\n        <input formControlName=\"identificacion\" id=\"identificacion\" type=\"text\" maxlength=\"17\" class=\"form-control\"\n               placeholder=\"Escribe el número de identificación de la empresa\" (blur)=\"validarEnBlurYHacerTrim(identificacion)\"\n               [class.ng-invalid]=\"formularioEmpresa.errors && (formularioEmpresa.errors['invalidNIT'] || formularioEmpresa.errors['invalidCedula'])\">\n        <app-mostrar-error-formularios id=\"erroresIdentificacion\"\n                                       [control]=\"identificacion\"></app-mostrar-error-formularios>\n        <ng-container *ngIf=\"identificacion.value && formularioEmpresa.errors\">\n          <p class=\"error\"\n             *ngIf=\"identificacion.dirty && formularioEmpresa.errors['invalidRegistroPatronal'] && !formularioEmpresa.errors['invalidRegistroPatronal'].valid\">\n            El formato del Registro patronal no es valido</p>\n          <p class=\"error\"\n             *ngIf=\"identificacion.dirty && formularioEmpresa.errors['invalidRFC'] && !formularioEmpresa.errors['invalidRFC'].valid\">\n            El formato del RFC no es valido</p>\n        </ng-container>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"nombreAdministrador\" class=\"control-label\" i18n>Nombre del administrador</label>\n        <input formControlName=\"nombreAdministrador\" id=\"nombreAdministrador\" type=\"text\" class=\"form-control\"\n               maxlength=\"301\" placeholder=\"Escribe el nombre del administrador de la empresa\"\n               (blur)=\"validarEnBlurYHacerTrim(nombreAdministrador)\">\n        <app-mostrar-error-formularios id=\"erroresNombreAdministrador\"\n                                       [control]=\"nombreAdministrador\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\" >\n        <label for=\"totalEmpleados\" class=\"control-label\">Total de empleados</label>\n        <input formControlName=\"totalEmpleados\" id=\"totalEmpleados\" type=\"number\" maxlength=\"10\" class=\"form-control\" placeholder=\"Escribe el total de empleados\" (blur)=\"validarEnBlur(totalEmpleados)\">\n        <app-mostrar-error-formularios id=\"erroresTotal\" [control]=\"totalEmpleados\" ></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"correoAdministrador\" class=\"control-label\" i18n>Correo del representante de la empresa</label>\n        <input formControlName=\"correoAdministrador\" id=\"correoAdministrador\" type=\"text\" class=\"form-control\"\n               maxlength=\"301\" placeholder=\"Escribe el correo del representante de la empresa\"\n               (blur)=\"validarEnBlurYHacerTrim(correoAdministrador)\">\n        <app-mostrar-error-formularios id=\"erroresCorreoAdministrador\"\n                                       [control]=\"correoAdministrador\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n\n    <div class=\"col-md-12 col-xs-12 omega\">\n      <button [attr.id]=\"'botonContinuar'\" color=\"primary\" mat-button  type=\"submit\" [disabled]=\"!formularioEmpresa.valid || cargando\"  class=\"mat-button btns-primary align-r\">Guardar cambios</button>\n    </div>\n  </div>\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { environment } from '@env/environment';\nimport {\n  humanizeBytes,\n  UploaderOptions,\n  UploadFile,\n  UploadInput,\n  UploadOutput,\n} from 'ngx-uploader';\nimport { Subscription } from 'rxjs';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { RespuestaEnvioNotificaciones } from '@app/modulos/comercial/modelo/notificacion-dto.model';\nimport { ApiService } from '@core/servicios/api.service';\n\n@Component({\n  selector: 'app-subir-layout',\n  templateUrl: './subir-layout.component.html',\n  styleUrls: ['./subir-layout.component.scss'],\n})\nexport class SubirLayoutComponent implements OnInit, OnDestroy {\n  uuidEmpresa: string;\n  _disabled: boolean;\n\n  nombre: string;\n  files: UploadFile;\n  options: UploaderOptions;\n  empresaSubscription: Subscription;\n  uploadInput: EventEmitter<UploadInput>;\n  cargando = false;\n  humanizeBytes: (bytes: number) => string;\n\n  @Input() disabled: boolean;\n  @Input() endPoint = 'enviar_mensajes';\n  @Output() enviarEstadoLayout = new EventEmitter();\n  @ViewChild('file', { static: true }) file: ElementRef;\n\n  constructor(\n    private apiService: ApiService,\n    private customModalService: CustomModalService\n  ) {\n    this.uploadInput = new EventEmitter<UploadInput>();\n    this.humanizeBytes = humanizeBytes;\n  }\n\n  ngOnInit() {\n    this.options = {\n      concurrency: 0,\n      allowedContentTypes: [\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/msexcel',\n        'application/vnd.ms-excel',\n      ],\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.empresaSubscription) {\n      this.empresaSubscription.unsubscribe();\n    }\n  }\n\n  onUploadOutput(output: UploadOutput): void {\n    this.validarTipoDeArchivo(output);\n    if (output.type === 'addedToQueue' && typeof output.file !== 'undefined') {\n      setTimeout(() => {\n        if (output.file.size > 635000) {\n          this.eliminarDocumento();\n          this.customModalService.abrirModal(CustomModalType.ERROR, {\n            mensaje: 'Recuerda cargar un archivo menor a 635 kb',\n          });\n        } else {\n          this.files = output.file;\n          this.nombre = output.file.name;\n        }\n      }, 200);\n    } else if (\n      output.type === 'uploading' &&\n      typeof output.file !== 'undefined'\n    ) {\n      this.cargando = true;\n      this.enviarEstadoLayout.emit({\n        estado: false,\n        estadoSubidaDocumento: output.file.progress.data.percentage,\n      });\n    } else if (output.type === 'done') {\n      this._disabled = false;\n      this.cargando = false;\n      switch (output.file.responseStatus) {\n        case 200:\n          this.cargaExcelExitosa(output.file.response);\n          break;\n        case 400:\n          this.mostrarModalErrorValidacion(output.file.response);\n          break;\n        case 0:\n          this.mostrarModalErrorPersonalizado(\n            'No pudimos enviar la notificación, recuerda cargar un archivo máximo con 20.000 registros'\n          );\n          break;\n        default:\n          this.mostrarModalError();\n      }\n      this.eliminarDocumento();\n    }\n  }\n\n  private validarTipoDeArchivo(output: UploadOutput) {\n    if (\n      typeof output.file !== 'undefined' &&\n      !this.options.allowedContentTypes.some(\n        (value) => value === output.file.type\n      )\n    ) {\n      this.customModalService.abrirModal(CustomModalType.ERROR, {\n        mensaje:\n          'El archivo no es válido. Solo puedes subir documentos tipo XLS ó XLSX',\n      });\n    }\n  }\n\n  eliminarDocumento() {\n    this.uploadInput.emit({ type: 'removeAll' });\n    this.uploadInput.emit({ type: 'cancelAll' });\n    this.files = null;\n    this.file.nativeElement.value = null;\n    this.nombre = null;\n  }\n\n  startUpload(body: any): void {\n    this._disabled = true;\n    this.cargando = true;\n    this.apiService.getCurrentSesion().then((sesion) => {\n      const accessToken = sesion.getAccessToken();\n      const jwt = accessToken.getJwtToken();\n      const event: UploadInput = {\n        type: 'uploadFile',\n        file: this.files,\n        url: environment.endPointNotificacion + this.endPoint,\n        method: 'POST',\n        headers: { ['Authorization']: 'Bearer ' + jwt },\n        data: body,\n      };\n      this.uploadInput.emit(event);\n    });\n  }\n\n  mostrarModalError() {\n    const dialog = this.customModalService.abrirModal(CustomModalType.ERROR, {\n      mensaje: 'La notificación no pudo ser enviada',\n    });\n    dialog.afterClosed().subscribe(() => {\n      this._disabled = false;\n    });\n  }\n\n  mostrarModalErrorPersonalizado(mensaje: string) {\n    const dialog = this.customModalService.abrirModal(CustomModalType.ERROR, {\n      mensaje,\n    });\n    dialog.afterClosed().subscribe(() => {\n      this._disabled = false;\n    });\n  }\n\n  mostrarModalErrorValidacion(errorValidacion: {\n    mensaje: string;\n    campos: string[];\n  }) {\n    const dialog = this.customModalService.abrirModal(CustomModalType.ERROR, {\n      mensaje: ['La notificación no pudo ser enviada', errorValidacion.mensaje],\n    });\n    dialog.afterClosed().subscribe(() => {\n      this._disabled = false;\n    });\n  }\n\n  cargaExcelExitosa(respuesta: RespuestaEnvioNotificaciones) {\n    let dialog = this.customModalService.abrirModal(CustomModalType.SUCCESS, {\n      mensaje: respuesta.mensaje,\n    });\n    if (dialog) {\n      dialog.afterClosed().subscribe(() => {\n        this._disabled = false;\n        this.enviarEstadoLayout.emit('modalCerrado');\n      });\n    }\n  }\n}\n","<label class=\"loading-status\">\n  <div id=\"upload_button\" >\n    <label class=\"contenedor-input\">\n      <input type=\"file\" #file name=\"file\" id=\"file\" ngFileSelect [disabled]=\"disabled || _disabled\" [options]=\"options\"\n        [uploadInput]=\"uploadInput\" (uploadOutput)=\"onUploadOutput($event)\">\n      <span class=\"btns  mat-button\" [class.disabled]=\"disabled || _disabled\" >Seleccionar</span>\n    </label>\n  </div>\n</label>\n","import { FormGroup } from '@angular/forms';\nimport { TipoIdentificacionEmpresa } from '../modelo/tipo-identificacion-empresa.enum';\n\nexport function identificacionColombiaValidador(\n  tipoIdentificacion: string,\n  identificacion: string\n) {\n  return (group: FormGroup): { [key: string]: any } => {\n    const tipoIdentificacionControl = group.controls[tipoIdentificacion];\n    const identificacionControl = group.controls[identificacion];\n    if (tipoIdentificacionControl.value === TipoIdentificacionEmpresa.NIT) {\n      const validNit = new RegExp(/^[0-9]{8,15}-{1}[0-9]{1}$/).test(\n        String(identificacionControl.value).toLowerCase()\n      );\n      return validNit\n        ? null\n        : { invalidNIT: { valid: false, value: identificacionControl.value } };\n    } else {\n      const validCedula = new RegExp(/^[1-9][0-9]{5,10}$/).test(\n        String(identificacionControl.value).toLowerCase()\n      );\n      return validCedula\n        ? null\n        : {\n            invalidCedula: { valid: false, value: identificacionControl.value },\n          };\n    }\n  };\n}\n\nexport function identificacionMexicoValidador(\n  tipoIdentificacion: string,\n  identificacion: string\n) {\n  return (group: FormGroup): { [key: string]: any } => {\n    const tipoIdentificacionControl = group.controls[tipoIdentificacion];\n    const identificacionControl = group.controls[identificacion];\n    if (\n      tipoIdentificacionControl.value ===\n      TipoIdentificacionEmpresa.REGISTRO_PATRONAL\n    ) {\n      const validRP = new RegExp(/^[a-zA-Z0-9]{11}[a-zA-Z0-9]{0,2}$/).test(\n        String(identificacionControl.value).toLowerCase()\n      );\n      return validRP\n        ? null\n        : {\n            invalidRegistroPatronal: {\n              valid: false,\n              value: identificacionControl.value,\n            },\n          };\n    } else {\n      const validRFC = /^([A-Z,Ñ,&]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[A-Z|\\d]{3})$/.test(\n        String(identificacionControl.value)\n      );\n      return validRFC\n        ? null\n        : { invalidRFC: { valid: false, value: identificacionControl.value } };\n    }\n  };\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs/operators';\nimport { TipoNotificacion } from '@app/modulos/comercial/modelo/tipo-notificacion.enum';\nimport {\n  ArchivoMensajesDTO,\n  RespuestaEnvioNotificaciones,\n} from '@app/modulos/comercial/modelo/notificacion-dto.model';\nimport { SubirLayoutComponent } from '@app/modulos/comercial/componentes/subir-layout/subir-layout.component';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Accion } from '@app/modulos/comercial/modelo/accion.model';\nimport { ApiService } from '@core/servicios/api.service';\n\n@Component({\n  selector: 'app-notificar',\n  templateUrl: './notificar.component.html',\n  styleUrls: ['./notificar.component.scss'],\n})\nexport class NotificarComponent implements OnInit {\n  @ViewChild('cargaArchivo', { static: true })\n  cargaArchivo: SubirLayoutComponent;\n\n  userSub: string;\n  cargando = false;\n  formulario: FormGroup;\n  TipoNotificacion = TipoNotificacion;\n  limitesMensaje = {\n    SMS: 160,\n    PUSH: 240,\n    CORREO: 500,\n  };\n  acciones: [Accion];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<any>,\n    private http: HttpClient,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.formulario = this.crearFormulario(this.fb);\n    this.store\n      .select('usuario', 'sub')\n      .pipe(first())\n      .subscribe((value) => {\n        this.userSub = value;\n      });\n    this.obtenerAcciones();\n  }\n\n  crearFormulario(fb: FormBuilder): FormGroup {\n    return fb.group({\n      titulo: fb.control('', [\n        Validators.required,\n        Validators.maxLength(65),\n        Validators.minLength(2),\n      ]),\n      tipo: fb.control('', [Validators.required]),\n      campana: fb.control('', [\n        Validators.required,\n        Validators.maxLength(65),\n        Validators.minLength(2),\n      ]),\n      accion: fb.control(''),\n      descripcion: fb.control('', [\n        Validators.required,\n        Validators.maxLength(160),\n        Validators.minLength(5),\n      ]),\n      checkTodos: fb.control(false, [Validators.required]),\n    });\n  }\n\n  enviarFormulario(): void {\n    if (this.formulario.valid) {\n      const datosFormulario = this.formulario.value;\n      const body: ArchivoMensajesDTO = {\n        idCampania: datosFormulario.campana,\n        titulo: datosFormulario.titulo,\n        mensaje: datosFormulario.descripcion,\n        medios: datosFormulario.tipo,\n        todos: datosFormulario.checkTodos,\n        accion: datosFormulario.accion,\n        idUsuario: this.userSub,\n      };\n      if (!this.checkTodos.value && this.cargaArchivo.files) {\n        this.cargaArchivo.startUpload(body);\n      } else {\n        this.enviarPeticionTodos(body);\n      }\n    }\n  }\n\n  get titulo() {\n    return this.formulario.get('titulo');\n  }\n\n  get tipo() {\n    return this.formulario.get('tipo');\n  }\n\n  get campana() {\n    return this.formulario.get('campana');\n  }\n\n  get accion() {\n    return this.formulario.get('accion');\n  }\n\n  get descripcion(): any {\n    return this.formulario.get('descripcion');\n  }\n\n  get checkTodos(): any {\n    return this.formulario.get('checkTodos');\n  }\n\n  validarEnBlur(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  validarEnBlurYHacerTrim(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  errorArchivoRequerido() {\n    return !this.checkTodos.value && !this.cargaArchivo.files;\n  }\n\n  seleccionCambio() {\n    if (this.checkTodos.value && this.cargaArchivo) {\n      this.cargaArchivo.eliminarDocumento();\n    }\n  }\n\n  actualizaValidaciones() {\n    const mediosSeleccionados: string[] = this.tipo.value;\n    if (mediosSeleccionados.some((medio) => medio === TipoNotificacion.SMS)) {\n      this.descripcion.setValidators([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(this.limitesMensaje.SMS),\n      ]);\n    } else if (\n      mediosSeleccionados.some((medio) => medio === TipoNotificacion.PUSH)\n    ) {\n      this.descripcion.setValidators([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(this.limitesMensaje.PUSH),\n      ]);\n    } else {\n      this.descripcion.setValidators([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(this.limitesMensaje.CORREO),\n      ]);\n    }\n    this.descripcion.updateValueAndValidity();\n    this.formulario.updateValueAndValidity();\n  }\n\n  enviarPeticionTodos(body: ArchivoMensajesDTO) {\n    this.cargando = true;\n    this.apiService\n      .getCurrentSesion()\n      .then((sesion) => {\n        const accessToken = sesion.getAccessToken();\n        const jwt = accessToken.getJwtToken();\n        const httpOptions = {\n          headers: new HttpHeaders({\n            ['Authorization']: 'Bearer ' + jwt,\n          }),\n        };\n        const url =\n          environment.endPointNotificacion + this.cargaArchivo.endPoint;\n        return this.http\n          .post<RespuestaEnvioNotificaciones>(url, body, httpOptions)\n          .toPromise();\n      })\n      .then(\n        (respuesta) => {\n          this.cargando = false;\n          this.cargaArchivo.cargaExcelExitosa(respuesta);\n        },\n        () => {\n          this.cargando = false;\n          this.cargaArchivo.mostrarModalError();\n        }\n      );\n  }\n\n  obtenerAcciones() {\n    this.apiService.get('notificacion/acciones').then((acciones: [Accion]) => {\n      this.acciones = acciones;\n    });\n  }\n}\n","<h1 i18n>Notificaciones</h1>\n\n<div class=\"contenedor-formulario\">\n  <form [formGroup]=\"formulario\" autocomplete=\"off\" id=\"formulario\" (ngSubmit)=\"enviarFormulario()\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"titulo\" class=\"control-label\" i18n>Título</label>\n          <input formControlName=\"titulo\" id=\"titulo\" type=\"text\" class=\"form-control\" maxlength=\"301\"\n                 placeholder=\"Título de notificación\" (blur)=\"validarEnBlurYHacerTrim(titulo)\">\n          <app-mostrar-error-formularios id=\"erroresTitulo\" [control]=\"titulo\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"tipo\" class=\"control-label\" i18n>Tipo</label>\n          <mat-select formControlName=\"tipo\" id=\"tipo\" multiple placeholder=\"SMS, Notificación push\" (selectionChange)=\"actualizaValidaciones()\">\n            <mat-option [value]=\"TipoNotificacion.SMS\">SMS</mat-option>\n            <!-- <mat-option [value]=\"TipoNotificacion.CORREO\">Correo</mat-option> -->\n            <mat-option [value]=\"TipoNotificacion.PUSH\">Notificación Push</mat-option>\n          </mat-select>\n          <app-mostrar-error-formularios id=\"erroresTipo\" [control]=\"tipo\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"campana\" class=\"control-label\" i18n>Notificación</label>\n          <input formControlName=\"campana\" id=\"campana\" type=\"text\" class=\"form-control\" maxlength=\"301\"\n                 placeholder=\"Identificador de la notificación\" (blur)=\"validarEnBlurYHacerTrim(campana)\">\n          <app-mostrar-error-formularios id=\"erroresCampana\" [control]=\"campana\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group\">\n          <label for=\"accion\" class=\"control-label\" i18n>Acción (opcional)</label>\n          <mat-select formControlName=\"accion\" id=\"accion\" placeholder=\"Accion\">\n            <mat-option *ngFor=\"let accion of acciones\" [value]=\"accion.valor\">{{accion.descripcion}}</mat-option>\n          </mat-select>\n          <app-mostrar-error-formularios id=\"erroresAccion\" [control]=\"accion\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-6\" style=\"display: none\">\n        <div class=\"form-group\">\n          <label for=\"checkTodos\" class=\"control-label\" i18n>Enviar a:</label>\n          <mat-checkbox formControlName=\"checkTodos\" id=\"checkTodos\" type=\"text\" class=\"form-control\" (change)=\"seleccionCambio()\">\n            ¿Todos los usuarios?\n          </mat-checkbox>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"form-group form-upload\">\n          <label for=\"archivo\" class=\"control-label\" i18n>Subir archivo</label>\n          <div class=\"campo-archivo\">\n            {{cargaArchivo.nombre || \"No se ha seleccionado ningún archivo\"}}\n            <app-subir-layout #cargaArchivo [disabled]=\"checkTodos.value\"></app-subir-layout>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class=\"form-group form-descripcion\">\n          <label for=\"descripcion\" class=\"control-label\" i18n>Mensaje</label>\n          <!-- <p class=\"ayuda\">Puedes usar los siguientes parametros en el mensaje: {{'{primer_nombre_usuario}'}}</p> -->\n          <textarea matInput formControlName=\"descripcion\" id=\"descripcion\" type=\"text\" class=\"form-control\"\n                 placeholder=\"Texto de la notificación\" (blur)=\"validarEnBlurYHacerTrim(descripcion)\"></textarea>\n          <app-mostrar-error-formularios id=\"erroresDescripcion\" [control]=\"descripcion\"></app-mostrar-error-formularios>\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <button mat-button i18n type=\"submit\" [attr.id]=\"'botonEnviar'\" color=\"primary\" class=\"mat-button btns-primary align-r\"\n                [disabled]=\"!formulario.valid || cargando || errorArchivoRequerido() || cargaArchivo.cargando\">\n                Enviar\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs/operators';\nimport { RegistroEmpresaColombia } from '@app/modulos/comercial/modelo/registroEmpresa.model';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { TipoIdentificacionEmpresa } from '@app/modulos/comercial/modelo/tipo-identificacion-empresa.enum';\nimport { identificacionColombiaValidador } from '@app/modulos/comercial/validador/registro-empresa.validador';\nimport { validarTextoSinNumero } from '@app/modulos/comercial/validador/expresionesRegulares';\nimport { ApiService } from '@core/servicios/api.service';\n\n@Component({\n  selector: 'app-registro-empresa-colombia',\n  templateUrl: './registro-empresa-colombia.component.html',\n  styleUrls: ['./registro-empresa-colombia.component.scss'],\n})\nexport class RegistroEmpresaColombiaComponent implements OnInit {\n  formularioEmpresa: FormGroup;\n  userSub: string;\n  cargando = false;\n  correo: string;\n  TipoIdentificacionEmpresa = TipoIdentificacionEmpresa;\n\n  constructor(\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    private customModal: CustomModalService,\n    private store: Store<any>\n  ) {}\n\n  ngOnInit() {\n    this.formularioEmpresa = this.crearFormulario(this.fb);\n  }\n\n  crearFormulario(fb: FormBuilder): FormGroup {\n    return fb.group(\n      {\n        identificacion: fb.control('', [Validators.required]),\n        tipoIdEmpresa: fb.control('', [Validators.required]),\n        totalEmpleados: fb.control('', [\n          Validators.required,\n          Validators.pattern('^[0-9]*'),\n          Validators.min(1),\n          Validators.max(2147483647),\n          Validators.maxLength(10),\n        ]),\n        nombre: fb.control('', [\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n        ]),\n        nombreAdministrador: fb.control('', [\n          ...validarTextoSinNumero,\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n        ]),\n        correoAdministrador: fb.control('', [\n          Validators.required,\n          Validators.maxLength(301),\n          Validators.minLength(2),\n          this.validarEmailCampo,\n        ]),\n      },\n      {\n        validator: identificacionColombiaValidador(\n          'tipoIdEmpresa',\n          'identificacion'\n        ),\n      }\n    );\n  }\n\n  enviarFormulario(): void {\n    if (this.formularioEmpresa.valid) {\n      this.store\n        .select('usuario', 'sub')\n        .pipe(first())\n        .subscribe((value) => {\n          this.userSub = value;\n          this.registrarEmpresa();\n        });\n    }\n  }\n\n  registrarEmpresa() {\n    this.correo = this.formularioEmpresa.get('correoAdministrador').value;\n    this.cargando = true;\n    const result: RegistroEmpresaColombia = {\n      ...this.formularioEmpresa.value,\n      codigoPais: 'CO',\n      idUsuario: this.userSub,\n      correoAdministrador: this.correo.toLowerCase(),\n    };\n    this.apiService\n      .post('empresa/sin_contrato/registrar', result)\n      .then(() => {\n        this.customModal.abrirModal(CustomModalType.SUCCESS, {\n          mensaje: 'Los cambios se han realizado con éxito.',\n        });\n        this.formularioEmpresa.reset();\n        this.cargando = false;\n      })\n      .catch((e) => {\n        this.cargando = false;\n\n        switch (e.data.codigo) {\n          case 'empresa.identificacion.duplicada':\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'Esta identificacion no se encuentra disponible.',\n            });\n            break;\n          case 'empresa.identificacion.salesforce.no-existe':\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'La empresa no se encuentra registrada en salesforce',\n            });\n            break;\n          default:\n            this.customModal.abrirModal(CustomModalType.ERROR, {\n              mensaje: 'Sucedio un error inesperado en la aplicación.',\n            });\n        }\n      });\n  }\n\n  get identificacion() {\n    return this.formularioEmpresa.get('identificacion');\n  }\n\n  get tipoIdEmpresa() {\n    return this.formularioEmpresa.get('tipoIdEmpresa');\n  }\n\n  get totalEmpleados() {\n    return this.formularioEmpresa.get('totalEmpleados');\n  }\n\n  get nombre(): any {\n    return this.formularioEmpresa.get('nombre');\n  }\n\n  get nombreAdministrador(): any {\n    return this.formularioEmpresa.get('nombreAdministrador');\n  }\n\n  get correoAdministrador(): any {\n    return this.formularioEmpresa.get('correoAdministrador');\n  }\n\n  validarEnBlur(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  validarEnBlurYHacerTrim(control: AbstractControl) {\n    const valor: string = control.value;\n    control.setValue(valor.trim());\n    control.markAsDirty();\n  }\n\n  validarEmailCampo(control: AbstractControl): { pattern: boolean } {\n    const regExpr = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    const emailValue = control.value\n      ? regExpr.test(String(control.value).toLowerCase())\n      : true;\n    if (!emailValue) {\n      return { pattern: true };\n    }\n    return null;\n  }\n}\n","<h1 i18n>Ingresa la información de la empresa que deseas <br> registrar en qiip:</h1>\n\n<form [formGroup]=\"formularioEmpresa\" autocomplete=\"off\" id=\"formularioEmpresa\" (ngSubmit)=\"enviarFormulario()\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"nombre\" class=\"control-label\" i18n>Nombre de la empresa</label>\n        <input formControlName=\"nombre\" id=\"nombre\" type=\"text\" class=\"form-control\" maxlength=\"301\"\n               placeholder=\"Escribe el nombre de la empresa\" (blur)=\"validarEnBlurYHacerTrim(nombre)\">\n        <app-mostrar-error-formularios id=\"erroresNombre\" [control]=\"nombre\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"tipoIdEmpresa\" class=\"control-label\" i18n>Tipo de indetificación</label>\n        <mat-select formControlName=\"tipoIdEmpresa\" id=\"tipoIdEmpresa\"\n                    (blur)=\"validarEnBlur(tipoIdEmpresa)\" placeholder=\"Selecciona el tipo de identificación de la empresa\">\n          <mat-option [value]=\"TipoIdentificacionEmpresa.NIT\" [attr.data-test-id]=\"'tipoIdEmpresaOpcionNIT'\">NIT</mat-option>\n          <mat-option [value]=\"TipoIdentificacionEmpresa.CEDULA\" [attr.data-test-id]=\"'tipoIdEmpresaOpcionCEDULA'\">Cédula</mat-option>\n        </mat-select>\n        <app-mostrar-error-formularios id=\"erroresTipoIdEmpresa\"\n                                       [control]=\"tipoIdEmpresa\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"identificacion\" class=\"control-label\" i18n>Número de identificación</label>\n        <input formControlName=\"identificacion\" id=\"identificacion\" type=\"text\" maxlength=\"17\" class=\"form-control\"\n               placeholder=\"Escribe el número de identificación de la empresa\" (blur)=\"validarEnBlurYHacerTrim(identificacion)\"\n               [class.ng-invalid]=\"formularioEmpresa.errors && (formularioEmpresa.errors['invalidNIT'] || formularioEmpresa.errors['invalidCedula'])\">\n        <app-mostrar-error-formularios id=\"erroresIdentificacion\"\n                                       [control]=\"identificacion\"></app-mostrar-error-formularios>\n        <ng-container *ngIf=\"identificacion.value && formularioEmpresa.errors\">\n          <p class=\"error\"\n             *ngIf=\"identificacion.dirty && formularioEmpresa.errors['invalidNIT'] && !formularioEmpresa.errors['invalidNIT'].valid\">\n            El formato del NIT no es valido</p>\n          <p class=\"error\"\n             *ngIf=\"identificacion.dirty && formularioEmpresa.errors['invalidCedula'] && !formularioEmpresa.errors['invalidCedula'].valid\">\n            El formato de la identificacion no\n            es valido</p>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"nombreAdministrador\" class=\"control-label\" i18n>Nombre del administrador</label>\n        <input formControlName=\"nombreAdministrador\" id=\"nombreAdministrador\" type=\"text\" class=\"form-control\"\n               maxlength=\"301\" placeholder=\"Escribe el nombre del administrador de la empresa\"\n               (blur)=\"validarEnBlurYHacerTrim(nombreAdministrador)\">\n        <app-mostrar-error-formularios id=\"erroresNombreAdministrador\"\n                                       [control]=\"nombreAdministrador\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"correoAdministrador\" class=\"control-label\" i18n>Correo del administrador</label>\n        <input formControlName=\"correoAdministrador\" id=\"correoAdministrador\" type=\"text\" class=\"form-control\"\n               maxlength=\"301\" placeholder=\"Escribe el correo del administrador de la empresa\"\n               (blur)=\"validarEnBlurYHacerTrim(correoAdministrador)\">\n        <app-mostrar-error-formularios id=\"erroresCorreoAdministrador\"\n                                       [control]=\"correoAdministrador\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"totalEmpleados\" class=\"control-label\" i18n>Total de empleados</label>\n        <input formControlName=\"totalEmpleados\" id=\"totalEmpleados\" type=\"text\" maxlength=\"10\" class=\"form-control\"\n               placeholder=\"Escribe el total de empleados\" (blur)=\"validarEnBlurYHacerTrim(totalEmpleados)\">\n        <app-mostrar-error-formularios id=\"erroresTotal\" [control]=\"totalEmpleados\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-12 col-xs-12 omega\">\n      <button [attr.id]=\"'botonContinuar'\" color=\"primary\" mat-button type=\"submit\"\n              [disabled]=\"!formularioEmpresa.valid || cargando\" class=\"mat-button btns-primary align-r\" i18n>Guardar\n        cambios\n      </button>\n    </div>\n  </div>\n</form>\n"],"sourceRoot":"webpack:///"}