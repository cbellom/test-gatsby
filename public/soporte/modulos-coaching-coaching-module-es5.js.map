{"version":3,"sources":["webpack:///src/app/modulos/coaching/guards/detalle-sesion-coach.guard.ts","webpack:///src/app/modulos/coaching/componentes/lista-coaching-usuario-mensual-edicion/lista-coaching-usuario-mensual-edicion.component.ts","webpack:///src/app/modulos/coaching/componentes/lista-coaching-usuario-mensual-edicion/lista-coaching-usuario-mensual-edicion.component.html","webpack:///src/app/modulos/coaching/modelo/estado-sesion.enum.ts","webpack:///src/app/modulos/coaching/vista/inicio/inicio.component.ts","webpack:///src/app/modulos/coaching/vista/inicio/inicio.component.html","webpack:///src/app/modulos/coaching/componentes/lista-sesiones/lista-sesiones.component.ts","webpack:///src/app/modulos/coaching/componentes/lista-sesiones/lista-sesiones.component.html","webpack:///src/app/modulos/coaching/vista/id-coach-invalido/id-coach-invalido.component.ts","webpack:///src/app/modulos/coaching/vista/id-coach-invalido/id-coach-invalido.component.html","webpack:///src/app/modulos/coaching/componentes/detalle-bienestar-financiero/detalle-bienestar-financiero.component.ts","webpack:///src/app/modulos/coaching/componentes/detalle-bienestar-financiero/detalle-bienestar-financiero.component.html","webpack:///src/app/modulos/coaching/componentes/modal-otp-sesion/modal-otp-sesion.component.ts","webpack:///src/app/modulos/coaching/componentes/modal-otp-sesion/modal-otp-sesion.component.html","webpack:///src/app/modulos/coaching/componentes/lista-sesiones-vencidas/lista-sesiones-vencidas.component.ts","webpack:///src/app/modulos/coaching/componentes/lista-sesiones-vencidas/lista-sesiones-vencidas.component.html","webpack:///src/app/modulos/coaching/vista/programar-sesiones/programar-sesiones.component.ts","webpack:///src/app/modulos/coaching/vista/programar-sesiones/programar-sesiones.component.html","webpack:///src/app/modulos/coaching/componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component.ts","webpack:///src/app/modulos/coaching/componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component.html","webpack:///src/app/modulos/coaching/componentes/lista-sesiones-cards/lista-sesiones-cards.component.ts","webpack:///src/app/modulos/coaching/componentes/lista-sesiones-cards/lista-sesiones-cards.component.html","webpack:///src/app/modulos/coaching/vista/tareas/leads.component.ts","webpack:///src/app/modulos/coaching/vista/tareas/leads.component.html","webpack:///src/app/modulos/coaching/guards/sesiones-coach.guard.ts","webpack:///src/app/modulos/coaching/guards/lista-sesiones-coach.guard.ts","webpack:///src/app/modulos/coaching/coaching.component.ts","webpack:///src/app/modulos/coaching/coaching.component.html","webpack:///src/app/modulos/coaching/vista/lead-generico/lead-generico.component.ts","webpack:///src/app/modulos/coaching/vista/lead-generico/lead-generico.component.html","webpack:///src/app/modulos/coaching/vista/lista-coaching-usuario-mensual/lista-coaching-usuario-mensual.component.ts","webpack:///src/app/modulos/coaching/vista/lista-coaching-usuario-mensual/lista-coaching-usuario-mensual.component.html","webpack:///src/app/modulos/coaching/componentes/menu-izquierdo/menu-izquierdo.component.ts","webpack:///src/app/modulos/coaching/componentes/menu-izquierdo/menu-izquierdo.component.html","webpack:///src/app/modulos/coaching/servicios/coaching-api.service.ts","webpack:///src/app/modulos/coaching/guards/coach-invalido.guard.ts","webpack:///src/app/modulos/coaching/vista/detalle-coaching-usuario/detalle-coaching-usuario.component.ts","webpack:///src/app/modulos/coaching/vista/detalle-coaching-usuario/detalle-coaching-usuario.component.html","webpack:///src/app/modulos/coaching/componentes/formulario-agendar-sesion/formulario-agendar-sesion.component.ts","webpack:///src/app/modulos/coaching/componentes/formulario-agendar-sesion/formulario-agendar-sesion.component.html","webpack:///src/app/modulos/coaching/modelo/sesionesAgendadas.model.ts","webpack:///src/app/modulos/coaching/coaching.module.ts","webpack:///src/app/modulos/coaching/modelo/proposito.enum.ts"],"names":["DetalleSesionCoachGuard","store","router","next","state","idSesion","params","select","pipe","sesions","sesionesUsuario","filter","sesion","length","navigate","ListaCoachingUsuarioMensualEdicionComponent","fb","coachingApiService","customModalService","cargandoService","dialogRef","data","horas","horasConsultadas","coaches","cargando","sesiones","zonaHoraria","zone","suscripciones","disableActualizar","push","subscribe","formulario","crearFormulario","value","isUserAdmin","minDate","tz","format","group","fecha","control","required","hora","coach","disabled","event","get","setValue","moderadoresDisponibles","enable","id","valid","actualizandoHoras","disable","mostrarCargando","consultarDisponibilidad","envCountry","fechaIncialConZona","encodeURIComponent","then","disponibilidadesCoaches","disponibilidades","ocultarCargando","error","console","mostarModalErrorHorarios","startOf","abrirModal","ERROR","mensaje","limpiarFormulario","close","SUCCESS","closeModalAfterUpdate","parametros","fechaInicio","periodoTiempo","inicio","fechaFin","fin","idCoachAnterior","idCoach","idCoachActual","idAhorrador","idCitaAnterior","actualizarSesion","mostarModalSuccess","mostarModalError","isAdmin","val","hoy","toDate","onNoClick","horasOnChange","selector","templateUrl","styleUrls","EstadoSesion","InicioComponent","MENSAJE_CAMBIO_ESTADO_SESION","MENSAJE_CAMBIO_ESTADO_SESION_ERROR","ahorradores","tiemposParaTerminarSesiones","consultarMotivos","zonaHoraria$","fechaActual","obtenerFecha","Date","sesionesVencidasCoach$","ordenar","sesiones$","sesionesVigentes$","sesionesVencidas","filtrarFecha","cargarDatosDeAhorradoresDeSesiones","calcularTiempos","forEach","suscripcion","unsubscribe","fechaSesion","fechaInicioMoment","consultaMotivos","motivos","sesionActualizar","body","estado","FINALIZADA_POR_TELEFONO","motivo","actualizarEstadoSesion","recargarConsulta","err","slice","sort","a","b","getTime","idUsuario","ahorrador","sesionesVigentes","map","filtrarUnicos","consultarAhorrador","ahorradoresResponse","lista","index","self","indexOf","clase","fechaFinMoment","moment","calcularTiempoFinSesion","fechaFinSesion","setMinutes","getMinutes","f1","f2","tiempo","minutos","Math","floor","segundos","toFixed","consultarSesiones","sesionesCoach","ordenarSesionesVigentes","ordenarSesionesVencidas","ordenarSesion","estadoSesion","VENCIDA","dispatch","type","payload","ListaSesionesComponent","_sesiones","temas","displayedColumns","datosTabla","tema","toString","refrescarDatosTabla","dataSource","paginator","coachSesion","find","nombreCompleto","IdCoachInvalidoComponent","DetalleBienestarFinancieroComponent","modalService","detalleToogle","checkHabilitado","secciones","compartirResultadoEvaluacionBienestar","compartirResultadoBienestarFinanciero","$event","checked","compartirResultados","compartirResultadosEvaluacion","servicioEvaluaciones","log","compartirEvaluacionBienestar","paramsEvaluacion","idEvaluacion","idComprador","consultarEvaluacion","Object","keys","puntajes","datosEvaluacion","checkboxSeleccionado","toogle","ModalOtpSesionComponent","customModal","otpForm","minLength","bodyOtp","otp","flujoOtp","confirmarOTP","registarSesion","cerrar","validar","ListaSesionesVencidasComponent","emit","TAMANO_CONSULTA","ALTURA_ITEM","MAX_ITEMS","ProgramarSesionesComponent","dialog","inputNombreUsuario","listaUsuariosCache","mostrarSinResultados","bloquearBusquedaScroll","paginaConsultar","suscribirCambiosInput","initPagina","valueChanges","opcionSeleccionada","buscarUsuarios","tamanoLista","cantidad","pagina","undefined","trim","usuario","reiniciarFormulario","limite","campo","intervalo","cargandoBuscador","consultarNombresUsuario","x","usuarios","listaAhorradores","concat","breakpoint","altura","coaches$","temas$","option","isUserInput","nombre","correo","pais","paisOperacion","updateValueAndValidity","cargarDatosSesiones","sesionesTabla","consultarSesionesAhorrador","sesionesAhorradorDTO","actualizarFechasSegunZona","cargarDataSource","NUEVA","AGENDADA","PREAGENDADA","AGENDAMIENTO_PROGRAMADO","INICIADA","habilitado","disableFormulario","enableFormulario","logScroll","ModalComentarioTareaGenericaComponent","comentario","cancelar","finalizar","ListaSesionesCardsComponent","datosCoach","LeadsComponent","dashboardService","datePipe","humanizePipe","pageSize","pageSizeOptions","pageIndex","active","direction","consultarLeads","nativeElement","filterValue","toLowerCase","leadsFiltrados","leads","tarea","extraerCriteriosBusqueda","c","d","e","includes","transform","fechaCreacion","tipo","criticidad","lead","TAREA_DOCUMENTAL","REVISION_LISTAS_NEGRAS","offset","consultarTareasPorEstado","PENDIENTE","tareasPaginadas","tareas","changePage","sortData","SesionesCoachGuard","uiid","ListaSesionesCoachGuard","forzarInicio","mostrarInicio","CoachingComponent","cookiesService","TIEMPO_RECARGA","zonasHorarias","zonaHorariaSeleccionada","names","nombreCoach$","rolUser$","cargando$","cargar$","asObservable","cargarTemas","cargarCoaches","cargarSesionesVigentes","subscribeSideNavChange","value1","consultarTemas","tipoUsuario","temasSesiones","consultarCoachesPorPais","programarReintentoConsultaSesiones","obtenerPrimeraSesionEnFinalizar","calcularTiempoParaFinalizarSesion","programarConsultaSesion","sesionesOrdenadas","orfenarPorFecha","sideNav","openedChange","opened","obtenerEstadoMenu","obtenerInformacionCookie","mostarMenu","guardarInformacionCookie","zonaCambiada","actualizarEstadoMenu","LeadGenericoComponent","location","route","bloquearBoton","idLead","id_lead","consultarTareaPorId","detalleLead","obtenerErrorConsulta","reason","modal","open","panelClass","afterClosed","assign","finalizarTareaGenerica","detalle","idTarea","back","WARNING","ListaCoachingUsuarioMensualComponent","idCoachSeleccionado","consultarSesionesAgendadasCoach","sesionesAgendadas","nombreAhorrador","resumen","idAhorradores","Array","snapshot","paramMap","existeSesionExpirando","columnas","getColumnas","mostrarSesionesAgendada","getInnerWidth","window","innerWidth","result","MenuIzquierdoComponent","home","programar","mes","orgenarSesiones","sesionesActivas","events","obtenerSeccionSeleccionada","url","seleccionarOption","abrirMenu","CoachingApiService","api","encryptService","queryParams","cifrarId","nbmAuth","post","llave","cifrar","llavePublica","providedIn","CoachInvalidoGuard","uuid","DetalleCoachingUsuarioComponent","mostrarDesbloquearAhorro","horasDisponibles","sesionesProgramadas","tieneEvaluacion","datosCargados","target","ahorradores$","recargarPagina","verificarSiUsuarioTieneEvaluacion","cargarDatosDeAhorrador","navigateByUrl","sesionesTomadas","filtrarSesionesTomadas","filtrarSesionesAgendadas","sesionSeleccionada","filtrarSesionSeleccionada","programarCalculoDeTiempo","calcularMostrarDesbloquearAhorro","sesionesAhorrador","FINALIZADA","FINALIZADA_ERROR","ahorradorDTO","primerNombre","primerApellido","join","dineroDisponible","totalMontoDisponible","tieneAhorroDesbloqueado","paisAhorro","CONFIRMATION","resultado","desbloquearAhorro","findIndex","indexTabs","calcularTiempoInicioSesion","fechaInicioSesion","diffMs","diferenciaHoras","diferenciaMinutos","round","proposito","DISPOSICION_BLOQUEADO","consultarUsuarioTieneEvaluacion","consultaTieneEvaluacion","PROPOSITO_POR_TEMAS","FormularioAgendarSesionComponent","apiService","compartirDatos","agendarSuccess","agendarError","horariosError","reset","markAsPending","agendarCita","getRawValue","fechaInicial","moderador","disponibilidadCoach","disponibilidadCoaches","temaItem","COACHING_GENERAL","fechaFinal","obtenerCoachAleatorio","idPaisAhorrador","notas","compartirDatosGastos","agendar","random","enviarFormulario","SesionAgendadas","routes","path","component","canActivate","children","pathMatch","CoachingModule","forChild","declarations","imports","providers","entryComponents","Proposito"],"mappings":"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","file":"modulos-coaching-coaching-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Sesion } from '../modelo/sesion.model';\n\n@Injectable()\nexport class DetalleSesionCoachGuard implements CanActivate {\n  constructor(private store: Store<any>, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    const idSesion = next.params['idSesion'];\n    return this.store.select('coaching', 'sesionesVigentes').pipe(\n      take(1),\n      map((sesions: Sesion[]) => {\n        const sesionesUsuario = !sesions\n          ? []\n          : sesions.filter((sesion) => sesion.idSesion === idSesion);\n        if (sesionesUsuario.length === 0) {\n          this.router.navigate([`coaching`]);\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  DisponibilidadCoaches,\n  DisponibilidadesCoaches,\n} from '@app/modulos/coaching/modelo/disponibilidad-coach.model';\nimport { Moment } from 'moment';\nimport * as momentTimezone from 'moment-timezone';\nimport { environment } from '@env/environment';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { Observable, Subscription } from 'rxjs';\nimport { CargandoService } from '@app/shared/servicios/cargando.service';\nimport { Store } from '@ngrx/store';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { SesionAgendadas } from '@app/modulos/coaching/modelo/sesionesAgendadas.model';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\n\n@Component({\n  selector: 'app-lista-coaching-usuario-mensual-edicion',\n  templateUrl: './lista-coaching-usuario-mensual-edicion.component.html',\n  styleUrls: ['./lista-coaching-usuario-mensual-edicion.component.scss'],\n})\nexport class ListaCoachingUsuarioMensualEdicionComponent implements OnInit {\n  formulario: FormGroup;\n  horas: DisponibilidadCoaches[] = [];\n  idUsuario: string;\n  horasConsultadas = false;\n  coaches: Array<{\n    id: string;\n    urlImagen: string;\n    nombre: string;\n    idSesion: string;\n  }> = [];\n  cargando = false;\n  sesiones: Sesion[] = [];\n  sesionesVigentes$: Observable<Sesion[]>;\n  zonaHoraria = environment.zone;\n  private actualizandoHoras: boolean;\n  private suscripciones: Subscription[] = [];\n  private isAdmin: boolean;\n  private idSesion: string;\n  minDate: any;\n  disableActualizar = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<any>,\n    private coachingApiService: CoachingApiService,\n    private customModalService: CustomModalService,\n    private cargandoService: CargandoService,\n    public dialogRef: MatDialogRef<ListaCoachingUsuarioMensualEdicionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: SesionAgendadas\n  ) {}\n\n  ngOnInit() {\n    this.suscripciones.push(\n      this.store\n        .select('coaching', 'idSesion')\n        .subscribe((idSesion) => (this.idSesion = idSesion))\n    );\n    this.formulario = this.crearFormulario(this.fb);\n    this.suscripciones.push(\n      this.store.select('coaching', 'rol').subscribe((value) => {\n        this.isUserAdmin = value === 'ADMIN';\n      })\n    );\n    this.suscripciones.push(\n      this.store.select('coaching', 'zonaHoraria').subscribe((value) => {\n        this.zonaHoraria = value;\n        this.minDate = momentTimezone()\n          .tz(this.zonaHoraria)\n          .format('YYYY-MM-DD');\n      })\n    );\n  }\n\n  crearFormulario(fb: FormBuilder): FormGroup {\n    return fb.group({\n      fecha: fb.control('', [Validators.required]),\n      hora: fb.control('', [Validators.required]),\n      coach: fb.control({ value: '', disabled: true }),\n    });\n  }\n\n  horasOnChange(event) {\n    this.formulario.get('coach').setValue('');\n    if (event.value && event.value.moderadoresDisponibles) {\n      this.formulario.get('coach').enable();\n      this.coaches = event.value.moderadoresDisponibles;\n      if (this.coaches.length === 1) {\n        this.formulario.get('coach').setValue(this.coaches[0].id);\n      }\n    }\n  }\n\n  consultarDisponibilidad() {\n    if (this.formulario.get('fecha').valid && !this.actualizandoHoras) {\n      this.horas = [];\n      this.coaches = [];\n      this.actualizandoHoras = true;\n      const fecha: Moment = this.formulario.get('fecha').value;\n      this.formulario.get('hora').setValue(null);\n      this.formulario.get('coach').setValue(null);\n      this.formulario.get('coach').disable();\n      this.cargando = true;\n      this.cargandoService.mostrarCargando();\n      this.coachingApiService\n        .consultarDisponibilidad(\n          environment.envCountry,\n          this.fechaIncialConZona(fecha),\n          encodeURIComponent(this.zonaHoraria),\n          null\n        )\n        .then(\n          (disponibilidadesCoaches: DisponibilidadesCoaches) => {\n            this.horas = disponibilidadesCoaches.disponibilidades;\n            this.cargando = false;\n            this.cargandoService.ocultarCargando();\n            this.actualizandoHoras = false;\n            this.horasConsultadas = true;\n          },\n          (error) => {\n            console.error('Error consultando disponibilidad de horas', error);\n            this.horas = [];\n            this.actualizandoHoras = false;\n            this.mostarModalErrorHorarios();\n            this.horasConsultadas = true;\n            this.cargando = false;\n            this.cargandoService.ocultarCargando();\n          }\n        );\n    }\n  }\n\n  private fechaIncialConZona(fecha: Moment) {\n    return momentTimezone(fecha.format('YYYY-MM-DD HH:mm'))\n      .tz(this.zonaHoraria, true)\n      .startOf('day')\n      .format('YYYY-MM-DDTHH:mm:ss.SSSZ');\n  }\n\n  horaConZona(fecha: Date) {\n    return momentTimezone(fecha).tz(this.zonaHoraria).format('hh:mm a');\n  }\n\n  mostarModalErrorHorarios() {\n    this.customModalService.abrirModal(CustomModalType.ERROR, {\n      mensaje: 'Error consultando horarios de disponibilidad.',\n    });\n  }\n\n  limpiarFormulario() {\n    this.formulario.get('fecha').setValue(null);\n    this.formulario.get('hora').setValue(null);\n    this.formulario.get('coach').setValue(null);\n  }\n\n  closeModalAfterUpdate() {\n    this.limpiarFormulario();\n    this.dialogRef.close();\n  }\n\n  mostarModalSuccess(mensaje) {\n    this.customModalService.abrirModal(\n      CustomModalType.SUCCESS,\n      { mensaje },\n      () => {\n        this.closeModalAfterUpdate();\n      }\n    );\n  }\n\n  mostarModalError(mensaje) {\n    this.customModalService.abrirModal(\n      CustomModalType.ERROR,\n      { mensaje },\n      () => {\n        this.closeModalAfterUpdate();\n      }\n    );\n  }\n\n  actualizarSesion() {\n    this.cargando = true;\n    this.disableActualizar = true;\n    this.cargandoService.mostrarCargando();\n    if (this.formulario.valid) {\n      const hora: DisponibilidadCoaches = this.formulario.get('hora').value;\n      const parametros = {\n        fechaInicio: hora.periodoTiempo.inicio,\n        fechaFin: hora.periodoTiempo.fin,\n        zonaHoraria: this.zonaHoraria,\n        idCoachAnterior: this.data.idCoach,\n        idCoachActual: this.formulario.get('coach').value,\n        idAhorrador: this.data.idAhorrador,\n        idCitaAnterior: this.data.idSesion,\n      };\n      this.coachingApiService.actualizarSesion(parametros).then(\n        () => {\n          this.limpiarFormulario();\n          this.actualizandoHoras = false;\n          this.cargando = false;\n          this.cargandoService.ocultarCargando();\n          this.mostarModalSuccess('¡La sesión se actualizó con éxito!');\n        },\n        (error) => {\n          this.limpiarFormulario();\n          console.error('Error agendando sesion', error);\n          this.cargando = false;\n          this.cargandoService.ocultarCargando();\n          this.mostarModalError(\n            'Error al actualizar la sesión, revisa los horarios disponibles e intenta de nuevo.'\n          );\n        }\n      );\n    } else {\n      this.cargando = false;\n      this.cargandoService.ocultarCargando();\n    }\n  }\n\n  get coach() {\n    return this.formulario.get('coach');\n  }\n  get fecha() {\n    return this.formulario.get('fecha');\n  }\n\n  get hora() {\n    return this.formulario.get('hora');\n  }\n\n  get isUserAdmin(): boolean {\n    return this.isAdmin;\n  }\n  set isUserAdmin(val: boolean) {\n    this.isAdmin = val;\n  }\n\n  obtenerFecha(fecha: Date, zonaHoraria: string) {\n    const hoy = momentTimezone(fecha);\n    return hoy.tz(zonaHoraria).toDate();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div mat-dialog-content>\n  <div class=\"modal-header\">\n    <div class=\"row\" *ngIf=\"data\">\n      <div class=\"col-md-5 text-left\">\n        <div class=\"label-ahorrador\"><b>Sesión de {{data.nombreAhorrador}}</b></div>\n      </div>\n      <div class=\"col-md-3 text-left\">{{data.fechaInicioMoment.format('DD/MM/YYYY')}}</div>\n      <div class=\"col-md-4 text-left\">\n        {{data.fechaInicioMoment.format('hh:mm a') + \" - \" + data.fechaFinMoment.format('hh:mm a')}}\n      </div>\n    </div>\n    <div class=\"close-button\">\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"onNoClick()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</div>\n<form [formGroup]=\"formulario\" autocomplete=\"off\" id=\"formularioActualizarSesion\" (ngSubmit)=\"actualizarSesion()\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group date-input\">\n        <label for=\"fecha\" class=\"control-label\">Fecha</label>\n        <mat-form-field appearance=\"outline\">\n          <input matInput formControlName=\"fecha\" id=\"fecha\" class=\"form-control form-control-fecha\"\n                 [matDatepicker]=\"picker\" [min]=\"minDate\" placeholder=\"Selecciona la fecha\"\n                 (dateChange)=\"consultarDisponibilidad()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n        <app-mostrar-error-formularios id=\"erroresFecha\" [control]=\"fecha\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"fecha\" class=\"control-label\">Hora</label>\n        <mat-form-field appearance=\"outline\">\n          <mat-select placeholder=\"Selecciona la hora\" formControlName=\"hora\" id=\"hora\" (selectionChange)=\"horasOnChange($event)\">\n            <mat-option *ngFor=\"let h of horas; let i = index\" [value]=\"h\" [attr.data-test-id]=\"'horaOpcion' + i\">\n              {{horaConZona(h.periodoTiempo.inicio)}} - {{horaConZona(h.periodoTiempo.fin)}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <app-mostrar-error-formularios id=\"erroreshora\" [control]=\"hora\"></app-mostrar-error-formularios>\n        <p class=\"error\" *ngIf=\"horasConsultadas && horas && horas.length === 0\">No se encontró ningún horario\n          disponible</p>\n      </div>\n    </div>\n  </div>\n  <br>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"fecha\" class=\"control-label\">Coach</label>\n        <mat-form-field appearance=\"outline\">\n          <mat-select placeholder=\"Selecciona un coach\" formControlName=\"coach\" id=\"coach\">\n            <ng-container *ngIf=\"coaches\">\n              <mat-option *ngFor=\"let c of coaches; let i = index\" [attr.data-test-id]=\"'coachOpcion'+ i\"\n                          [value]=\"c.id\">\n                {{c.nombre | titlecase}}\n              </mat-option>\n            </ng-container>\n          </mat-select>\n        </mat-form-field>\n        <app-mostrar-error-formularios id=\"erroresCoach\" [control]=\"coach\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"update-button\">\n        <button mat-raised-button color=\"primary\" [disabled]=\"disableActualizar || !coach.value\" type=\"submit\"\n                cdkFocusInitial>Actualizar\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n","export enum EstadoSesion {\n  DESCONOCIDO = 'DESCONOCIDO',\n  NUEVA = 'NUEVA',\n  AGENDADA = 'AGENDADA',\n  PREAGENDADA = 'PREAGENDADA',\n  INICIADA = 'INICIADA',\n  FINALIZADA = 'FINALIZADA',\n  FINALIZADA_ERROR = 'FINALIZADA_ERROR',\n  FINALIZADA_POR_TELEFONO = 'FINALIZADA_POR_TELEFONO',\n  CANCELADA = 'CANCELADA',\n  VENCIDA = 'VENCIDA',\n  AGENDAMIENTO_PROGRAMADO = 'AGENDAMIENTO_PROGRAMADO',\n}\n","import { CustomModalType } from './../../../dashboard/modelo/enums/CustomModalTypes.enum';\nimport { CustomModalService } from './../../../../shared/servicios/custom-modal.service';\nimport { ActualizarSesion } from './../../modelo/sesion.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, interval, Observable, Subscription } from 'rxjs';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { Router } from '@angular/router';\nimport { first, flatMap, map } from 'rxjs/operators';\nimport { AhorradorDTO } from '@app/modulos/coaching/modelo/ahorrador.model';\nimport * as momentTimezone from 'moment-timezone';\nimport { EstadoSesion } from '@app/modulos/coaching/modelo/estado-sesion.enum';\nimport { environment } from '@env/environment';\nimport { SesionesCoach } from '@app/modulos/coaching/modelo/sesionesCoach.model';\nimport { CONSULTA_SESIONES_COACH_SUCCESS } from '@app/modulos/coaching/state-management/actions/coaching.action';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\nimport { CONSULTA_SESIONES_COACH_EXPIRED } from '../../state-management/actions/coaching.action';\nimport { Motivo } from '../../modelo/motivo';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.scss'],\n})\nexport class InicioComponent implements OnInit {\n\n  readonly MENSAJE_CAMBIO_ESTADO_SESION ='¡Se cambio el estado de la sesión correctamente!';\n  readonly MENSAJE_CAMBIO_ESTADO_SESION_ERROR='¡Ocurrió un error cambiando el estado de la sesión!';\n  ahorradores: any = {};\n  EstadoSesion = EstadoSesion;\n  sesionesVigentes$: Observable<Sesion[]>;\n  sesionesVencidas: Sesion[];\n  motivos: Motivo[];\n  fechaActual: Date;\n  tiemposParaTerminarSesiones: {\n    minutos: number;\n    segundos: number | string;\n  }[] = [];\n  zonaHoraria = environment.zone;\n  private suscripciones: Subscription[];\n\n  constructor(\n    private store: Store<any>,\n    private router: Router,\n    private customModalService: CustomModalService,\n    private coachingApiService: CoachingApiService\n  ) {\n    this.suscripciones = [];\n  }\n\n  ngOnInit() {\n    this.consultarMotivos();\n    const zonaHoraria$ = this.store.select('coaching', 'zonaHoraria');\n    this.fechaActual = this.obtenerFecha(new Date(), this.zonaHoraria);\n    const sesionesVencidasCoach$ = this.store\n      .select('coaching', 'sesionesVencidas')\n      .pipe(map((sesiones: Sesion[]) => this.ordenar(sesiones)));\n\n    const sesiones$ = this.store\n      .select('coaching', 'sesionesVigentes')\n      .pipe(map((sesiones: Sesion[]) => this.ordenar(sesiones)));\n\n    this.sesionesVigentes$ = combineLatest([\n      zonaHoraria$,\n      sesiones$,\n      sesionesVencidasCoach$,\n    ]).pipe(\n      map((value) => {\n        if (value[2]) {\n          this.sesionesVencidas = this.filtrarFecha(value[2]);\n        }\n        if (value[1]) {\n          this.zonaHoraria = value[0];\n          this.cargarDatosDeAhorradoresDeSesiones(value[1]);\n          this.calcularTiempos(value[1], this.zonaHoraria);\n          this.suscripciones.forEach((suscripcion) =>\n            suscripcion.unsubscribe()\n          );\n          this.suscripciones.push(\n            interval(1000).subscribe(() => {\n              this.calcularTiempos(value[1], this.zonaHoraria);\n            })\n          );\n          return value[1];\n        }\n      })\n    );\n  }\n\n  filtrarFecha(sesiones:Sesion[]){\n    return sesiones.filter((fechaSesion) =>\n          fechaSesion.fechaInicioMoment.format('DD/MM/YYYY')\n          === momentTimezone(this.fechaActual).format('DD/MM/YYYY'));\n  }\n\n  consultarMotivos() {\n    this.coachingApiService.consultaMotivos().then((value) => {\n      this.motivos = value.motivos;\n    });\n  }\n\n  actualizarEstado(sesionActualizar: any) {\n    const body: ActualizarSesion = {\n      idSesion: sesionActualizar.idSesion,\n      estado: EstadoSesion.FINALIZADA_POR_TELEFONO,\n      motivo: sesionActualizar.motivo,\n    };\n    this.coachingApiService.actualizarEstadoSesion(body).then(() => {\n      this.recargarConsulta();\n      this.mostarModalSuccess(this.MENSAJE_CAMBIO_ESTADO_SESION);\n    },(err) => this.mostarModalError(this.MENSAJE_CAMBIO_ESTADO_SESION_ERROR));\n  }\n\n  private ordenar(sesiones: Sesion[]) {\n    return sesiones\n      .slice()\n      .sort((a, b) => new Date(a.fechaInicio).getTime() - new Date(b.fechaInicio).getTime());\n  }\n\n  mostarModalSuccess(mensaje) {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS, { mensaje });\n  }\n\n  mostarModalError(mensaje) {\n    this.customModalService.abrirModal(CustomModalType.ERROR, { mensaje });\n  }\n\n  abrirDetalle(sesion: Sesion) {\n    this.router.navigate([\n      `coaching/sesion/${sesion.idSesion}`,\n      {\n        idUsuario: sesion.ahorrador.idAhorrador,\n      },\n    ]);\n  }\n\n  cargarDatosDeAhorradoresDeSesiones(sesionesVigentes) {\n    const ahorradores = sesionesVigentes\n      .map((sesion) => sesion.ahorrador.idAhorrador)\n      .filter(this.filtrarUnicos)\n      .map((id) => this.coachingApiService.consultarAhorrador(id));\n    combineLatest(ahorradores).subscribe((ahorradoresResponse) => {\n      const lista = ahorradoresResponse as AhorradorDTO[];\n      lista.forEach(\n        (ahorrador) => (this.ahorradores[ahorrador.id] = ahorrador)\n      );\n    });\n  }\n\n  filtrarUnicos(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  obtenerClaseSesion(sesion: Sesion) {\n    let clase = '';\n    const hoy = this.obtenerFecha(new Date(), this.zonaHoraria);\n    const fechaInicio = sesion.fechaInicioMoment.toDate();\n    const fechaFin = sesion.fechaFinMoment.toDate();\n    if (fechaFin < hoy) {\n      clase = 'sesion-expirando';\n    } else if (fechaFin >= hoy && fechaInicio <= hoy) {\n      clase = 'sesion-activa';\n    } else {\n      clase = 'sesion-agendada';\n    }\n    return clase;\n  }\n\n  obtenerFecha(fecha: Date, zonaHoraria: string) {\n    const moment = momentTimezone(fecha);\n    return moment.tz(zonaHoraria).toDate();\n  }\n\n  private calcularTiempos(sesiones: Sesion[], zonaHoraria: string) {\n    this.tiemposParaTerminarSesiones = sesiones.map((sesion) => {\n      return this.calcularTiempoFinSesion(sesion, zonaHoraria);\n    });\n  }\n\n  private calcularTiempoFinSesion(sesion: Sesion, zonaHoraria: string) {\n    const fechaFinSesion = new Date(sesion.fechaFin);\n    fechaFinSesion.setMinutes(fechaFinSesion.getMinutes() + 10);\n    const f1 = this.obtenerFecha(fechaFinSesion, zonaHoraria);\n    const f2 = this.obtenerFecha(new Date(), zonaHoraria);\n    const tiempo = f1.getTime() - f2.getTime();\n    const minutos = Math.floor(tiempo / 60000);\n    const segundos = (tiempo % 60000) / 1000;\n    return {\n      minutos: minutos >= 0 ? minutos : 0,\n      segundos: segundos >= 0 ? segundos.toFixed(0) : 0,\n    };\n  }\n\n  public recargarConsulta() {\n    this.store\n      .select('usuario', 'uuid')\n      .pipe(first())\n      .pipe(\n        flatMap((idCoach) => {\n          return this.coachingApiService.consultarSesiones(idCoach);\n        })\n      )\n      .subscribe((sesionesCoach: SesionesCoach) => {\n        this.ordenarSesionesVigentes(sesionesCoach);\n        this.ordenarSesionesVencidas(sesionesCoach);\n      });\n  }\n\n  public ordenarSesionesVigentes(sesionesCoach: SesionesCoach) {\n    const sesionesVigentes: SesionesCoach = { ...sesionesCoach };\n    sesionesVigentes.sesionesVigentes = this.ordenarSesion(\n      sesionesVigentes.sesionesVigentes.filter(\n        (sesion) => sesion.estadoSesion !== EstadoSesion.VENCIDA\n      )\n    );\n\n    this.store.dispatch({\n      type: CONSULTA_SESIONES_COACH_SUCCESS,\n      payload: sesionesVigentes,\n    });\n  }\n\n  public ordenarSesionesVencidas(sesionesCoach: SesionesCoach) {\n    const sesionesVencidas: SesionesCoach = { ...sesionesCoach };\n    sesionesVencidas.sesionesVigentes = this.ordenarSesion(\n      sesionesVencidas.sesionesVigentes.filter(\n        (sesion) => sesion.estadoSesion === EstadoSesion.VENCIDA\n      )\n    );\n\n    this.store.dispatch({\n      type: CONSULTA_SESIONES_COACH_EXPIRED,\n      payload: sesionesVencidas,\n    });\n  }\n\n  public ordenarSesion(sesiones: Sesion[]) {\n    return sesiones.sort((a, b) => new Date(b.fechaInicio).getTime() - new Date(a.fechaInicio).getTime());\n  }\n}\n","<h3 class=\"title-expired\">Sesiones agendadas</h3>\n<button mat-fab class=\"reload-button\" (click)=\"recargarConsulta()\">\n  <mat-icon>autorenew</mat-icon>\n</button>\n<div class=\"section-resume\" *ngIf=\"sesionesVigentes$ | async as sesiones\">\n  <ng-container *ngIf=\"sesiones && sesiones.length > 0; else sinSesiones\">\n    <br>\n    <mat-card matRipple *ngFor=\"let sesion of sesiones; let i = index\" (click)=\"abrirDetalle(sesion)\"\n              [ngClass]=\"obtenerClaseSesion(sesion)\">\n      <mat-card-header>\n        <mat-card-subtitle>\n          <p class=\"hora\">{{sesion.fechaInicioMoment.format('hh:mm a')}} - {{sesion.fechaFinMoment.format('hh:mm a')}}</p>\n          <p class=\"dia\">{{sesion.fechaInicioMoment.format('DD/MM/YYYY')}}</p>\n          <ng-container [ngSwitch]=\"sesion.estadoSesion\">\n            <p *ngSwitchCase=\"EstadoSesion.AGENDADA\" class=\"estado\">Sesión agendada</p>\n            <p *ngSwitchCase=\"EstadoSesion.AGENDAMIENTO_PROGRAMADO\" class=\"estado\">Sesión agendada</p>\n            <p *ngSwitchCase=\"EstadoSesion.PREAGENDADA\" class=\"estado\">Sesión agendada</p>\n            <p *ngSwitchCase=\"EstadoSesion.INICIADA\" class=\"estado\">Sesión en curso</p>\n            <p *ngSwitchCase=\"EstadoSesion.FINALIZADA\" class=\"estado\">Sesión finalizada</p>\n            <p *ngSwitchCase=\"EstadoSesion.FINALIZADA_ERROR\" class=\"estado\">Sesión finalizada</p>\n          </ng-container>\n          <p class=\"tiempo\">\n            {{tiemposParaTerminarSesiones[i].minutos | number:'2.0-0' }}:{{tiemposParaTerminarSesiones[i].segundos | number:'2.0-0'}}\n            {{tiemposParaTerminarSesiones[i].minutos > 0 ? 'MINUTOS' : 'SEGUNDOS' }} RESTANTES\n          </p>\n        </mat-card-subtitle>\n      </mat-card-header>\n    </mat-card>\n  </ng-container>\n  <ng-template #sinSesiones>\n    <br>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title><strong>No tienes sesiones programadas</strong></mat-card-title>\n        <mat-card-subtitle>\n          Vuelve a ingresar cuando inicie tu sesion de coaching\n        </mat-card-subtitle>\n      </mat-card-header>\n    </mat-card>\n  </ng-template>\n</div>\n<section class=\"seccion-expired\">\n    <h3 class=\"title-expired\">Sesiones vencidas</h3>\n    <p class=\"date-expired\">Sesiones vencidas {{fechaActual |date: 'dd/MM/yyyy'}}</p>\n    <ng-container *ngIf=\"sesionesVencidas && motivos && sesionesVencidas.length > 0; else historialVacio\">\n      <app-lista-sesiones-vencidas [sesiones]=\"sesionesVencidas\" [motivos]=\"motivos\" (actualizarSesion)=\"actualizarEstado($event)\"></app-lista-sesiones-vencidas>\n    </ng-container>\n    <ng-template #historialVacio>\n      <mat-card class=\"historial-vacio\">\n        Historial de citas vacío\n      </mat-card>\n    </ng-template>\n</section>\n\n\n\n\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { Tema } from '@app/modulos/coaching/modelo/temas.model';\nimport { CoachDTO } from '@app/modulos/coaching/modelo/coaches.model';\n\nexport interface TablaModel {\n  fecha: Date;\n  coach: string;\n  tema: string;\n  estado: string;\n}\n\n@Component({\n  selector: 'app-lista-sesiones',\n  templateUrl: './lista-sesiones.component.html',\n  styleUrls: ['./lista-sesiones.component.scss'],\n})\nexport class ListaSesionesComponent implements OnInit {\n  _sesiones: Sesion[] = [];\n  @Input() coaches: CoachDTO[] = [];\n  @Input() temas: Tema[] = [];\n\n  displayedColumns: string[] = ['fecha', 'hora', 'coach', 'tema', 'estado'];\n  dataSource: MatTableDataSource<TablaModel>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor() {}\n\n  get sesiones(): Sesion[] {\n    return this._sesiones;\n  }\n\n  @Input()\n  set sesiones(sesiones: Sesion[]) {\n    this._sesiones = this.ordenar(sesiones);\n    const datosTabla = this._sesiones.map((sesion) => {\n      return {\n        fecha: sesion.fechaInicioMoment,\n        coach: sesion.coach.idCoach,\n        tema: sesion.tema,\n        estado: sesion.estadoSesion.toString(),\n      };\n    });\n    this.refrescarDatosTabla(datosTabla);\n  }\n\n  private ordenar(sesiones: Sesion[]) {\n    return sesiones.sort((a, b) =>\n      new Date(b.fechaInicio).getTime() - new Date(a.fechaInicio).getTime()\n    );\n  }\n\n  ngOnInit() {}\n\n  refrescarDatosTabla(datosTabla) {\n    this.dataSource = new MatTableDataSource(datosTabla);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  obtenerCoach(idCoach: string) {\n    const coachSesion = this.coaches.find((coach) => coach.id === idCoach);\n    return coachSesion\n      ? coachSesion.nombreCompleto\n      : idCoach\n      ? 'Desconocido'\n      : '';\n  }\n}\n","\n<mat-paginator [pageSizeOptions]=\"[5, 10, 50]\"></mat-paginator>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n  <ng-container matColumnDef=\"fecha\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> Fecha</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.fecha.format('DD/MM/YYYY')}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"hora\">\n    <th mat-header-cell *matHeaderCellDef> Hora</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.fecha.format('hh:mm a')}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"coach\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> Coach</th>\n    <td mat-cell *matCellDef=\"let element\"> {{obtenerCoach(element.coach)}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"tema\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> Tema</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.tema}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"estado\">\n    <th mat-header-cell *matHeaderCellDef  mat-sort-header> Estado</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.estado}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-id-coach-invalido',\n  templateUrl: './id-coach-invalido.component.html',\n  styleUrls: ['./id-coach-invalido.component.scss'],\n})\nexport class IdCoachInvalidoComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"section-resume\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title><strong>Configuración inválida</strong></mat-card-title>\n      <mat-card-subtitle>\n        Tu usuario no tiene configurado un perfil de coach valido\n      </mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { ConsultaEvaluacionAhorradorDTO } from '@app/modulos/coaching/modelo/ahorrador.model';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\n\n@Component({\n  selector: 'app-detalle-bienestar-financiero',\n  templateUrl: './detalle-bienestar-financiero.component.html',\n  styleUrls: ['./detalle-bienestar-financiero.component.scss'],\n})\nexport class DetalleBienestarFinancieroComponent implements OnInit {\n  detalleToogle = false;\n  checkHabilitado = true;\n  secciones = [];\n  datosEvaluacion: ConsultaEvaluacionAhorradorDTO;\n\n  @Input() idUsuario: string;\n  @Input() idSesion: string;\n  @Input() compartirResultadoEvaluacionBienestar: boolean;\n\n  constructor(\n    private coachingApiService: CoachingApiService,\n    private modalService: CustomModalService\n  ) {}\n\n  ngOnInit() {\n    if (this.compartirResultadoEvaluacionBienestar) {\n      this.checkHabilitado = false;\n      this.compartirResultadoBienestarFinanciero();\n    }\n  }\n\n  toogle() {\n    this.detalleToogle = !this.detalleToogle;\n  }\n\n  checkboxSeleccionado($event: MatCheckboxChange) {\n    if ($event.checked) {\n      this.checkHabilitado = false;\n      this.compartirResultadoBienestarFinanciero();\n    }\n  }\n\n  compartirResultadoBienestarFinanciero() {\n    const parametros = { compartirResultados: true, idSesion: this.idSesion };\n    this.coachingApiService.compartirResultadosEvaluacion(parametros).then(\n      (sesion: Sesion) => {\n        this.servicioEvaluaciones();\n        console.log(\n          'Se ha compartido los resultados de bienestar financiero: ' +\n            sesion.compartirEvaluacionBienestar\n        );\n      },\n      (error) => {\n        console.error(\n          'Error al compartir los resultados de bienestar financiero',\n          error\n        );\n      }\n    );\n  }\n\n  servicioEvaluaciones() {\n    const paramsEvaluacion = {\n      idEvaluacion: null,\n      idComprador: this.idUsuario,\n    };\n    this.coachingApiService.consultarEvaluacion(paramsEvaluacion).subscribe(\n      (value: ConsultaEvaluacionAhorradorDTO) => {\n        this.secciones = Object.keys(value.puntajes);\n        this.datosEvaluacion = value;\n      },\n      (error) => {\n        console.error(error);\n        this.modalService.abrirModal(CustomModalType.ERROR, {\n          mensaje: 'Error consultando score de bienestar financiero.',\n        });\n      }\n    );\n  }\n}\n","<mat-checkbox labelPosition=\"before\" [checked]=\"compartirResultadoEvaluacionBienestar\"\n              (change)=\"checkboxSeleccionado($event)\" [disabled]=\"!checkHabilitado\">\n  *Recuerda siempre pedirle permiso al usuario para visualizar su información\n</mat-checkbox>\n<mat-card (click)=\"toogle()\" matRipple>\n  Score de bienestar financiero\n  <mat-icon *ngIf=\"!detalleToogle\">arrow_drop_down</mat-icon>\n  <mat-icon *ngIf=\"detalleToogle\">arrow_drop_up</mat-icon>\n</mat-card>\n\n<div class=\"contenido-score\" [class.active]=\"detalleToogle\">\n\n  <table class=\"mat-elevation-z8\">\n    <tbody>\n\n    <tr *ngFor=\"let item of secciones\">\n      <ng-container *ngIf=\"item != 'Autoevaluación'\">\n        <td class=\"item\"> {{ item }}  </td>\n        <td class=\"puntaje\"> {{ datosEvaluacion.puntajes[item] }} </td>\n      </ng-container>\n    </tr>\n\n    </tbody>\n  </table>\n\n</div>\n\n<div class=\"separador\"></div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\n\n@Component({\n  selector: 'app-modal-otp-sesion',\n  templateUrl: './modal-otp-sesion.component.html',\n  styleUrls: ['./modal-otp-sesion.component.scss'],\n})\nexport class ModalOtpSesionComponent implements OnInit {\n  otpForm: FormControl;\n  cargando: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalOtpSesionComponent>,\n    private coachingApiService: CoachingApiService,\n    private customModal: CustomModalService,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      coach: { nombreCompleto; id };\n      fecha;\n      hora: { inicio; fin };\n      ahorrador: { nombre; id };\n      tema;\n    }\n  ) {}\n\n  ngOnInit() {\n    this.cargando = false;\n    this.otpForm = new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]);\n  }\n\n  cerrar(): void {\n    this.dialogRef.close();\n  }\n\n  validar() {\n    const bodyOtp = {\n      idAhorrador: this.data.ahorrador.id,\n      otp: this.otpForm.value,\n      flujoOtp: 'CONFIRMAR_SESION',\n    };\n    this.coachingApiService.confirmarOTP(bodyOtp).then(\n      (value) => {\n        this.dialogRef.close({ registarSesion: true });\n      },\n      (error) => {\n        console.error('Error confirmando otp: ', error);\n        this.customModal.abrirModal(CustomModalType.ERROR, {\n          mensaje: 'No se pudo validar el código OTP',\n        });\n      }\n    );\n  }\n}\n","<div mat-dialog-content class=\"content-modal\">\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cerrar()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div class=\"header\">\n    <strong>Programar sesión para el usuario {{data.ahorrador.nombre}}</strong>\n  </div>\n  <div class=\"body\">\n    <div class=\"row\">\n      <div class=\"col-sm-4 text-left\" *ngIf=\"data.coach\"><strong>Coach:</strong><br>{{data.coach.nombreCompleto}}</div>\n      <div class=\"col-sm-8 text-left\" *ngIf=\"data.tema\"><strong>Tema:</strong><br>{{data.tema.tema}}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-4 text-left\" *ngIf=\"data.fecha\"><strong>Fecha:</strong><br>{{data.fecha.format('DD/MM/YYYY')}}</div>\n      <div class=\"col-sm-4 text-left\" *ngIf=\"data.hora\"><strong>Hora inicio:</strong><br>{{data.hora.inicio | date:'hh:mm a'}}</div>\n      <div class=\"col-sm-4 text-left\" *ngIf=\"data.hora\"><strong>Hora fin:</strong><br>{{data.hora.fin | date:'hh:mm a'}}</div>\n    </div>\n    <div class=\"row formulario\">\n      <div class=\"col-sm-12 texto-formulario\">Ingresa el OTP para confirmar el registro de la sesión</div>\n      <div class=\"col-sm-offset-4 col-sm-4\">\n        <mat-form-field appearance=\"outline\" class=\"input-otp\">\n          <input pattern=\"\\d*\"\n                 placeholder=\"XXXXXX\"\n                 [maxLength]=\"6\"\n                 aria-label=\"OTP confirmación sesión\"\n                 matInput\n                 autocomplete=\"off\"\n                 [formControl]=\"otpForm\">\n        </mat-form-field>\n\n        <button color=\"primary\" mat-button type=\"submit\" class=\"button-validar btns-primary\"\n                [disabled]=\"!otpForm.valid || cargando\"\n                (click)=\"validar()\">\n          Validar\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ViewChild, Input, Component, Output, EventEmitter } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Sesion } from '../../modelo/sesion.model';\nimport { Motivo } from '../../modelo/motivo';\nimport { TablaModelVencida } from '../../modelo/tabla-sesiones-vencidas';\n@Component({\n  selector: 'app-lista-sesiones-vencidas',\n  templateUrl: './lista-sesiones-vencidas.component.html',\n  styleUrls: ['./lista-sesiones-vencidas.component.scss'],\n})\n\nexport class ListaSesionesVencidasComponent {\n\n  _sesiones: Sesion[] = [];\n\n  @Input()\n  motivos: Motivo[] = [];\n  @Output()\n  actualizarSesion = new EventEmitter();\n\n  displayedColumns: string[] = ['fecha', 'hora', 'estado', 'motivo', 'accion'];\n  dataSource: MatTableDataSource<TablaModelVencida>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  @Input()\n  set sesiones(sesiones: Sesion[]) {\n    this._sesiones = this.ordenar(sesiones);\n    const datosTabla = this._sesiones.map((sesion) => {\n      return {\n        idSesion: sesion.idSesion,\n        fecha: sesion.fechaInicioMoment.format('DD/MM/YYYY'),\n        hora: sesion.fechaInicioMoment.format('h:mm a') +\n          ' - ' + sesion.fechaFinMoment.format('h:mm a'),\n        estado: sesion.estadoSesion.toString(),\n        motivo: ''\n      };\n    });\n    this.refrescarDatosTabla(datosTabla);\n  }\n\n  private ordenar(sesiones: Sesion[]) {\n    return sesiones.sort((a, b) => new Date(b.fechaInicio).getTime() - new Date(a.fechaInicio).getTime());\n  }\n\n  cambiarMotivo(sesion: any, motivo: string) {\n    sesion.motivo = motivo;\n  }\n\n  cambiarEstado(sesion: any) {\n    this.actualizarSesion.emit(sesion);\n  }\n\n  refrescarDatosTabla(datosTabla) {\n    this.dataSource = new MatTableDataSource(datosTabla);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n}\n","<mat-paginator [pageSizeOptions]=\"[5, 10, 50]\"></mat-paginator>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n  <caption>Sesiones vencidas del día</caption>\n\n  <ng-container class=\"fecha\" matColumnDef=\"fecha\">\n    <th class=\"data-table-fecha\" id=\"fecha\" mat-header-cell *matHeaderCellDef mat-sort-header>Fecha</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.fecha}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"hora\">\n    <th class=\"data-table-hora\" id=\"hora\" mat-header-cell *matHeaderCellDef>Hora</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.hora}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"estado\">\n    <th class=\"data-table-estado\" id=\"estado\" mat-header-cell *matHeaderCellDef> Estado</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.estado}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"motivo\">\n    <th class=\"data-table-motivo\" id=\"motivo\" mat-header-cell *matHeaderCellDef>Motivo</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <mat-form-field class =\"select\" appearance=\"outline\">\n        <mat-select class=\"select-motivo\" placeholder=\"Selecciona el motivo\" id=\"motivo\">\n          <mat-option *ngFor=\"let m of motivos ; let i = index\" [value]=\"m.id\" [attr.data-test-id]=\"'motivoOpcion' + i\"\n            class=\"option-motivo\" (click)=\"cambiarMotivo(element,m.motivo)\">\n            <p>{{m.motivo}}</p>\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"accion\">\n    <th class=\"data-table-accion\" id=\"accion\" mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <div class=\"boton-finalizar\">\n        <button mat-raised-button (click)=\"cambiarEstado(element)\" [disabled]=\"element.motivo == '' \"\n          color=\"primary\">Finalizar por télefono</button>\n      </div>\n    </td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  mergeMap,\n  map,\n  startWith,\n} from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Tema } from '@app/modulos/coaching/modelo/temas.model';\nimport { CoachDTO } from '@app/modulos/coaching/modelo/coaches.model';\nimport { environment } from '@env/environment';\nimport { CargandoService } from '@app/shared/servicios/cargando.service';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { EstadoSesion } from '@app/modulos/coaching/modelo/estado-sesion.enum';\n\nimport * as momentTimezone from 'moment-timezone';\nimport { ConsultadoNombreAhorradorDTO } from '@app/modulos/coaching/modelo/ahorrador.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\nimport { FormularioAgendarSesionComponent } from '@coaching/componentes/formulario-agendar-sesion/formulario-agendar-sesion.component';\n\nconst TAMANO_CONSULTA = 10;\nconst ALTURA_ITEM = 48;\nconst MAX_ITEMS = 5;\n\n@Component({\n  selector: 'app-programar-sesiones',\n  templateUrl: './programar-sesiones.component.html',\n  styleUrls: ['./programar-sesiones.component.scss'],\n})\nexport class ProgramarSesionesComponent implements OnInit {\n  @ViewChild(FormularioAgendarSesionComponent)\n  formulario: FormularioAgendarSesionComponent;\n  usuario: { id: string; nombre: string; pais: string };\n  sesionesTabla: Sesion[];\n\n  // Variables buscador\n  inputNombreUsuario = new FormControl();\n  idUsuario: string;\n  tamanoLista: number;\n  paginaConsultar: number;\n  listaUsuariosCache: ConsultadoNombreAhorradorDTO[] = [];\n  opcionSeleccionada: boolean;\n  cargandoBuscador: boolean;\n  mostrarSinResultados = false;\n  coaches: CoachDTO[] = [];\n  temas: Tema[] = [];\n  private bloquearBusquedaScroll = false;\n  private zonaHoraria = environment.zone;\n  private sesiones: Sesion[];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<any>,\n    private router: Router,\n    private cargandoService: CargandoService,\n    private customModalService: CustomModalService,\n    public dialog: MatDialog,\n    private coachingApiService: CoachingApiService\n  ) {}\n\n  ngOnInit() {\n    this.paginaConsultar = 0;\n    this.suscribirCambiosInput();\n    this.initPagina();\n  }\n\n  suscribirCambiosInput() {\n    this.inputNombreUsuario.valueChanges\n      .pipe(\n        startWith(''),\n        debounceTime(1000),\n        mergeMap((value) => {\n          this.paginaConsultar = 0;\n          if (this.opcionSeleccionada) {\n            this.opcionSeleccionada = false;\n            return [];\n          }\n          this.listaUsuariosCache = [];\n          this.bloquearBusquedaScroll = false;\n          return this.buscarUsuarios(\n            value,\n            TAMANO_CONSULTA,\n            this.paginaConsultar\n          );\n        })\n      )\n      .subscribe(() => {\n        this.tamanoLista = this.listaUsuariosCache.length;\n      });\n  }\n\n  buscarUsuarios(\n    value: string,\n    cantidad: number,\n    pagina: number\n  ): Observable<ConsultadoNombreAhorradorDTO[]> {\n    if (\n      value === null ||\n      value === undefined ||\n      value.trim() === '' ||\n      value.length < 3\n    ) {\n      this.usuario = null;\n      this.reiniciarFormulario(this.formulario, false);\n      return of([]);\n    } else {\n      this.mostrarSinResultados = false;\n      const parametros = {\n        limite: cantidad,\n        campo: value.trim(),\n        intervalo: pagina,\n      };\n      this.cargandoBuscador = true;\n      return this.coachingApiService.consultarNombresUsuario(parametros).pipe(\n        map((x) => x.usuarios),\n        map((listaAhorradores: ConsultadoNombreAhorradorDTO[]) => {\n          this.cargandoBuscador = false;\n          this.listaUsuariosCache = this.listaUsuariosCache.concat(\n            listaAhorradores\n          );\n          if (this.listaUsuariosCache.length === 0) {\n            this.mostrarSinResultados = true;\n          }\n          if (listaAhorradores.length < cantidad) {\n            this.bloquearBusquedaScroll = true;\n          }\n          return this.listaUsuariosCache;\n        }),\n        catchError((error) => {\n          console.log('Error consultando usuario:', error);\n          return [];\n        })\n      );\n    }\n  }\n\n  logScroll(event: any) {\n    if (!this.cargandoBuscador && !this.bloquearBusquedaScroll) {\n      const breakpoint = this.tamanoLista - event - this.tamanoLista * 0.1;\n      if (breakpoint <= MAX_ITEMS) {\n        this.paginaConsultar++;\n        this.buscarUsuarios(\n          this.inputNombreUsuario.value,\n          TAMANO_CONSULTA,\n          this.paginaConsultar\n        ).subscribe((value) => {\n          this.tamanoLista = value.length;\n        });\n      }\n    }\n  }\n\n  obtenerAltura() {\n    let altura;\n    if (!this.tamanoLista || this.tamanoLista === 0) {\n      altura = ALTURA_ITEM;\n    } else if (this.tamanoLista < MAX_ITEMS) {\n      altura = this.tamanoLista * ALTURA_ITEM;\n    } else {\n      altura = MAX_ITEMS * ALTURA_ITEM;\n    }\n    return altura + 'px';\n  }\n\n  initPagina() {\n    const coaches$ = this.store.select('coaching', 'coaches');\n    const temas$ = this.store.select('coaching', 'temas');\n    const zonaHoraria$ = this.store.select('coaching', 'zonaHoraria');\n\n    combineLatest([coaches$, temas$, zonaHoraria$]).subscribe((value) => {\n      this.coaches = value[0];\n      this.temas = value[1];\n      this.zonaHoraria = value[2];\n    });\n  }\n\n  seleccionarOpcion(option: ConsultadoNombreAhorradorDTO, $event) {\n    if (option && $event.isUserInput) {\n      this.opcionSeleccionada = true;\n      this.idUsuario = option.idUsuario;\n      this.usuario = {\n        id: option.idUsuario,\n        nombre: option.nombreCompleto || option.correo,\n        pais: option.paisOperacion,\n      };\n      this.inputNombreUsuario.setValue(this.usuario.nombre);\n      this.inputNombreUsuario.updateValueAndValidity();\n      this.cargarDatosSesiones();\n      this.reiniciarFormulario(this.formulario, true);\n      this.sesionesTabla = [];\n    }\n  }\n\n  private cargarDatosSesiones() {\n    this.cargandoService.mostrarCargando();\n    this.coachingApiService\n      .consultarSesionesAhorrador(this.usuario.id)\n      .subscribe((sesionesAhorradorDTO: { sesiones: Sesion[] }) => {\n        this.sesiones = this.actualizarFechasSegunZona(\n          sesionesAhorradorDTO.sesiones,\n          this.zonaHoraria\n        );\n        this.cargarDataSource();\n        this.cargandoService.ocultarCargando();\n      });\n  }\n\n  private actualizarFechasSegunZona(\n    sesionesVigentes: Sesion[],\n    zonaHoraria: string\n  ) {\n    return sesionesVigentes.map((value) => {\n      value.fechaInicioMoment = momentTimezone(value.fechaInicio).tz(\n        zonaHoraria\n      );\n      value.fechaFinMoment = momentTimezone(value.fechaFin).tz(zonaHoraria);\n      return value;\n    });\n  }\n\n  private cargarDataSource() {\n    this.sesionesTabla = this.sesiones.filter(\n      (sesion) =>\n        sesion.estadoSesion !== EstadoSesion.NUEVA &&\n        sesion.estadoSesion !== EstadoSesion.AGENDADA &&\n        sesion.estadoSesion !== EstadoSesion.PREAGENDADA &&\n        sesion.estadoSesion !== EstadoSesion.AGENDAMIENTO_PROGRAMADO &&\n        sesion.estadoSesion !== EstadoSesion.INICIADA\n    );\n  }\n\n  mostarModalSuccess(mensaje) {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS, { mensaje });\n  }\n\n  mostarModalError(mensaje) {\n    this.customModalService.abrirModal(CustomModalType.ERROR, { mensaje });\n  }\n\n  reiniciarFormulario(\n    formulario: FormularioAgendarSesionComponent,\n    habilitado: boolean\n  ) {\n    if (formulario) {\n      formulario.reiniciarFormulario();\n      if (!habilitado) {\n        formulario.disableFormulario();\n      } else {\n        formulario.enableFormulario();\n      }\n    }\n  }\n}\n","<div class=\"content\"><h4>Usuarios</h4>\n  <form class=\"form-buscador\">\n    <mat-form-field appearance=\"outline\" class=\"buscador\">\n      <input type=\"text\"\n             placeholder=\"Buscar usuario\"\n             aria-label=\"Buscar usuario\"\n             matInput\n             [formControl]=\"inputNombreUsuario\"\n             [matAutocomplete]=\"auto\">\n      <mat-icon matSuffix *ngIf=\"!cargandoBuscador\">search</mat-icon>\n      <mat-icon matSuffix *ngIf=\"cargandoBuscador\">autorenew</mat-icon>\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"search-viewport\" minBufferPx=\"500\" maxBufferPx=\"750\"\n                                     (scrolledIndexChange)=\"logScroll($event)\"\n                                     [style.height]=\"obtenerAltura()\">\n          <mat-option *ngFor=\"let option of listaUsuariosCache\" [value]=\"option\"\n                      (onSelectionChange)=\"seleccionarOpcion(option, $event)\">\n            {{option.nombreCompleto | titlecase}}\n            <span class=\"small-data\">{{option.correo}} {{option.celular}}</span>\n          </mat-option>\n          <mat-option *ngIf=\"mostrarSinResultados\">\n            No se encontraron resultados\n          </mat-option>\n          <mat-progress-bar *ngIf=\"listaUsuariosCache.length !== 0 && cargandoBuscador\" mode=\"indeterminate\"\n                            color=\"secondary\"></mat-progress-bar>\n        </cdk-virtual-scroll-viewport>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n  <div class=\"separador\"></div>\n  <h4>Completa los campos para programar la siguiente sesión de coaching</h4>\n  <div class=\"content-grey\">\n    <app-formulario-agendar-sesion\n      [usuario]=\"usuario\"\n      [bloquearBoton]=\"false\"\n      (agendarError)=\"mostarModalError('Error al programar la sesión, revisa los horarios disponibles e intenta de nuevo.')\"\n      (agendarSuccess)=\"mostarModalSuccess('¡La sesión se programó con éxito!')\"\n      (horariosError)=\"mostarModalError('Error consultando horarios de disponibilidad.')\">\n    </app-formulario-agendar-sesion>\n  </div>\n  <div class=\"separador\"></div>\n  <ng-container *ngIf=\"usuario\">\n    <h4>Historial de sesiones del ahorrador</h4>\n    <ng-container *ngIf=\"sesionesTabla && sesionesTabla.length > 0; else historialVacio\">\n      <app-lista-sesiones *ngIf=\"coaches && temas\" [sesiones]=\"sesionesTabla\" [coaches]=\"coaches\" [temas]=\"temas\"></app-lista-sesiones>\n    </ng-container>\n    <ng-template #historialVacio>\n      <mat-card class=\"historial-vacio\">\n        Historial de citas vacío\n      </mat-card>\n    </ng-template>\n  </ng-container>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal-comentario-tarea-generica',\n  templateUrl: './modal-comentario-tarea-generica.component.html',\n  styleUrls: ['./modal-comentario-tarea-generica.component.scss'],\n})\nexport class ModalComentarioTareaGenericaComponent implements OnInit {\n  comentario: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalComentarioTareaGenericaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.comentario = '';\n  }\n\n  ngOnInit() {}\n\n  finalizar() {\n    this.dialogRef.close(this.comentario);\n  }\n\n  cancelar() {\n    this.dialogRef.close(null);\n  }\n}\n","<div class=\"modal-info\" class=\"blue\" >\n  <div class=\"modal-header omega\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"cancelar()\">\n      <mat-icon>clear</mat-icon>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <h1>Comentario</h1>\n    <div>\n      <p>Agrega el comentario de la finalizacion de la tarea.</p>\n    </div>\n    <form #modalForm=\"ngForm\">\n      <textarea class=\"form-control\" id=\"comentario\" name=\"comentario\" [(ngModel)]=\"comentario\" maxlength=\"500\" required></textarea>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <div class=\"btns-footer\">\n      <button mat-button class=\"mat-button btns-secondary dark-bg\" (click)=\"finalizar()\" [disabled]=\"!modalForm.form.valid\">Enviar</button>\n      <button mat-button class=\"mat-button btns-secondary dark-bg\" (click)=\"cancelar()\">Cancelar</button>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { CoachDTO } from '@app/modulos/coaching/modelo/coaches.model';\n\n@Component({\n  selector: 'app-lista-sesiones-cards',\n  templateUrl: './lista-sesiones-cards.component.html',\n  styleUrls: ['./lista-sesiones-cards.component.scss'],\n})\nexport class ListaSesionesCardsComponent implements OnInit {\n  @Input() sesiones: Sesion[] = [];\n  @Input() coaches: CoachDTO[] = [];\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  obtenerNombreCoach(idCoach: string): string {\n    const datosCoach = this.coaches.find((coach) => coach.id === idCoach);\n    return datosCoach\n      ? datosCoach.nombreCompleto\n      : idCoach\n      ? 'Desconocido'\n      : '';\n  }\n}\n","<mat-card class=\"card-header-tabla\">\n  <mat-grid-list [cols]=\"3\" rowHeight=\"20px\">\n    <mat-grid-tile><strong>Fecha</strong></mat-grid-tile>\n    <mat-grid-tile><strong>Hora</strong></mat-grid-tile>\n    <mat-grid-tile><strong>Coach</strong></mat-grid-tile>\n  </mat-grid-list>\n</mat-card>\n<mat-card *ngFor=\"let sesion of sesiones\">\n  <mat-grid-list [cols]=\"3\" rowHeight=\"30px\">\n    <mat-grid-tile>{{sesion.fechaInicioMoment.format('DD/MM/YYYY')}}</mat-grid-tile>\n    <mat-grid-tile>{{sesion.fechaInicioMoment.format('hh:mm a')}}</mat-grid-tile>\n    <mat-grid-tile>{{obtenerNombreCoach(sesion.coach.idCoach)}}</mat-grid-tile>\n  </mat-grid-list>\n</mat-card>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ITareasPaginadas } from '@dashboard/modelo/interfaces/ITareasPaginadas.type';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { ITarea } from '@dashboard/modelo/interfaces/ITarea.type';\nimport { EstadoTarea } from '@dashboard/modelo/enums/EstadosTarea.enum';\nimport { DashboardService } from '@dashboard/servicios/dashboard.service';\nimport { Router } from '@angular/router';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { TipoTarea } from '@dashboard/modelo/enums/TipoTarea.enum';\nimport { CustomModalType } from '@dashboard/modelo/enums/CustomModalTypes.enum';\nimport { DatePipe } from '@angular/common';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { MatSort } from '@angular/material/sort';\nimport { fromEvent } from 'rxjs';\nimport { HumanizePipe } from '@app/shared/pipes/HumanizePipe.pipe';\n\n@Component({\n  selector: 'app-tareas',\n  templateUrl: './leads.component.html',\n  styleUrls: ['./leads.component.scss'],\n})\nexport class LeadsComponent implements OnInit {\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  leads: ITarea[];\n  leadsFiltrados: ITarea[];\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions = [10, 25, 50, 100];\n  pageIndex = 0;\n  active = 'default';\n  direction = 'default';\n\n  constructor(\n    private dashboardService: DashboardService,\n    private datePipe: DatePipe,\n    private router: Router,\n    private customModalService: CustomModalService,\n    private humanizePipe: HumanizePipe\n  ) {}\n\n  ngOnInit() {\n    this.consultarLeads();\n    fromEvent(this.filter.nativeElement, 'keyup')\n      .pipe(debounceTime(300), distinctUntilChanged())\n      .subscribe(() => {\n        if (this.filter.nativeElement.value) {\n          const filterValue = this.filter.nativeElement.value\n            .trim()\n            .toLowerCase();\n          this.leadsFiltrados = this.leads.filter((tarea: ITarea) => {\n            const { a, b, c, d, e } = this.extraerCriteriosBusqueda(tarea);\n            return (a + b + c + d + e).includes(filterValue);\n          });\n        } else {\n          this.leadsFiltrados = this.leads;\n        }\n      });\n  }\n\n  private extraerCriteriosBusqueda(tarea: ITarea) {\n    const a = this.datePipe.transform(\n      tarea.fechaCreacion,\n      'yyyy/MM/dd HH:mm:ss'\n    );\n    const b = this.humanizePipe.transform(tarea.tipo);\n    const c = tarea.nombre.toLowerCase();\n    const d = this.datePipe.transform(\n      tarea.fechaCreacion,\n      'd MMMM / y - h:mm a'\n    );\n    const e = tarea.criticidad;\n    return { a, b, c, d, e };\n  }\n\n  changePage($event: PageEvent) {\n    this.pageIndex = $event.pageIndex;\n    this.pageSize = $event.pageSize;\n    this.filter.nativeElement.value = '';\n    this.consultarLeads();\n  }\n\n  sortData($event) {\n    if ($event.direction) {\n      this.active = $event.active;\n      this.direction = $event.direction;\n    } else {\n      this.active = 'default';\n      this.direction = 'default';\n    }\n    this.filter.nativeElement.value = '';\n    this.consultarLeads();\n  }\n\n  verDetalle(lead: ITarea) {\n    switch (TipoTarea[lead.tipo]) {\n      case TipoTarea.TAREA_DOCUMENTAL:\n        this.router.navigate(['/dashboard/detalle-tarea', lead.id]);\n        break;\n      case TipoTarea.REVISION_LISTAS_NEGRAS:\n        this.router.navigate(['/dashboard/revision-listas-negras', lead.id]);\n        break;\n      default:\n        this.router.navigate(['/coaching/detalle-generico', lead.id]);\n    }\n  }\n\n  private consultarLeads() {\n    const offset = this.pageIndex * this.pageSize;\n    this.dashboardService\n      .consultarTareasPorEstado(\n        EstadoTarea.PENDIENTE,\n        offset,\n        this.pageSize,\n        this.active,\n        this.direction\n      )\n      .then((tareasPaginadas: ITareasPaginadas) => {\n        this.leads = tareasPaginadas.tareas;\n        this.leadsFiltrados = this.leads;\n        this.length = tareasPaginadas.cantidad;\n      })\n      .catch((err) =>\n        this.customModalService.abrirModal(CustomModalType.ERROR)\n      );\n  }\n}\n","<h1>Leads</h1>\n<div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"filter-content\">\n        <div class=\"search-grid\">\n          <div class=\"input-group\">\n            <input #filter type=\"text\" name=\"search\" placeholder=\"Buscar\"/>\n            <button class=\"reset\" type=\"reset\" (click)=\"filter.value = null; leadsFiltrados = leads\">\n              <span class=\"icon-clear\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-12\">\n      <div class=\"paginator\">\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                       (page)=\"changePage($event)\"></mat-paginator>\n      </div>\n    </div>\n    <div class=\"col-md-12\">\n      <div class=\"table-responsive\">\n        <table matSort (matSortChange)=\"sortData($event)\">\n          <thead>\n          <th mat-sort-header=\"fechaCreacion\">Antiguedad</th>\n          <th mat-sort-header=\"tipoTarea\">Tipo</th>\n          <th mat-sort-header=\"descripcion\">Descripción</th>\n          <th mat-sort-header=\"criticidad\">Criticidad</th>\n          <th>Acciones</th>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let lead of leadsFiltrados\">\n            <td>{{ lead.fechaCreacion | date:'yyyy/MM/dd HH:mm:ss' }}</td>\n            <td>{{ lead.tipo | humanize }}</td>\n            <td>\n              <p>{{ lead.nombre }} </p>\n              <span>{{lead.fechaCreacion | date: 'd MMMM / y - h:mm a'}}</span>\n            </td>\n            <td [class.low]=\"lead.criticidad >= 7 && lead.criticidad <= 10\"\n                [class.medium]=\"lead.criticidad >= 4 && lead.criticidad <= 6\"\n                [class.high]=\"lead.criticidad >= 1 && lead.criticidad <= 3\">{{ lead.criticidad }}\n            </td>\n            <td>\n              <a mat-button class=\"see-more-button\" (click)=\"verDetalle(lead)\">Ver</a>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <h1>{{leadsFiltrados?.length === 0 ? 'No se encontraron leads activos.': ''}}</h1>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { flatMap, map, take } from 'rxjs/operators';\nimport { CONSULTA_SESIONES_COACH_EXPIRED, CONSULTA_SESIONES_COACH_SUCCESS } from '../state-management/actions/coaching.action';\nimport { SesionesCoach } from '../modelo/sesionesCoach.model';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\nimport { EstadoSesion } from '../modelo/estado-sesion.enum';\nimport { Sesion } from '../modelo/sesion.model';\n@Injectable()\nexport class SesionesCoachGuard implements CanActivate {\n  constructor(\n    private store: Store<any>,\n    private router: Router,\n    private coachingApiService: CoachingApiService\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    return this.store.select('usuario', 'uuid').pipe(\n      take(1),\n      flatMap((uiid) => {\n        if (uiid) {\n          return this.coachingApiService.consultarSesiones(uiid).pipe(\n            map((sesiones: SesionesCoach) => {\n              this.ordenarSesionesVigentes(sesiones);\n              this.ordenarSesionesVencidas(sesiones);\n              return true;\n            })\n          );\n        } else {\n          this.router.navigate(['coaching/id-coach-invalido']);\n          return of(false);\n        }\n      })\n    );\n  }\n\n  ordenarSesionesVigentes(sesionesCoach: SesionesCoach) {\n    const sesionesVigentes: SesionesCoach = { ...sesionesCoach };\n    sesionesVigentes.sesionesVigentes = this.ordenarSesion(sesionesVigentes.sesionesVigentes.\n      filter(sesion => sesion.estadoSesion !== EstadoSesion.VENCIDA));\n    this.store.dispatch({\n      type: CONSULTA_SESIONES_COACH_SUCCESS,\n      payload: sesionesVigentes,\n    });\n  }\n\n  ordenarSesionesVencidas(sesionesCoach: SesionesCoach) {\n    const sesionesVencidas: SesionesCoach = { ...sesionesCoach };\n    sesionesVencidas.sesionesVigentes = this.ordenarSesion(sesionesVencidas.sesionesVigentes.\n      filter(sesion => sesion.estadoSesion === EstadoSesion.VENCIDA));\n\n    this.store.dispatch({\n      type: CONSULTA_SESIONES_COACH_EXPIRED,\n      payload: sesionesVencidas,\n    });\n  }\n\n  private ordenarSesion(sesiones: Sesion[]) {\n    return sesiones.sort((a, b) => new Date(b.fechaInicio).getTime() - new Date(a.fechaInicio).getTime());\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { SesionesCoach } from '../modelo/sesionesCoach.model';\n\n@Injectable()\nexport class ListaSesionesCoachGuard implements CanActivate {\n  constructor(private store: Store<any>, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    return this.store.select('coaching').pipe(\n      take(1),\n      map((sesionesCoach: SesionesCoach) => {\n        const forzarInicio = next.params.mostrarInicio;\n        if (\n          !sesionesCoach ||\n          sesionesCoach.sesionesVigentes.length === 0 ||\n          sesionesCoach.sesionesVigentes.length > 1 ||\n          forzarInicio\n        ) {\n          return true;\n        } else {\n          const idSesion = sesionesCoach.sesionesVigentes[0].idSesion;\n          this.router.navigate([\n            `coaching/sesion/${idSesion}`,\n            {\n              idUsuario:\n                sesionesCoach.sesionesVigentes[0].ahorrador.idAhorrador,\n            },\n          ]);\n          return false;\n        }\n      })\n    );\n  }\n}\n","import { EstadoSesion } from './modelo/estado-sesion.enum';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Sesion } from '@coaching/modelo/sesion.model';\nimport { CookiesUtilsService } from '@app/shared/servicios/cookies-utils.service';\nimport {\n  ACTUALIZAR_ZONA_HORARIA,\n  CONSULTA_COACHES_SUCCESS,\n  CONSULTA_SESIONES_COACH_EXPIRED,\n  CONSULTA_SESIONES_COACH_SUCCESS,\n  CONSULTA_TEMAS_SUCCESS,\n} from '@coaching/state-management/actions/coaching.action';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, Observable, Subscription, timer } from 'rxjs';\nimport { CargandoService } from '@app/shared/servicios/cargando.service';\nimport { SesionesCoach } from '@coaching/modelo/sesionesCoach.model';\nimport { TemasSesiones } from '@coaching/modelo/temas.model';\nimport { Coaches } from '@coaching/modelo/coaches.model';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { delay, first, mergeMap } from 'rxjs/operators';\nimport { environment } from '@env/environment';\nimport * as momentTimezone from 'moment-timezone';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\n@Component({\n  selector: 'app-coaching',\n  templateUrl: './coaching.component.html',\n  styleUrls: ['./coaching.component.scss'],\n})\nexport class CoachingComponent implements OnInit, OnDestroy {\n  @ViewChild(MatSidenav, { static: true }) sideNav: MatSidenav;\n  nombreCoach$: Observable<string>;\n  rolUser$: Observable<string>;\n  cargando$: Observable<boolean | null>;\n  TIEMPO_RECARGA = 1800000;\n  zonasHorarias: string[] = [];\n  zonaHorariaSeleccionada = environment.zone;\n  private suscripciones: Subscription[] = [];\n\n  isAdmin: boolean;\n\n  constructor(\n    private store: Store<any>,\n    private cargandoService: CargandoService,\n    private coachingApiService: CoachingApiService,\n    private cookiesService: CookiesUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.zonasHorarias = momentTimezone.tz.names();\n    this.nombreCoach$ = this.store.select('coaching', 'nombreCompleto');\n    this.rolUser$ = this.store.select('coaching', 'rol');\n    this.cargando$ = this.cargandoService.cargar$.asObservable();\n    this.cargarTemas();\n    this.cargarCoaches();\n    this.cargarSesionesVigentes();\n    this.store.select('coaching', 'rol').subscribe((value) => {\n      this.isAdmin = value === 'ADMIN';\n    });\n    this.subscribeSideNavChange();\n  }\n\n  ngOnDestroy() {\n    this.suscripciones.forEach((value1) => value1.unsubscribe());\n    this.suscripciones = [];\n  }\n\n  private cargarTemas() {\n    this.coachingApiService\n      .consultarTemas({\n        tipoUsuario: 'COACH',\n        pais: environment.envCountry,\n      })\n      .then((temasSesiones: TemasSesiones) =>\n        this.store.dispatch({\n          type: CONSULTA_TEMAS_SUCCESS,\n          payload: temasSesiones.temas,\n        })\n      );\n  }\n\n  private cargarCoaches() {\n    this.coachingApiService\n      .consultarCoachesPorPais(environment.envCountry)\n      .subscribe((coaches: Coaches) =>\n        this.store.dispatch({\n          type: CONSULTA_COACHES_SUCCESS,\n          payload: coaches.coaches,\n        })\n      );\n  }\n\n  private cargarSesionesVigentes() {\n    const zonaHoraria$ = this.store.select('coaching', 'zonaHoraria');\n    const sesiones$ = this.store.select('coaching', 'sesionesVigentes');\n\n    this.suscripciones.push(\n      combineLatest([zonaHoraria$, sesiones$]).subscribe((value) =>{\n        this.programarReintentoConsultaSesiones(value[1], value[0]);\n      })\n    );\n  }\n\n  private programarReintentoConsultaSesiones(\n    sesiones: Sesion[],\n    zonaHoraria: string\n  ) {\n    if (sesiones && sesiones.length > 0) {\n      const sesion = this.obtenerPrimeraSesionEnFinalizar(sesiones);\n      const tiempo =\n        this.calcularTiempoParaFinalizarSesion(sesion, zonaHoraria) + 1000;\n      this.programarConsultaSesion(tiempo);\n    } else {\n      this.programarConsultaSesion(this.TIEMPO_RECARGA);\n    }\n  }\n\n  public programarConsultaSesion(tiempo) {\n    this.suscripciones.forEach((suscripciones) => suscripciones.unsubscribe());\n    this.suscripciones = [];\n    this.suscripciones.push(\n      timer().pipe(delay(tiempo))\n        .pipe(first())\n        .pipe(mergeMap(() => this.store.select('usuario', 'uuid').pipe(first())))\n        .pipe(\n          mergeMap((idCoach) => {\n            return this.coachingApiService.consultarSesiones(idCoach);\n          })\n        )\n        .subscribe((sesionesCoach: SesionesCoach) => {\n          this.ordenarSesionesVigentes(sesionesCoach);\n          this.ordenarSesionesVencidas(sesionesCoach);\n        })\n    );\n\n  }\n\n  ordenarSesionesVigentes(sesionesCoach: SesionesCoach) {\n    const sesionesVigentes: SesionesCoach = { ...sesionesCoach };\n    sesionesVigentes.sesionesVigentes = this.ordenarSesion(sesionesVigentes.sesionesVigentes.filter(\n      sesion => sesion.estadoSesion !== EstadoSesion.VENCIDA));\n    this.store.dispatch({\n      type: CONSULTA_SESIONES_COACH_SUCCESS,\n      payload: sesionesVigentes,\n    });\n  }\n\n  ordenarSesionesVencidas(sesionesCoach: SesionesCoach) {\n    const sesionesVencidas: SesionesCoach = { ...sesionesCoach };\n    sesionesVencidas.sesionesVigentes = this.ordenarSesion(sesionesVencidas.sesionesVigentes.filter(\n      sesion => sesion.estadoSesion === EstadoSesion.VENCIDA));\n    this.store.dispatch({\n      type: CONSULTA_SESIONES_COACH_EXPIRED,\n      payload: sesionesVencidas,\n    });\n  }\n\n  private ordenarSesion(sesiones: Sesion[]) {\n    return sesiones.sort((a, b) => new Date(b.fechaInicio).getTime() - new Date(a.fechaInicio).getTime());\n  }\n\n  calcularTiempoParaFinalizarSesion(sesion: Sesion, zonaHoraria: string) {\n    const fechaFinSesion = sesion.fechaFinMoment.toDate();\n    fechaFinSesion.setMinutes(fechaFinSesion.getMinutes() + 10);\n    const fechaFin = this.obtenerFecha(fechaFinSesion, zonaHoraria);\n    const fechaActual = this.obtenerFecha(new Date(), zonaHoraria);\n    return fechaFin.getTime() - fechaActual.getTime();\n  }\n\n  obtenerPrimeraSesionEnFinalizar(sesiones: Sesion[]) {\n    const sesionesOrdenadas = sesiones.slice().sort(this.orfenarPorFecha);\n    return sesiones ? sesionesOrdenadas[0] : null;\n  }\n\n  private orfenarPorFecha(a, b) {\n    return new Date(a.fechaFin).getTime() - new Date(b.fechaFin).getTime();\n  }\n\n  obtenerFecha(fecha: Date, zonaHoraria: string) {\n    const hoy = momentTimezone(fecha);\n    return hoy.tz(zonaHoraria).toDate();\n  }\n\n  zonaCambiada() {\n    this.store.dispatch({\n      type: ACTUALIZAR_ZONA_HORARIA,\n      payload: this.zonaHorariaSeleccionada,\n    });\n  }\n\n  subscribeSideNavChange() {\n    this.sideNav.openedChange.asObservable().subscribe((opened) => {\n      if (!this.obtenerEstadoMenu() && this.sideNav.opened) {\n        this.sideNav.close();\n      }\n    });\n  }\n\n  obtenerEstadoMenu() {\n    return this.cookiesService.obtenerInformacionCookie('mostrarMenuIzquierdo');\n  }\n\n  actualizarEstadoMenu(mostarMenu) {\n    this.cookiesService.guardarInformacionCookie(\n      'mostrarMenuIzquierdo',\n      mostarMenu\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <img src=\"../assets/images/brand.png\" alt=\"\">\n    <span class=\"example-spacer\"></span>\n    <mat-form-field>\n      <mat-select [(value)]=\"zonaHorariaSeleccionada\" (selectionChange)=\"zonaCambiada()\">\n        <mat-option *ngFor=\"let zona of zonasHorarias\" [value]=\"zona\">{{zona}}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <button mat-flat-button color=\"primary\" [matMenuTriggerFor]=\"menu\">\n      <mat-icon>account_circle</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <div class=\"menu-content\">\n        <p class=\"user-name\"><strong>{{ nombreCoach$ | async }}</strong></p>\n        <p>{{ rolUser$ | async }}</p>\n        <br>\n        <btn-cerrar-session></btn-cerrar-session>\n      </div>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-progress-bar *ngIf=\"cargando$ | async\" mode=\"indeterminate\" color=\"secondary\"></mat-progress-bar>\n\n<mat-sidenav-container>\n  <mat-sidenav #sidenav mode=\"side\" opened=\"true\">\n    <button mat-button class=\"button-toogle-menu\" (click)=\"sidenav.toggle(); actualizarEstadoMenu(sidenav.opened)\"\n            [class.menu-open]=\"sidenav.opened\">\n      <mat-icon *ngIf=\"!sidenav.opened\">menu</mat-icon>\n      <mat-icon *ngIf=\"sidenav.opened\">clear</mat-icon>\n    </button>\n    <app-menu-izquierdo [abrirMenu]=\"sidenav.opened\" [isAdmin]=\"isAdmin\"></app-menu-izquierdo>\n  </mat-sidenav>\n\n  <mat-sidenav-content [class.full-width-with-collapsed-menu]=\"!sidenav.opened\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DashboardService } from '@dashboard/servicios/dashboard.service';\nimport { ModalComentarioTareaGenericaComponent } from '../../componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component';\nimport { CustomModalType } from '@dashboard/modelo/enums/CustomModalTypes.enum';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { Location } from '@angular/common';\nimport { ILeadGenerico } from '../../modelo/ILeadGenerico.type';\n\n@Component({\n  selector: 'app-tarea-generica',\n  templateUrl: './lead-generico.component.html',\n  styleUrls: ['./lead-generico.component.scss'],\n})\nexport class LeadGenericoComponent implements OnInit {\n  detalleLead: ILeadGenerico;\n  bloquearBoton = false;\n\n  constructor(\n    private location: Location,\n    private router: Router,\n    private dialog: MatDialog,\n    private route: ActivatedRoute,\n    private dashboardService: DashboardService,\n    private customModalService: CustomModalService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      const idLead = +params.id_lead;\n      this.dashboardService.consultarTareaPorId(idLead).subscribe(\n        (tarea) => (this.detalleLead = tarea),\n        (error) => {\n          this.router\n            .navigate(['/dashboard'])\n            .then(() => this.obtenerErrorConsulta(error.data.mensaje))\n            .catch((reason) => console.error(reason));\n          console.error('ERROR consulta tarea generica', error);\n        }\n      );\n    });\n  }\n\n  abrirModalComentario() {\n    const modal = this.dialog.open(ModalComentarioTareaGenericaComponent, {\n      data: {},\n      panelClass: 'medium-screen-dialog',\n    });\n    modal.afterClosed().subscribe((comentario) => {\n      if (comentario) {\n        this.detalleLead = Object.assign({}, this.detalleLead, {\n          comentario,\n        });\n        this.finalizarTareaGenerica(this.detalleLead);\n      }\n    });\n    return modal;\n  }\n\n  finalizarTareaGenerica(detalle: ILeadGenerico) {\n    this.bloquearBoton = true;\n    this.dashboardService\n      .finalizarTareaGenerica({\n        idTarea: detalle.id,\n        comentario: detalle.comentario,\n      })\n      .then(() => {\n        this.bloquearBoton = false;\n        this.mostarModalSuccess();\n        this.location.back();\n      })\n      .catch((err) => {\n        this.bloquearBoton = false;\n        this.mostarModalError();\n      });\n  }\n\n  mostarModalSuccess() {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS);\n  }\n\n  mostarModalError() {\n    this.customModalService.abrirModal(CustomModalType.ERROR);\n  }\n\n  private obtenerErrorConsulta(error: string) {\n    switch (error) {\n      case 'tarea.detalle.pais':\n        return this.customModalService.abrirModal(CustomModalType.WARNING, {\n          mensaje:\n            'La tarea que intenta consultar no corresponde al país en sesión.',\n        });\n      case 'tarea.detalle.noexiste':\n        return this.customModalService.abrirModal(CustomModalType.ERROR);\n      default:\n        return this.customModalService.abrirModal(CustomModalType.ERROR);\n    }\n  }\n}\n","<div *ngIf=\"detalleLead\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"navbar-top\">\n        <ul>\n          <li>\n            <a [routerLink]=\"['/coaching/leads']\">Bandeja de leads</a>\n          </li>\n          <li>\n            <mat-icon class=\"icon-navigate\">navigate_next</mat-icon>\n          </li>\n          <li class=\"active\">{{ detalleLead.id}}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h1>{{ detalleLead.nombre | humanize }}</h1>\n    </div>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <span>Lead Número</span>\n        <p>{{ detalleLead.id }}</p>\n      </div>\n      <div class=\"col-md-4\">\n        <span>Fecha de creación</span>\n        <p>{{ detalleLead.fechaCreacion | date:'yyyy-MM-dd HH:mm' }}</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bg-content clearfix\">\n        <div class=\"col-md-12\">\n          <h2>Lead:</h2>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Nombre</span>\n          <p>{{ detalleLead.nombre }}</p>\n        </div>\n        <div class=\"col-md-4\">\n          <span>Evento</span>\n          <p>{{ detalleLead.nombreEvento }}</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"detalleLead.datos && (detalleLead.datos | json) != ({} | json)\">\n      <div class=\"col-md-12\">\n        <span>Datos</span>\n        <pre>{{ detalleLead.datos | json }}</pre>\n      </div>\n    </div>\n    <br>\n    <hr>\n    <br>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button mat-button class=\"mat-button btns-primary align-r\" (click)=\"abrirModalComentario()\"\n                *ngIf=\"detalleLead.estado !== 'FINALIZADA'\" [disabled]=\"bloquearBoton\">Finalizar</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { CoachDTO } from '@app/modulos/coaching/modelo/coaches.model';\nimport { tap } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { CargandoService } from '@app/shared/servicios/cargando.service';\nimport * as momentTimezone from 'moment-timezone';\nimport { ListaCoachingUsuarioMensualEdicionComponent } from '../../componentes/lista-coaching-usuario-mensual-edicion/lista-coaching-usuario-mensual-edicion.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from '@env/environment';\nimport { SesionAgendadas } from '@app/modulos/coaching/modelo/sesionesAgendadas.model';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\n\n@Component({\n  selector: 'app-lista-coaching-usuario-mensual',\n  templateUrl: './lista-coaching-usuario-mensual.component.html',\n  styleUrls: ['./lista-coaching-usuario-mensual.component.scss'],\n})\nexport class ListaCoachingUsuarioMensualComponent implements OnInit, OnDestroy {\n  idUsuario: string;\n  idCoach: string;\n  idSesion: string;\n  cargando = false;\n  columnas: number;\n\n  formulario: FormGroup;\n  coaches: CoachDTO[] = [];\n  sesiones: Sesion[] = [];\n  ahorrador: {\n    nombreCompleto: string;\n    dineroDisponible: number;\n    tieneAhorroDesbloqueado: boolean;\n  };\n  sesionesVigentes$: Observable<Sesion[]>;\n  sesionesAgendadas: SesionAgendadas[];\n\n  coaches$: Observable<CoachDTO[]>;\n  existeSesionExpirando: boolean;\n  isAdmin: boolean;\n  zonaHoraria = environment.zone;\n  private suscripciones: Subscription[] = [];\n  private idCoachSeleccionado: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<any>,\n    private router: Router,\n    private route: ActivatedRoute,\n    private cargandoService: CargandoService,\n    private coachingApiService: CoachingApiService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnDestroy() {\n    this.suscripciones.forEach((suscripcion) => suscripcion.unsubscribe());\n  }\n\n  crearFormulario(fb: FormBuilder): FormGroup {\n    return fb.group({\n      fecha: fb.control('', [Validators.required]),\n      coach: fb.control(''),\n    });\n  }\n\n  mostrarSesionesAgendada(idCoach: string | number | any) {\n    if (idCoach) {\n      this.idCoachSeleccionado = idCoach;\n      this.cargando = true;\n      this.cargandoService.mostrarCargando();\n      this.coachingApiService\n        .consultarSesionesAgendadasCoach(\n          idCoach,\n          encodeURIComponent(this.zonaHoraria)\n        )\n        .subscribe((data: any) => {\n          this.sesionesAgendadas = data.sesiones.map((value) => {\n            value.nombreAhorrador = value.resumen;\n            value.idAhorrador = value.idAhorradores[0];\n            value.fechaInicioMoment = momentTimezone(value.fechaInicio).tz(\n              this.zonaHoraria\n            );\n            value.fechaFinMoment = momentTimezone(value.fechaFin).tz(\n              this.zonaHoraria\n            );\n            return value;\n          });\n          this.cargando = false;\n          this.cargandoService.ocultarCargando();\n        });\n    } else {\n      this.idCoachSeleccionado = null;\n      this.sesionesAgendadas = new Array<SesionAgendadas>();\n    }\n  }\n\n  ngOnInit() {\n    this.idCoach = this.route.snapshot.paramMap.get('idUsuario');\n    this.existeSesionExpirando = false;\n    this.columnas = this.getColumnas();\n    this.coaches$ = this.store\n      .select('coaching', 'coaches')\n      .pipe(tap((coaches) => (this.coaches = coaches)));\n    this.sesionesVigentes$ = this.store.select('coaching', 'sesionesVigentes');\n    this.formulario = this.crearFormulario(this.fb);\n    this.store.select('coaching', 'rol').subscribe((value) => {\n      this.isAdmin = value === 'ADMIN';\n    });\n    this.store.select('coaching', 'zonaHoraria').subscribe((value) => {\n      this.zonaHoraria = value;\n      this.mostrarSesionesAgendada(this.idCoachSeleccionado);\n    });\n  }\n\n  getColumnas() {\n    if (this.getInnerWidth() <= 400) {\n      return 1;\n    } else {\n      return this.getInnerWidth() <= 600 ? 2 : 3;\n    }\n  }\n\n  getInnerWidth() {\n    return window.innerWidth;\n  }\n\n  onRowClick(sesion: SesionAgendadas) {\n    const dialogRef = this.dialog.open(\n      ListaCoachingUsuarioMensualEdicionComponent,\n      {\n        panelClass: 'modal-editar-sesiones',\n        data: sesion,\n      }\n    );\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.mostrarSesionesAgendada(this.formulario.get('coach').value);\n    });\n  }\n\n  get fecha() {\n    return this.formulario.get('fecha');\n  }\n\n  get coach() {\n    return this.formulario.get('coach');\n  }\n\n  get hora() {\n    return this.formulario.get('hora');\n  }\n\n  public recargarConsulta() {\n    if (this.idCoachSeleccionado) {\n      this.mostrarSesionesAgendada(this.idCoachSeleccionado);\n    }\n  }\n}\n","<button mat-fab class=\"reload-button\" (click)=\"recargarConsulta()\">\n  <mat-icon>autorenew</mat-icon>\n</button>\n<mat-card>\n  <div class=\"row\">\n    <form [formGroup]=\"formulario\" autocomplete=\"off\" id=\"formularioCoach\">\n      <div class=\"section-resume-coaching\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"control-label\">Coach</label>\n            <mat-form-field appearance=\"outline\">\n              <mat-select placeholder=\"Selecciona un coach\" formControlName=\"coach\" id=\"coach\"\n                          (selectionChange)=\"mostrarSesionesAgendada($event.value)\">\n                <ng-container *ngIf=\"coaches$ | async as coaches\">\n                  <mat-option *ngIf=\"coaches && coaches.length > 0\" [value]=\"null\"\n                              [attr.data-test-id]=\"'coachOpcionVacio'\">\n                    ...\n                  </mat-option>\n                  <mat-option *ngFor=\"let c of coaches; let i = index\" [attr.data-test-id]=\"'coachOpcion'+ i\"\n                              [value]=\"c.id\">\n                    {{c.nombreCompleto | titlecase}}\n                  </mat-option>\n                </ng-container>\n              </mat-select>\n            </mat-form-field>\n            <app-mostrar-error-formularios id=\"erroresCoach\" [control]=\"coach\"></app-mostrar-error-formularios>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  <br>\n  <h4>Sesiones programadas</h4>\n  <div class=\"content-grey\">\n    <mat-card class=\"card-header-tabla\">\n      <mat-grid-list [cols]=\"3\" rowHeight=\"20px\">\n        <mat-grid-tile><strong>Fecha</strong></mat-grid-tile>\n        <mat-grid-tile><strong>Hora</strong></mat-grid-tile>\n        <mat-grid-tile><strong>Ahorrador</strong></mat-grid-tile>\n      </mat-grid-list>\n    </mat-card>\n    <ng-container *ngIf=\"sesionesAgendadas && sesionesAgendadas.length > 0; else sinSesionesAgendadas\">\n      <mat-card class=\"card-cita\" *ngFor=\"let sesion of sesionesAgendadas\" (click)=\"onRowClick(sesion)\">\n        <mat-grid-list [cols]=\"3\" rowHeight=\"30px\">\n          <mat-grid-tile>{{sesion.fechaInicioMoment.format('DD/MM/YYYY')}}</mat-grid-tile>\n          <mat-grid-tile>{{sesion.fechaInicioMoment.format('hh:mm a') + \" - \" + sesion.fechaFinMoment.format('hh:mm a')}}\n          </mat-grid-tile>\n          <mat-grid-tile>{{sesion.nombreAhorrador}}</mat-grid-tile>\n        </mat-grid-list>\n      </mat-card>\n    </ng-container>\n    <ng-template #sinSesionesAgendadas>\n      <mat-card class=\"card-vacio\">\n        No hay sesiones agendadas\n      </mat-card>\n    </ng-template>\n  </div>\n</mat-card>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { Store } from '@ngrx/store';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-menu-izquierdo',\n  templateUrl: './menu-izquierdo.component.html',\n  styleUrls: ['./menu-izquierdo.component.scss'],\n})\nexport class MenuIzquierdoComponent implements OnInit {\n  @Input() abrirMenu: boolean;\n  @Input() isAdmin: boolean;\n  sesionesActivas: Sesion[];\n  opcionSeleccionada: any = {\n    home: false,\n    detalle: false,\n    programar: false,\n    mes: false,\n  };\n\n  constructor(private store: Store<any>, private router: Router) {}\n\n  ngOnInit() {\n    const sesiones$ = this.store\n      .select('coaching', 'sesionesVigentes')\n      .pipe(map((sesiones: Sesion[]) => this.orgenarSesiones(sesiones)));\n    sesiones$.subscribe((value) => {\n      this.sesionesActivas = value;\n    });\n    this.router.events.subscribe((val: any) => {\n      this.obtenerSeccionSeleccionada(val.url);\n    });\n  }\n\n  private orgenarSesiones(sesiones: Sesion[]) {\n    return sesiones\n      .slice()\n      .sort((a, b) =>\n        a.fechaInicio > b.fechaInicio\n          ? 1\n          : b.fechaInicio > a.fechaInicio\n          ? -1\n          : 0\n      );\n  }\n\n  abrirDetalle(sesion: Sesion) {\n    this.router.navigate([\n      `coaching/sesion/${sesion.idSesion}`,\n      {\n        idUsuario: sesion.ahorrador.idAhorrador,\n      },\n    ]);\n  }\n\n  abrirInicio() {\n    this.router.navigate([\n      `coaching/`,\n      {\n        mostrarInicio: true,\n      },\n    ]);\n    this.seleccionarOption('home');\n  }\n\n  obtenerSeccionSeleccionada(url: string) {\n    if (url) {\n      if (url.includes('mostrarInicio')) {\n        this.seleccionarOption('home');\n      } else if (url.includes('sesion/')) {\n        this.seleccionarOption('detalle');\n      } else if (url.includes('programar-sesiones')) {\n        this.seleccionarOption('programar');\n      } else if (url.includes('mensual')) {\n        this.seleccionarOption('mes');\n      } else {\n        this.opcionSeleccionada = {};\n      }\n    }\n  }\n\n  seleccionarOption(nombre: string) {\n    this.opcionSeleccionada = {};\n    this.opcionSeleccionada[nombre] = true;\n  }\n}\n","<ng-container>\n  <div class=\"side-bar side-bar-open\" *ngIf=\"abrirMenu\">\n    <button mat-button (click)=\"abrirInicio()\" [class.es-seleccionado]=\"opcionSeleccionada.home\">\n      <mat-icon>home</mat-icon>\n      Inicio\n    </button>\n    <button mat-button (click)=\"abrirDetalle(sesionesActivas[0])\" *ngIf=\"sesionesActivas && sesionesActivas.length > 0\" [class.es-seleccionado]=\"opcionSeleccionada.detalle\">\n      <mat-icon>headset_mic</mat-icon>\n      Sesiones activas\n    </button>\n    <button mat-button routerLink=\"/coaching/programar-sesiones\" [class.es-seleccionado]=\"opcionSeleccionada.programar\">\n      <mat-icon>perm_contact_calendar</mat-icon>\n      Programar sesiones\n    </button>\n    <button mat-button routerLink=\"/coaching/mensual\" *ngIf=\"isAdmin\" [class.es-seleccionado]=\"opcionSeleccionada.mes\">\n      <mat-icon>date_range</mat-icon>\n      Sesiones del mes\n    </button>\n    <button mat-button routerLink=\"/coaching/leads\">\n      <mat-icon>list</mat-icon>\n      Ver leads\n    </button>\n  </div>\n  <div class=\"side-bar side-bar-collapsed\" *ngIf=\"!abrirMenu\">\n    <button mat-button (click)=\"abrirInicio()\" [class.es-seleccionado]=\"opcionSeleccionada.home\">\n      <mat-icon>home</mat-icon>\n    </button>\n    <button mat-button (click)=\"abrirDetalle(sesionesActivas[0])\" *ngIf=\"sesionesActivas.length > 0\" [class.es-seleccionado]=\"opcionSeleccionada.detalle\">\n      <mat-icon>headset_mic</mat-icon>\n    </button>\n    <button mat-button routerLink=\"/coaching/programar-sesiones\" [class.es-seleccionado]=\"opcionSeleccionada.programar\">\n      <mat-icon>perm_contact_calendar</mat-icon>\n    </button>\n    <button mat-button routerLink=\"/coaching/mensual\" *ngIf=\"isAdmin\" [class.es-seleccionado]=\"opcionSeleccionada.mes\">\n      <mat-icon>date_range</mat-icon>\n    </button>\n    <button mat-button routerLink=\"/coaching/leads\">\n      <mat-icon>list</mat-icon>\n    </button>\n  </div>\n</ng-container>\n","import { ActualizarSesion } from './../modelo/sesion.model';\nimport { Injectable } from '@angular/core';\nimport { ApiService } from '@core/servicios/api.service';\nimport { DisponibilidadesCoaches } from '@coaching/modelo/disponibilidad-coach.model';\nimport { AgendarSesionAhorradorDTO } from '@coaching/modelo/sesion.model';\nimport { EncryptService } from '@qiip/core';\nimport { fromPromise } from 'rxjs/internal-compatibility';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CoachingApiService {\n  constructor(\n    private api: ApiService,\n    private encryptService: EncryptService\n  ) {}\n\n  consultarDisponibilidad(\n    pais: string,\n    fecha: string,\n    zonaHoraria: string,\n    queryParams?: any\n  ): Promise<DisponibilidadesCoaches> {\n    return this.api.get(\n      `coaching/v2/${pais}/coaches/disponibilidad/${fecha}/${zonaHoraria}`,\n      queryParams,\n      {}\n    );\n  }\n\n  agendar(body: AgendarSesionAhorradorDTO): Promise<any> {\n    return this.cifrarId(body.idAhorrador).then((nbmAuth) =>\n      this.api.post(`coaching/v2/ahorradores/agendar_cita`, body, {\n        'X-nbm-auth': nbmAuth,\n      })\n    );\n  }\n\n  actualizarSesion(data): Promise<any> {\n    return this.api.post(`coaching/v2/coaches/actualizar_sesion`, data);\n  }\n\n  consultarSesiones(idCoach) {\n    return fromPromise(this.api.get(`coaching/coaches/${idCoach}/sesiones`));\n  }\n\n  cifrarId(idUsuario: string) {\n    return this.api\n      .get('cash_in/llavePublica')\n      .then((llave) =>\n        this.encryptService.cifrar(idUsuario, llave.llavePublica)\n      );\n  }\n\n  consultarNombresUsuario(queryParams) {\n    return fromPromise(\n      this.api.get(`usuario/usuarios/datos/nombres`, queryParams)\n    );\n  }\n\n  consultarAhorrador(idUsuario) {\n    return fromPromise(this.api.get(`ahorro/ahorradores/${idUsuario}`));\n  }\n\n  consultarSesionesAhorrador(idAhorrador) {\n    return fromPromise(\n      this.api.get(`coaching/ahorradores/${idAhorrador}/sesiones`)\n    );\n  }\n\n  actualizarEstadoSesion(sesion: ActualizarSesion): Promise<any>{\n    return this.api.post('coaching/v2/coaches/actualizar_estado_sesion', sesion);\n  }\n\n  consultaMotivos(): Promise<any> {\n    return this.api.get('coaching/v2/sesiones/motivos');\n  }\n\n  consultarSesionesAgendadasCoach(idCoach, zonaHoraria) {\n    return fromPromise(\n      this.api.get(\n        `coaching/v2/coaches/${idCoach}/sesiones/agendadas/${zonaHoraria}`\n      )\n    );\n  }\n\n  desbloquearAhorro(data: { idAhorrador: string }) {\n    return this.api.post(`ahorro/desbloquear_ahorro`, data);\n  }\n\n  consultarUsuarioTieneEvaluacion(idUsuario: string) {\n    return fromPromise(\n      this.api.get(`servicio/evaluaciones/tiene_evaluacion/${idUsuario}`)\n    );\n  }\n\n  confirmarOTP(data: { otp: any; idAhorrador: any; flujoOtp: string }) {\n    return this.api.post(`legal/confirmar_otp`, data);\n  }\n\n  compartirResultadosEvaluacion(data: {\n    idSesion: string;\n    compartirResultados: boolean;\n  }) {\n    return this.api.post(`coaching/compartir_resultados_bienestar`, data);\n  }\n\n  consultarEvaluacion(queryParams) {\n    return fromPromise(this.api.get(`servicio/evaluaciones`, queryParams));\n  }\n\n  consultarTemas(queryParams: { tipoUsuario: string; pais: string }) {\n    return this.api.get(`coaching/sesiones/temas`, queryParams);\n  }\n\n  consultarCoachesPorPais(pais: string) {\n    return fromPromise(this.api.get(`coaching/v2/${pais}/coaches`));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable()\nexport class CoachInvalidoGuard implements CanActivate {\n  constructor(private store: Store<any>, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    return this.store.select('usuario', 'uuid').pipe(\n      take(1),\n      map((uuid) => {\n        if (uuid) {\n          this.router.navigate(['/coaching']);\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, interval, Observable, of, Subscription } from 'rxjs';\nimport { CoachDTO } from '@app/modulos/coaching/modelo/coaches.model';\nimport { Tema } from '@app/modulos/coaching/modelo/temas.model';\nimport { catchError, first, flatMap, map, tap } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Sesion } from '@app/modulos/coaching/modelo/sesion.model';\nimport { EstadoSesion } from '@app/modulos/coaching/modelo/estado-sesion.enum';\nimport {\n  AhorradorDTO,\n  ConsultaTieneEvaluacionAhorradorDTO,\n} from '@app/modulos/coaching/modelo/ahorrador.model';\nimport { CargandoService } from '@app/shared/servicios/cargando.service';\n\nimport * as momentTimezone from 'moment-timezone';\nimport { CustomModalType } from '@app/modulos/dashboard/modelo/enums/CustomModalTypes.enum';\nimport { CustomModalService } from '@app/shared/servicios/custom-modal.service';\nimport { DisponibilidadCoaches } from '@app/modulos/coaching/modelo/disponibilidad-coach.model';\nimport { environment } from '@env/environment';\nimport { Proposito } from '@app/modulos/coaching/modelo/proposito.enum';\nimport { SesionesCoach } from '@app/modulos/coaching/modelo/sesionesCoach.model';\nimport { CONSULTA_SESIONES_COACH_SUCCESS } from '@app/modulos/coaching/state-management/actions/coaching.action';\nimport { FormularioAgendarSesionComponent } from '@coaching/componentes/formulario-agendar-sesion/formulario-agendar-sesion.component';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\n\n@Component({\n  selector: 'app-detalle-coaching-usuario',\n  templateUrl: './detalle-coaching-usuario.component.html',\n  styleUrls: ['./detalle-coaching-usuario.component.scss'],\n})\nexport class DetalleCoachingUsuarioComponent implements OnInit, OnDestroy {\n  @ViewChild(FormularioAgendarSesionComponent)\n  formulario: FormularioAgendarSesionComponent;\n\n  idUsuario: string;\n  idSesion: string;\n  cargando = false;\n  sesionesTomadas: number;\n  columnas: number;\n  mostrarDesbloquearAhorro = false;\n\n  horasDisponibles: DisponibilidadCoaches[] = [];\n  temas: Tema[] = [];\n  coaches: CoachDTO[] = [];\n  sesiones: Sesion[] = [];\n  sesionesProgramadas: Sesion[] = [];\n  sesionesTabla: Sesion[];\n  usuario: {\n    id: string;\n    nombreCompleto: string;\n    dineroDisponible: number;\n    tieneAhorroDesbloqueado: boolean;\n    pais: string;\n  };\n  ahorradores: AhorradorDTO[] = [];\n  sesionesVigentes$: Observable<Sesion[]>;\n\n  temas$: Observable<Tema[]>;\n  coaches$: Observable<CoachDTO[]>;\n  existeSesionExpirando: boolean;\n  sesionSeleccionada: Sesion;\n  ahorradores$: Observable<AhorradorDTO[]>;\n  isAdmin: boolean;\n  tieneEvaluacion = false;\n  datosCargados = false;\n  bloquearBoton = true;\n  diferenciaHoras: number;\n  diferenciaMinutos: number;\n  private zonaHoraria = environment.zone;\n  private suscripciones: Subscription[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<any>,\n    private router: Router,\n    private route: ActivatedRoute,\n    private coachingApiService: CoachingApiService,\n    private cargandoService: CargandoService,\n    private customModalService: CustomModalService\n  ) {}\n\n  ngOnDestroy() {\n    this.suscripciones.forEach((suscripcion) => suscripcion.unsubscribe());\n  }\n\n  onResize(event) {\n    this.columnas =\n      event.target.innerWidth <= 400\n        ? 1\n        : event.target.innerWidth <= 600\n        ? 2\n        : 3;\n  }\n\n  ngOnInit() {\n    this.existeSesionExpirando = false;\n    this.idUsuario = this.route.snapshot.paramMap.get('idUsuario');\n    this.idSesion = this.route.snapshot.paramMap.get('idSesion');\n    this.columnas =\n      window.innerWidth <= 400 ? 1 : window.innerWidth <= 600 ? 2 : 3;\n    this.coaches$ = this.store\n      .select('coaching', 'coaches')\n      .pipe(tap((coaches) => (this.coaches = coaches)));\n    this.ahorradores$ = this.store\n      .select('ahorradores', 'ahorradores')\n      .pipe(tap((ahorradores) => this.ahorradores));\n    this.temas$ = this.store\n      .select('coaching', 'temas')\n      .pipe(tap((temas) => (this.temas = temas)));\n    const zonaHoraria$ = this.store.select('coaching', 'zonaHoraria');\n    this.sesionesVigentes$ = this.store\n      .select('coaching', 'sesionesVigentes')\n      .pipe(\n        tap((sesiones) => {\n          if (\n            sesiones.filter((sesion) => sesion.idSesion === this.idSesion)\n              .length === 0\n          ) {\n            this.recargarPagina();\n          }\n        })\n      );\n    combineLatest([\n      this.coaches$,\n      this.temas$,\n      zonaHoraria$,\n      this.verificarSiUsuarioTieneEvaluacion(),\n    ]).subscribe((value) => {\n      this.reiniciarFormulario(this.formulario);\n      this.horasDisponibles = [];\n      this.zonaHoraria = value[2];\n      this.cargarDatosSesiones();\n      this.cargarDatosDeAhorrador();\n      this.tieneEvaluacion = value[3];\n      this.datosCargados = true;\n    });\n    this.store.select('coaching', 'rol').subscribe((value) => {\n      this.isAdmin = value === 'ADMIN';\n    });\n  }\n\n  recargarPagina() {\n    this.router.navigateByUrl('');\n  }\n\n  private cargarDatosSesiones() {\n    this.coachingApiService\n      .consultarSesionesAhorrador(this.idUsuario)\n      .subscribe((sesionesAhorradorDTO: { sesiones: Sesion[] }) => {\n        this.sesiones = this.actualizarFechasSegunZona(\n          sesionesAhorradorDTO.sesiones,\n          this.zonaHoraria\n        );\n        this.sesionesTomadas = this.filtrarSesionesTomadas(\n          sesionesAhorradorDTO\n        );\n        this.sesionesProgramadas = this.actualizarFechasSegunZona(\n          this.filtrarSesionesAgendadas(sesionesAhorradorDTO),\n          this.zonaHoraria\n        );\n        this.sesionSeleccionada = this.filtrarSesionSeleccionada(\n          sesionesAhorradorDTO\n        );\n        if (this.sesionSeleccionada) {\n          this.existeSesionExpirando =\n            this.obtenerFecha(\n              this.sesionSeleccionada.fechaFin,\n              this.zonaHoraria\n            ) <= this.obtenerFecha(new Date(), this.zonaHoraria);\n          this.programarCalculoDeTiempo();\n          this.calcularMostrarDesbloquearAhorro();\n        }\n        this.cargarDataSource();\n        this.cargandoService.ocultarCargando();\n      });\n  }\n\n  private actualizarFechasSegunZona(\n    sesionesVigentes: Sesion[],\n    zonaHoraria: string\n  ) {\n    return sesionesVigentes.map((value) => {\n      value.fechaInicioMoment = momentTimezone(value.fechaInicio).tz(\n        zonaHoraria\n      );\n      value.fechaFinMoment = momentTimezone(value.fechaFin).tz(zonaHoraria);\n      return value;\n    });\n  }\n\n  private filtrarSesionSeleccionada(sesionesAhorrador: { sesiones: Sesion[] }) {\n    return sesionesAhorrador.sesiones.find(\n      (sesion) => sesion.idSesion === this.idSesion\n    );\n  }\n\n  private filtrarSesionesAgendadas(sesionesAhorrador: { sesiones: Sesion[] }) {\n    return sesionesAhorrador.sesiones\n      .filter(\n        (sesiones) =>\n          sesiones.estadoSesion === EstadoSesion.AGENDADA ||\n          sesiones.estadoSesion === EstadoSesion.PREAGENDADA ||\n          sesiones.estadoSesion === EstadoSesion.AGENDAMIENTO_PROGRAMADO\n      )\n      .sort((a, b) =>\n        a.fechaInicio > b.fechaInicio\n          ? 1\n          : b.fechaInicio > a.fechaInicio\n          ? -1\n          : 0\n      );\n  }\n\n  private filtrarSesionesTomadas(sesionesAhorrador: { sesiones: Sesion[] }) {\n    return sesionesAhorrador.sesiones.filter(\n      (sesion) =>\n        sesion.estadoSesion === EstadoSesion.INICIADA ||\n        sesion.estadoSesion === EstadoSesion.FINALIZADA ||\n        sesion.estadoSesion === EstadoSesion.FINALIZADA_ERROR\n    ).length;\n  }\n\n  private cargarDataSource() {\n    this.sesionesTabla = this.sesiones.filter(\n      (sesion) =>\n        sesion.estadoSesion !== EstadoSesion.NUEVA &&\n        sesion.estadoSesion !== EstadoSesion.AGENDADA &&\n        sesion.estadoSesion !== EstadoSesion.PREAGENDADA &&\n        sesion.estadoSesion !== EstadoSesion.AGENDAMIENTO_PROGRAMADO &&\n        sesion.estadoSesion !== EstadoSesion.INICIADA\n    );\n  }\n\n  cargarDatosDeAhorrador() {\n    this.coachingApiService.consultarAhorrador(this.idUsuario).subscribe(\n      (ahorradorDTO: AhorradorDTO) => {\n        this.usuario = {\n          id: ahorradorDTO.id,\n          nombreCompleto: [\n            ahorradorDTO.primerNombre,\n            ahorradorDTO.primerApellido,\n          ].join(' '),\n          dineroDisponible: ahorradorDTO.totalMontoDisponible,\n          tieneAhorroDesbloqueado: ahorradorDTO.tieneAhorroDesbloqueado,\n          pais: ahorradorDTO.paisAhorro,\n        };\n      },\n      () => {\n        this.usuario = null;\n      }\n    );\n  }\n\n  obtenerFecha(fecha: Date, zonaHoraria: string) {\n    const hoy = momentTimezone(fecha);\n    return hoy.tz(zonaHoraria).toDate();\n  }\n\n  desbloquearAhorro() {\n    const parametros = {\n      idAhorrador: this.idUsuario,\n    };\n\n    const modal = this.customModalService.abrirModal(\n      CustomModalType.CONFIRMATION,\n      { mensaje: '¿Está seguro que desea desbloquear el ahorro?' }\n    );\n\n    modal.afterClosed().subscribe((resultado) => {\n      if (resultado) {\n        this.cargando = true;\n        this.cargandoService.mostrarCargando();\n\n        this.coachingApiService.desbloquearAhorro(parametros).then(\n          () => {\n            this.cargarDatosDeAhorrador();\n            this.cargando = false;\n            this.cargandoService.ocultarCargando();\n            this.mostrarDesbloquearAhorro = false;\n            this.mostarModalSuccess('Ahorro desbloqueado exitosamente');\n          },\n          (error) => {\n            console.error('Error desbloqueando ahorro', error);\n            this.cargando = false;\n            this.mostarModalError('Error desbloqueando ahorro');\n          }\n        );\n      }\n    });\n  }\n\n  obtenerTabSeleccionado(sesiones: Sesion[]) {\n    return sesiones.findIndex((sesion) => sesion.idSesion === this.idSesion);\n  }\n\n  cambiarDeTab($event, sesiones: Sesion[]) {\n    const indexTabs = $event.index;\n    this.sesionSeleccionada = sesiones[indexTabs];\n    this.existeSesionExpirando = this.sesionSeleccionada.fechaFin <= new Date();\n    if (this.sesionSeleccionada.idSesion !== this.idSesion) {\n      this.cargandoService.mostrarCargando();\n      this.router\n        .navigate([\n          `coaching/sesion/${this.sesionSeleccionada.idSesion}`,\n          {\n            idUsuario: this.sesionSeleccionada.ahorrador.idAhorrador,\n          },\n        ])\n        .then(() => {\n          this.idUsuario = this.route.snapshot.paramMap.get('idUsuario');\n          this.idSesion = this.sesionSeleccionada.idSesion;\n          this.reiniciarFormulario(this.formulario);\n          this.cargarDatosSesiones();\n          this.cargarDatosDeAhorrador();\n        })\n        .catch((reason) => console.error(reason));\n    }\n  }\n\n  reiniciarFormulario(formulario: FormularioAgendarSesionComponent) {\n    if (formulario) {\n      formulario.crearFormulario();\n      formulario.reiniciarFormulario();\n    }\n  }\n\n  private programarCalculoDeTiempo() {\n    this.calcularTiempoFinSesion();\n    this.calcularTiempoInicioSesion();\n    this.suscripciones.forEach((suscripcion) => suscripcion.unsubscribe());\n    this.suscripciones.push(\n      interval(5000).subscribe(() => {\n        this.calcularTiempoFinSesion();\n        this.calcularTiempoInicioSesion();\n      })\n    );\n  }\n\n  private calcularTiempoInicioSesion() {\n    const fechaInicioSesion = new Date(this.sesionSeleccionada.fechaInicio);\n    fechaInicioSesion.setMinutes(fechaInicioSesion.getMinutes() + 10);\n    const fechaInicio = this.obtenerFecha(fechaInicioSesion, this.zonaHoraria);\n    const fechaActual = this.obtenerFecha(new Date(), this.zonaHoraria);\n    this.bloquearBoton = fechaInicio.getTime() > fechaActual.getTime();\n  }\n\n  private calcularTiempoFinSesion() {\n    const fechaFinSesion = this.sesionSeleccionada.fechaFinMoment.toDate();\n    fechaFinSesion.setMinutes(fechaFinSesion.getMinutes() + 10);\n    const fechaFin = this.obtenerFecha(fechaFinSesion, this.zonaHoraria);\n    const fechaActual = this.obtenerFecha(new Date(), this.zonaHoraria);\n    const diffMs = fechaFin.getTime() - fechaActual.getTime();\n    this.diferenciaHoras = Math.floor((diffMs % 86400000) / 3600000);\n    this.diferenciaMinutos = Math.round(\n      ((diffMs % 86400000) % 3600000) / 60000\n    );\n  }\n\n  private calcularMostrarDesbloquearAhorro() {\n    this.mostrarDesbloquearAhorro =\n      this.sesionSeleccionada.proposito === Proposito.DISPOSICION_BLOQUEADO;\n  }\n\n  mostarModalSuccess(mensaje) {\n    this.customModalService.abrirModal(CustomModalType.SUCCESS, { mensaje });\n  }\n\n  mostarModalError(mensaje) {\n    this.customModalService.abrirModal(CustomModalType.ERROR, { mensaje });\n  }\n\n  public recargarConsulta() {\n    this.store\n      .select('usuario', 'uuid')\n      .pipe(first())\n      .pipe(\n        flatMap((idCoach) => {\n          return this.coachingApiService.consultarSesiones(idCoach);\n        })\n      )\n      .subscribe((sesionesCoach: SesionesCoach) => {\n        this.ordenarSesionesVigentes(sesionesCoach);\n      });\n  }\n\n  public ordenarSesionesVigentes(sesionesCoach: SesionesCoach) {\n    const sesionesVigentes: SesionesCoach = { ...sesionesCoach };\n    sesionesVigentes.sesionesVigentes = sesionesVigentes.sesionesVigentes\n      .filter((sesion) => sesion.estadoSesion !== EstadoSesion.VENCIDA)\n      .sort((a, b) => new Date(b.fechaInicio).getTime() - new Date(a.fechaInicio).getTime());\n    this.store.dispatch({\n      type: CONSULTA_SESIONES_COACH_SUCCESS,\n      payload: sesionesVigentes,\n    });\n  }\n\n  verificarSiUsuarioTieneEvaluacion(): Observable<boolean> {\n    return this.coachingApiService\n      .consultarUsuarioTieneEvaluacion(this.idUsuario)\n      .pipe(\n        map((consultaTieneEvaluacion: ConsultaTieneEvaluacionAhorradorDTO) => {\n          return consultaTieneEvaluacion.tieneEvaluacion;\n        }),\n        catchError((error) => {\n          console.error(\n            'Error verificando si el usuario tiene evaluacion',\n            error\n          );\n          this.mostarModalError(\n            'Error verificando si el usuario tiene evaluacion'\n          );\n          return of(false);\n        })\n      );\n  }\n}\n","<button mat-fab class=\"reload-button\" (click)=\"recargarConsulta()\">\n  <mat-icon>autorenew</mat-icon>\n</button>\n\n<ng-container *ngIf=\"datosCargados\">\n  <mat-tab-group #matTabGroupCoaching  *ngIf=\"sesionesVigentes$ | async as sesionesCoach\"\n                 [selectedIndex]=\"obtenerTabSeleccionado(sesionesCoach)\"\n                 (selectedTabChange)=\"cambiarDeTab($event, sesionesCoach)\">\n    <ng-container>\n      <mat-tab [label]=\"'Sesión ' + (sesion.fechaInicioMoment.format('hh:mm a')) + ' - '+ (sesion.fechaFinMoment.format('hh:mm a'))\"\n               *ngFor=\"let sesion of sesionesCoach\"></mat-tab>\n    </ng-container>\n  </mat-tab-group>\n  <div class=\"section-resume\">\n    <mat-grid-list [cols]=\"columnas\" (window:resize)=\"onResize($event)\" rowHeight=\"200px\" [style.background]=\"'#F9F9F9'\">\n      <mat-grid-tile>\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title><strong>{{usuario?.nombreCompleto | titlecase}}</strong></mat-card-title>\n            <mat-card-subtitle>Ahorrador</mat-card-subtitle>\n          </mat-card-header>\n        </mat-card>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title><strong>{{sesionesTomadas}}</strong></mat-card-title>\n            <mat-card-subtitle>Sesiones tomadas</mat-card-subtitle>\n          </mat-card-header>\n        </mat-card>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title><strong>{{usuario?.dineroDisponible}}</strong></mat-card-title>\n            <mat-card-subtitle>Dinero disponible</mat-card-subtitle>\n          </mat-card-header>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n\n  <div class=\"row\" *ngIf=\"!usuario?.tieneAhorroDesbloqueado && mostrarDesbloquearAhorro\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <button [attr.id]=\"'botonContinuar'\" color=\"primary\" mat-button\n                (click)=\"desbloquearAhorro()\"\n                [disabled]=\"cargando || bloquearBoton\" class=\"mat-button btns-primary align-l\" >\n          Desbloquear Ahorro\n        </button>\n        <p class=\"msg-tiempo-advertencia\" *ngIf=\"bloquearBoton\">Esta acción se habilitará en cuanto hayan pasado 10 minutos después de la hora de inicio de la sesión.</p>\n      </div>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"tieneEvaluacion && sesionSeleccionada\">\n    <app-detalle-bienestar-financiero [idUsuario]=\"idUsuario\" [idSesion]=\"idSesion\"\n                                      [compartirResultadoEvaluacionBienestar]=\"sesionSeleccionada.compartirEvaluacionBienestar\">\n    </app-detalle-bienestar-financiero>\n  </ng-container>\n\n  <h4>Completa los campos para programar la siguiente sesión de coaching</h4>\n  <div class=\"content-grey\">\n    <mat-card class=\"alerta-tiempo\" *ngIf=\"existeSesionExpirando\">\n      <mat-card-content>\n        <mat-icon>history</mat-icon>\n        <p>Tienes {{diferenciaHoras > 0 ? diferenciaHoras + ' hora(s), ' : ''}}{{diferenciaMinutos > 0 ? diferenciaMinutos\n          + ' minutos(s)' : 'menos de un minuto'}} para terminar de programar la sesión</p>\n      </mat-card-content>\n    </mat-card>\n    <app-formulario-agendar-sesion\n      [usuario]=\"usuario\"\n      [bloquearBoton]=\"bloquearBoton\"\n      [compartirDatos]=\"sesionSeleccionada?.compartirEvaluacionBienestar\"\n      (agendarError)=\"mostarModalError('Error al programar la sesión, revisa los horarios disponibles e intenta de nuevo.')\"\n      (agendarSuccess)=\"mostarModalSuccess('¡La sesión se programó con éxito!')\"\n      (horariosError)=\"mostarModalError('Error consultando horarios de disponibilidad.')\">\n    </app-formulario-agendar-sesion>\n    <p class=\"msg-tiempo-advertencia\" *ngIf=\"bloquearBoton\">Esta acción se habilitará en cuanto hayan pasado 10 minutos después de la hora de inicio de la sesión.</p>\n  </div>\n\n  <h4>Sesiones programadas</h4>\n  <div class=\"content-grey\">\n    <ng-container *ngIf=\"sesionesProgramadas && sesionesProgramadas.length > 0; else sinCitasProgramadas\">\n      <app-lista-sesiones-cards [sesiones]=\"sesionesProgramadas\" [coaches]=\"coaches\"></app-lista-sesiones-cards>\n    </ng-container>\n    <ng-template #sinCitasProgramadas>\n      <mat-card-subtitle class=\"card-vacio\">\n        El usuario no ha tomado sesiones\n      </mat-card-subtitle>\n    </ng-template>\n  </div>\n  <h4>Historial de citas del ahorrador {{usuario?.nombreCompleto | titlecase}}</h4>\n  <ng-container *ngIf=\"sesionesTabla && sesionesTabla.length > 0; else historialVacio\">\n    <app-lista-sesiones [sesiones]=\"sesionesTabla\" [coaches]=\"coaches\" [temas]=\"temas\"></app-lista-sesiones>\n  </ng-container>\n  <ng-template #historialVacio>\n    <mat-card class=\"historial-vacio\">\n      Historial de citas vacio\n    </mat-card>\n  </ng-template>\n</ng-container>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Moment } from 'moment';\nimport * as momentTimezone from 'moment-timezone';\nimport { combineLatest, Observable } from 'rxjs';\n\nimport { CargandoService } from '@app/shared/servicios/cargando.service';\nimport { CoachDTO } from '@coaching/modelo/coaches.model';\nimport {\n  DisponibilidadCoaches,\n  ModeradorDTO,\n} from '@coaching/modelo/disponibilidad-coach.model';\nimport { Proposito } from '@coaching/modelo/proposito.enum';\nimport { AgendarSesionAhorradorDTO } from '@coaching/modelo/sesion.model';\nimport { Tema } from '@coaching/modelo/temas.model';\nimport { CoachingApiService } from '@coaching/servicios/coaching-api.service';\nimport { environment } from '@env/environment';\n\nconst PROPOSITO_POR_TEMAS = {\n  'Solicitud de bloqueado.': Proposito.DISPOSICION_BLOQUEADO,\n};\n\n@Component({\n  selector: 'app-formulario-agendar-sesion',\n  templateUrl: './formulario-agendar-sesion.component.html',\n  styleUrls: ['./formulario-agendar-sesion.component.scss'],\n})\nexport class FormularioAgendarSesionComponent implements OnInit {\n  @Input() usuario: {\n    id: string;\n    pais: string;\n  };\n  @Input() bloquearBoton: boolean;\n  @Input() compartirDatos = false;\n  @Output() agendarSuccess = new EventEmitter();\n  @Output() agendarError = new EventEmitter();\n  @Output() horariosError = new EventEmitter();\n  minDate: any;\n  cargando = false;\n  horasConsultadas = false;\n  temas: Tema[] = [];\n  coaches: CoachDTO[] = [];\n  formulario: FormGroup;\n  horasDisponibles: DisponibilidadCoaches[] = [];\n  temas$: Observable<Tema[]>;\n  coaches$: Observable<CoachDTO[]>;\n  private actualizandoHoras: boolean;\n  private zonaHoraria = environment.zone;\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<any>,\n    private cargandoService: CargandoService,\n    private apiService: CoachingApiService\n  ) {}\n\n  ngOnInit(): void {\n    this.crearFormulario();\n    this.coaches$ = this.store.select('coaching', 'coaches');\n    this.temas$ = this.store.select('coaching', 'temas');\n    const zonaHoraria$ = this.store.select('coaching', 'zonaHoraria');\n    combineLatest([this.coaches$, this.temas$, zonaHoraria$]).subscribe(\n      (value) => {\n        this.formulario.reset();\n        this.horasDisponibles = [];\n        this.coaches = value[0];\n        this.temas = value[1];\n        this.zonaHoraria = value[2];\n        this.minDate = momentTimezone()\n          .tz(this.zonaHoraria)\n          .format('YYYY-MM-DD');\n      }\n    );\n  }\n\n  get fecha() {\n    return this.formulario.get('fecha');\n  }\n\n  get hora() {\n    return this.formulario.get('hora');\n  }\n\n  get coach() {\n    return this.formulario.get('coach');\n  }\n\n  get tema() {\n    return this.formulario.get('tema');\n  }\n\n  crearFormulario() {\n    this.formulario = this.fb.group({\n      fecha: this.fb.control('', [Validators.required]),\n      hora: this.fb.control('', [Validators.required]),\n      coach: this.fb.control(''),\n      tema: this.fb.control('', [Validators.required]),\n    });\n  }\n\n  disableFormulario() {\n    this.fecha.disable();\n    this.hora.disable();\n    this.coach.disable();\n    this.tema.disable();\n    this.formulario.disable();\n  }\n\n  enableFormulario() {\n    this.formulario.enable();\n    this.fecha.enable();\n    this.hora.enable();\n    this.coach.enable();\n    this.tema.enable();\n  }\n\n  reiniciarFormulario() {\n    this.cargando = false;\n    this.horasConsultadas = false;\n    this.horasDisponibles = [];\n    this.formulario.reset();\n    this.fecha.markAsPending();\n    this.hora.markAsPending();\n    this.tema.markAsPending();\n    this.coach.markAsPending();\n  }\n\n  enviarFormulario() {\n    this.cargando = true;\n    this.cargandoService.mostrarCargando();\n    if (this.formulario.valid) {\n      this.agendarCita();\n    } else {\n      this.cargando = false;\n      this.cargandoService.ocultarCargando();\n    }\n  }\n\n  consultarDisponibilidad() {\n    if (this.formulario.get('fecha').valid && !this.actualizandoHoras) {\n      this.horasDisponibles = [];\n      this.actualizandoHoras = true;\n      this.formulario.get('hora').setValue(null);\n      const fecha: Moment = this.formulario.getRawValue().fecha;\n      const coach: Moment = this.formulario.getRawValue().coach;\n      const fechaInicial = this.fechaIncialConZona(fecha);\n      this.horasConsultadas = false;\n      return this.apiService\n        .consultarDisponibilidad(\n          environment.envCountry,\n          fechaInicial,\n          encodeURIComponent(this.zonaHoraria),\n          coach ? { moderador: coach } : null\n        )\n        .then((disponibilidadCoach) => {\n          this.horasDisponibles = disponibilidadCoach.disponibilidades;\n        })\n        .catch((error) => {\n          console.error('Error consultando disponibilidad de horas', error);\n          this.horasDisponibles = [];\n          this.horariosError.emit(true);\n        })\n        .finally(() => {\n          this.horasConsultadas = true;\n          this.actualizandoHoras = false;\n        });\n    }\n  }\n\n  agendarCita() {\n    const disponibilidadCoaches: DisponibilidadCoaches = this.formulario.getRawValue()\n      .hora;\n    const tema: Tema = this.temas.find(\n      (temaItem) => temaItem.id === this.formulario.getRawValue().tema\n    );\n    const proposito =\n      PROPOSITO_POR_TEMAS[tema?.tema] || Proposito.COACHING_GENERAL;\n    const parametros: AgendarSesionAhorradorDTO = {\n      fechaFinal: disponibilidadCoaches.periodoTiempo.fin,\n      fechaInicial: disponibilidadCoaches.periodoTiempo.inicio,\n      idCoach:\n        this.formulario.getRawValue().coach ||\n        this.obtenerCoachAleatorio(disponibilidadCoaches.moderadoresDisponibles)\n          .id ||\n        '',\n      idAhorrador: this.usuario.id,\n      idPaisAhorrador: this.usuario.pais,\n      tema: tema ? tema.tema : null,\n      notas: '',\n      compartirDatosGastos: this.compartirDatos,\n      proposito,\n    };\n    return this.apiService\n      .agendar(parametros)\n      .then(() => {\n        this.actualizandoHoras = false;\n        this.agendarSuccess.emit(true);\n        this.reiniciarFormulario();\n      })\n      .catch((error) => {\n        console.error('Error agendando sesion', error);\n        this.agendarError.emit(true);\n      })\n      .finally(() => {\n        this.cargando = false;\n        this.cargandoService.ocultarCargando();\n      });\n  }\n\n  fechaConZonaSeleccionada(fecha: Date) {\n    return momentTimezone(fecha).tz(this.zonaHoraria).format('hh:mm a');\n  }\n\n  private fechaIncialConZona(fecha: Moment) {\n    return momentTimezone(fecha.format('YYYY-MM-DD HH:mm'))\n      .tz(this.zonaHoraria, true)\n      .startOf('day')\n      .format('YYYY-MM-DDTHH:mm:ss.SSSZ');\n  }\n\n  private obtenerCoachAleatorio(moderadoresDisponibles: ModeradorDTO[]) {\n    return moderadoresDisponibles[\n      Math.floor(Math.random() * moderadoresDisponibles.length)\n    ];\n  }\n}\n","<form [formGroup]=\"formulario\" autocomplete=\"off\" id=\"formularioCoach\" (ngSubmit)=\"enviarFormulario()\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group date-input\">\n        <label for=\"fecha\" class=\"control-label\">Fecha</label>\n        <mat-form-field appearance=\"outline\">\n          <input matInput formControlName=\"fecha\" id=\"fecha\" class=\"form-control\" [matDatepicker]=\"picker\"\n                 [min]=\"minDate\" placeholder=\"Selecciona la fecha\" (dateChange)=\"consultarDisponibilidad()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n        <app-mostrar-error-formularios id=\"erroresFecha\" [control]=\"fecha\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"fecha\" class=\"control-label\">Coach</label>\n        <mat-form-field appearance=\"outline\">\n          <mat-select placeholder=\"Selecciona un coach\" formControlName=\"coach\" id=\"coach\"\n                      (selectionChange)=\"consultarDisponibilidad()\">\n            <ng-container *ngIf=\"coaches$ | async as coaches\">\n              <mat-option *ngIf=\"coaches && coaches.length > 0\" [value]=\"null\" [attr.data-test-id]=\"'coachOpcionVacio'\">\n                ...\n              </mat-option>\n              <mat-option *ngFor=\"let c of coaches; let i = index\" [attr.data-test-id]=\"'coachOpcion'+ i\" [value]=\"c.id\">\n                {{c.nombreCompleto | titlecase}}\n              </mat-option>\n            </ng-container>\n          </mat-select>\n        </mat-form-field>\n        <app-mostrar-error-formularios id=\"erroresCoach\" [control]=\"coach\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n  </div>\n  <br>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"fecha\" class=\"control-label\">Hora</label>\n        <mat-form-field appearance=\"outline\">\n          <mat-select placeholder=\"Selecciona la hora\" formControlName=\"hora\" id=\"hora\">\n            <mat-option *ngFor=\"let h of horasDisponibles; let i = index\" [value]=\"h\" [attr.data-test-id]=\"'horaOpcion' + i\">\n              {{fechaConZonaSeleccionada(h.periodoTiempo.inicio)}} - {{fechaConZonaSeleccionada(h.periodoTiempo.fin)}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <app-mostrar-error-formularios id=\"erroreshora\" [control]=\"hora\"></app-mostrar-error-formularios>\n        <p class=\"error\" *ngIf=\"horasConsultadas && horasDisponibles && horasDisponibles.length === 0\">No se encontró ningún horario disponible</p>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label for=\"tema\" class=\"control-label\">Tema</label>\n        <mat-form-field appearance=\"outline\">\n          <mat-select placeholder=\"Selecciona un tema\" formControlName=\"tema\" id=\"tema\">\n            <mat-option *ngFor=\"let t of temas$ | async; let i = index\" [value]=\"t.id\" [attr.data-test-id]=\"'temaOpcion' + i\">\n              {{t.tema}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <app-mostrar-error-formularios id=\"errorestema\" [control]=\"tema\"></app-mostrar-error-formularios>\n      </div>\n    </div>\n  </div>\n  <br>\n  <div class=\"row\">\n    <div class=\"col-md-12 col-xs-12\">\n      <button [attr.id]=\"'botonContinuar'\" color=\"primary\" mat-button type=\"submit\"\n              [disabled]=\"!formulario.valid || cargando || bloquearBoton\" class=\"mat-button btns-primary align-r\">\n        Programar cita\n      </button>\n    </div>\n  </div>\n</form>\n","export class SesionAgendadas {\n  idSesion: string;\n  nombreAhorrador: string;\n  idAhorrador: string;\n  fechaInicio: Date;\n  fechaFin: Date;\n  fechaInicioMoment: any;\n  fechaFinMoment: any;\n  idCoach: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoachingComponent } from '@app/modulos/coaching/coaching.component';\nimport { DetalleCoachingUsuarioComponent } from './vista/detalle-coaching-usuario/detalle-coaching-usuario.component';\nimport { MaterialModule } from '@app/modulos/material/material.module';\nimport { DetalleSesionCoachGuard } from '@app/modulos/coaching/guards/detalle-sesion-coach.guard';\nimport { SesionesCoachGuard } from '@app/modulos/coaching/guards/sesiones-coach.guard';\nimport { IdCoachInvalidoComponent } from '@app/modulos/coaching/vista/id-coach-invalido/id-coach-invalido.component';\nimport { CoachInvalidoGuard } from '@app/modulos/coaching/guards/coach-invalido.guard';\nimport { ListaSesionesComponent } from './componentes/lista-sesiones/lista-sesiones.component';\nimport { ListaSesionesCardsComponent } from './componentes/lista-sesiones-cards/lista-sesiones-cards.component';\nimport { ListaCoachingUsuarioMensualComponent } from './vista/lista-coaching-usuario-mensual/lista-coaching-usuario-mensual.component';\nimport { ListaCoachingUsuarioMensualEdicionComponent } from './componentes/lista-coaching-usuario-mensual-edicion/lista-coaching-usuario-mensual-edicion.component';\nimport { MenuIzquierdoComponent } from '@app/modulos/coaching/componentes/menu-izquierdo/menu-izquierdo.component';\nimport { InicioComponent } from './vista/inicio/inicio.component';\nimport { ProgramarSesionesComponent } from './vista/programar-sesiones/programar-sesiones.component';\nimport { ListaSesionesCoachGuard } from '@app/modulos/coaching/guards/lista-sesiones-coach.guard';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ModalOtpSesionComponent } from './componentes/modal-otp-sesion/modal-otp-sesion.component';\nimport { DetalleBienestarFinancieroComponent } from './componentes/detalle-bienestar-financiero/detalle-bienestar-financiero.component';\nimport { LeadGenericoComponent } from '@app/modulos/coaching/vista/lead-generico/lead-generico.component';\nimport { HumanizePipe } from '@app/shared/pipes/HumanizePipe.pipe';\nimport { LeadsComponent } from '@app/modulos/coaching/vista/tareas/leads.component';\nimport { ModalComentarioTareaGenericaComponent } from '@app/modulos/coaching/componentes/modal-comentario-tarea-generica/modal-comentario-tarea-generica.component';\nimport { FormularioAgendarSesionComponent } from './componentes/formulario-agendar-sesion/formulario-agendar-sesion.component';\nimport { ListaSesionesVencidasComponent } from './componentes/lista-sesiones-vencidas/lista-sesiones-vencidas.component';\n\nconst routes: Routes = [\n  {\n    path: 'id-coach-invalido',\n    component: CoachingComponent,\n    canActivate: [CoachInvalidoGuard],\n    children: [\n      { path: '', component: IdCoachInvalidoComponent, pathMatch: 'full' },\n    ],\n  },\n  {\n    path: '',\n    component: CoachingComponent,\n    canActivate: [SesionesCoachGuard],\n    children: [\n      {\n        path: '',\n        component: InicioComponent,\n        canActivate: [SesionesCoachGuard, ListaSesionesCoachGuard],\n      },\n      {\n        path: 'sesion/:idSesion',\n        component: DetalleCoachingUsuarioComponent,\n        canActivate: [DetalleSesionCoachGuard],\n      },\n      { path: 'mensual', component: ListaCoachingUsuarioMensualComponent },\n      { path: 'programar-sesiones', component: ProgramarSesionesComponent },\n      { path: 'leads', component: LeadsComponent },\n      { path: 'detalle-generico/:id_lead', component: LeadGenericoComponent },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [\n    CoachingComponent,\n    DetalleCoachingUsuarioComponent,\n    IdCoachInvalidoComponent,\n    ListaSesionesComponent,\n    ListaSesionesCardsComponent,\n    ListaCoachingUsuarioMensualComponent,\n    ListaCoachingUsuarioMensualEdicionComponent,\n    MenuIzquierdoComponent,\n    InicioComponent,\n    ProgramarSesionesComponent,\n    ModalOtpSesionComponent,\n    DetalleBienestarFinancieroComponent,\n    LeadsComponent,\n    LeadGenericoComponent,\n    ModalComentarioTareaGenericaComponent,\n    FormularioAgendarSesionComponent,\n    ListaSesionesVencidasComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    ScrollingModule,\n    RouterModule.forChild(routes),\n  ],\n  providers: [\n    ListaSesionesCoachGuard,\n    DetalleSesionCoachGuard,\n    SesionesCoachGuard,\n    CoachInvalidoGuard,\n    DatePipe,\n    HumanizePipe,\n  ],\n  entryComponents: [\n    ListaCoachingUsuarioMensualEdicionComponent,\n    ModalOtpSesionComponent,\n    ModalComentarioTareaGenericaComponent,\n  ],\n})\nexport class CoachingModule {}\n","export enum Proposito {\n  DESCONOCIDO = 'DESCONOCIDO',\n  COACHING_GENERAL = 'COACHING_GENERAL',\n  DISPOSICION_BLOQUEADO = 'DISPOSICION_BLOQUEADO',\n}\n"]}