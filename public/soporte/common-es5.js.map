{"version":3,"sources":["webpack:///src/app/modulos/dashboard/modelo/enums/EstadosTarea.enum.ts","webpack:///src/app/modulos/dashboard/servicios/dashboard.service.ts","webpack:///src/app/shared/modelos/enums/paisAmbiente.enum.ts","webpack:///src/app/modulos/dashboard/modelo/enums/TipoTarea.enum.ts"],"names":["EstadoTarea","DashboardService","api","sanitizer","idTarea","get","data","post","estado","offset","limit","orderBy","order","toString","order_by","idDocumento","nombreDescarga","getBlob","Accept","then","respuesta","ejecutarDescargarDirecta","uuidConstanciaFiscal","url","window","URL","createObjectURL","safeURL","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","changingThisBreaksApplicationSecurity","enlaceTemporal","document","createElement","body","appendChild","style","href","download","click","revokeObjectURL","uuidEmpresa","idUsuario","tipo","periodo","queryParams","periodoFecha","estados","length","join","providedIn","PaisAmbiente","TipoTarea"],"mappings":"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","file":"common-es5.js","sourcesContent":["export enum EstadoTarea {\n  NO_VISIBLE = 0,\n  PENDIENTE = 1,\n  FINALIZADA = 2,\n  REINTENTADA = 3,\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { EstadoTarea } from '../modelo/enums/EstadosTarea.enum';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ITareasPaginadas } from '@app/modulos/dashboard/modelo/interfaces/ITareasPaginadas.type';\nimport { IRegistarDatosEmpresaMexicoRequest } from '@app/modulos/dashboard/modelo/interfaces/IRegistarDatosEmpresaMexicoRequest.type';\nimport { IFinalizarTareaDocumentalRequest } from '@app/modulos/dashboard/modelo/interfaces/IFinalizarTareaDocumentalRequest.type';\nimport { IFinalizarTareaGenerica } from '@app/modulos/dashboard/modelo/interfaces/IFinalizarTareaGenerica.type';\nimport { ITareaDocumental } from '@app/modulos/dashboard/modelo/interfaces/ITareaDocumental';\nimport { IFinalizarTareaRevisionListasNegrasRequest } from '@app/modulos/dashboard/modelo/interfaces/IFinalizarTareaRevisionListasNegrasRequest.type';\nimport { IListaTareasGenericas } from '@app/modulos/dashboard/modelo/interfaces/IListaTareaGenerica.type';\nimport { IListaTiposTareas } from '@app/modulos/dashboard/modelo/interfaces/IListaTiposTareas.type';\nimport { ApiService } from '@core/servicios/api.service';\nimport { ITareaRevisionDocumento } from '@dashboard/modelo/interfaces/ITareaRevisionDocumento.type';\nimport { fromPromise } from 'rxjs/internal-compatibility';\nimport {\n  IPayloadBloquearUsuario,\n  IPayloadDarDeBaja,\n} from '@dashboard/ahorrador/modelo/bloquear-ahorrador.interface';\nimport {\n  GenerarIncentivosDTO,\n  IncentivosGeneradosDTO,\n  InvitacionesDTO,\n} from '@dashboard/modelo/interfaces/Incentivos';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService {\n  constructor(private api: ApiService, private sanitizer: DomSanitizer) {}\n\n  consultarTareaPorId(idTarea): Observable<any> {\n    return fromPromise(this.api.get(`tarea/${idTarea}`));\n  }\n\n  consultarTareasDocumentalesPorId(\n    idTarea: number\n  ): Observable<ITareaDocumental> {\n    return fromPromise(\n      this.api.get(`tarea/documentales/${idTarea}/documentos`)\n    );\n  }\n\n  consultarEstadoTareaDocumental(idTarea: number): Observable<any> {\n    return fromPromise(this.api.get(`tarea/documentales/${idTarea}/estado`));\n  }\n\n  enviarComandoFinalizarTareaDocumental(\n    data: IFinalizarTareaDocumentalRequest\n  ): Promise<any> {\n    return this.api.post(`tarea/finalizar_tarea_documental`, data);\n  }\n\n  enviarComandoFinalizarTareaRevisionListasNegras(\n    data: IFinalizarTareaRevisionListasNegrasRequest\n  ): Promise<any> {\n    return this.api.post(`tarea/finalizar_tarea_empleado_bloqueado`, data);\n  }\n\n  consultarTareasPorEstado(\n    estado: EstadoTarea,\n    offset: number,\n    limit: number,\n    orderBy: string,\n    order: string\n  ): Promise<ITareasPaginadas> {\n    return this.api.get('tarea', {\n      estado: estado.toString(),\n      offset,\n      limit,\n      order_by: orderBy,\n      order,\n    });\n  }\n\n  consultarListaTiposRechazo(): Observable<any> {\n    return fromPromise(this.api.get(`tarea/documentales/tipo_rechazo`));\n  }\n\n  descargarDocumento(\n    idDocumento: string,\n    nombreDescarga: string\n  ): Observable<any> {\n    return fromPromise(\n      this.api\n        .getBlob(\n          `documento/${idDocumento}`,\n          {},\n          {\n            Accept: 'image/png,image/jpeg,application/pdf',\n          }\n        )\n        .then((respuesta) => {\n          this.ejecutarDescargarDirecta(respuesta, nombreDescarga);\n        })\n    );\n  }\n\n  descargarConstanciaFiscal(uuidConstanciaFiscal: string) {\n    return fromPromise(\n      this.api\n        .getBlob(\n          `documento/constancias_fiscales/${uuidConstanciaFiscal}/documento`,\n          {},\n          {\n            Accept: 'image/png,image/jpeg,application/pdf',\n          }\n        )\n        .then((respuesta) => {\n          this.ejecutarDescargarDirecta(respuesta, 'constancia-fiscales');\n        })\n    );\n  }\n\n  previsualizarArchivo(idDocumento: string): Observable<any> {\n    return fromPromise(\n      this.api\n        .getBlob(\n          `documento/${idDocumento}`,\n          {},\n          {\n            Accept: 'image/png,image/jpeg,application/pdf',\n          }\n        )\n        .then((respuesta) => {\n          const url = window.URL.createObjectURL(respuesta);\n          const safeURL: any = this.sanitizer.bypassSecurityTrustUrl(url);\n          return this.sanitizer.bypassSecurityTrustResourceUrl(\n            safeURL.changingThisBreaksApplicationSecurity\n          );\n        })\n    );\n  }\n\n  ejecutarDescargarDirecta(respuesta, nombreDescarga) {\n    const enlaceTemporal: any = document.createElement('a');\n    document.body.appendChild(enlaceTemporal);\n    enlaceTemporal.style = 'display: none';\n    const url = window.URL.createObjectURL(respuesta);\n    const safeURL: any = this.sanitizer.bypassSecurityTrustUrl(url);\n    enlaceTemporal.href = safeURL.changingThisBreaksApplicationSecurity;\n    enlaceTemporal.download = nombreDescarga;\n    enlaceTemporal.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n  consultarDatosEmpresaMexico(uuidEmpresa: string): Observable<any> {\n    return fromPromise(this.api.get(`empresa/mexico/${uuidEmpresa}`));\n  }\n\n  registrarDatosEmpresaMexico(\n    data: IRegistarDatosEmpresaMexicoRequest\n  ): Promise<any> {\n    return this.api.post(`empresa/mexico/registrar_datos`, data);\n  }\n\n  finalizarTareaGenerica(data: IFinalizarTareaGenerica): Promise<any> {\n    return this.api.post(`tarea/finalizar_tarea_generica`, data);\n  }\n\n  reintentarTareaGenerica(data: IFinalizarTareaGenerica): Promise<any> {\n    return this.api.post(`tarea/reintentar_tarea_generica`, data);\n  }\n\n  consultarNombreEmpresaDeUsuario(idUsuario: string): Observable<any> {\n    return fromPromise(\n      this.api.get(`empresa/empleados/${idUsuario}/nombre_empresa`)\n    );\n  }\n\n  consultarTareasPorTipo(\n    tipo: number,\n    periodo?: string\n  ): Observable<IListaTareasGenericas> {\n    const queryParams: any = periodo ? { periodo } : {};\n    return fromPromise(this.api.get(`tarea/tareas/tipo/${tipo}`, queryParams));\n  }\n\n  consultarTiposTareas(): Observable<IListaTiposTareas> {\n    return fromPromise(this.api.get(`tarea/tipos`));\n  }\n\n  consultarTareaRevisionDocumentos(\n    idTarea: number\n  ): Promise<ITareaRevisionDocumento> {\n    return this.api.get(`tarea/documentos/tarea/${idTarea}`);\n  }\n\n  consultarAhorrador(idUsuario: string) {\n    return fromPromise(this.api.get(`ahorro/ahorradores/${idUsuario}`));\n  }\n\n  actualizarEstadoUsuario(data: IPayloadBloquearUsuario): Promise<any> {\n    return this.api.post(`servicio/actualizar_estado_usuario`, data);\n  }\n\n  darDeBaja(data: IPayloadDarDeBaja): Promise<any> {\n    return this.api.post(`servicio/dar_de_baja`, data);\n  }\n\n  consultarInvitaciones(\n    periodoFecha: string,\n    estados?: string[]\n  ): Promise<InvitacionesDTO> {\n    let queryParams: any =\n      estados && estados.length > 0 ? { estados: estados.join(',') } : {};\n    queryParams = periodoFecha\n      ? { ...queryParams, periodo: periodoFecha }\n      : queryParams;\n    return this.api.get(`reto/invitaciones`, queryParams);\n  }\n\n  generarIncentivos(\n    data: GenerarIncentivosDTO\n  ): Promise<IncentivosGeneradosDTO> {\n    return this.api.post(`reto/generar_incentivos`, data);\n  }\n}\n","export enum PaisAmbiente {\n  CO = 'CO',\n  MX = 'MX',\n}\n","export enum TipoTarea {\n  DESCONOCIDO = -1,\n  TAREA_DOCUMENTAL = 1,\n  RECAUDO_NO_IDENTIFIADO = 2,\n  PREVENCION_LAVADO_DINERO_EMPRESA = 3,\n  PREVENCION_LAVADO_DINERO_PERSONA = 4,\n  REVERSION_APORTE_EXTRA = 5,\n  COMPRA_FONDOS_FALLIDA = 6,\n  VENTA_FONDOS_FALLIDA = 7,\n  ALTA_FONDOS_FALLIDA = 8,\n  COMPRA_FONDOS_FALLIDA_DESARROLLO = 9,\n  VENTA_FONDOS_FALLIDA_DESARROLLO = 10,\n  ALTA_FONDOS_FALLIDA_DESARROLLO = 11,\n  REVERSION_FALLIDA_DESARROLLO = 12,\n  CONCILIACION_NO_PROCESADA = 13,\n  REVISION_LISTAS_NEGRAS = 41,\n  TAREA_DOCUMENTAL_GENERICA = 999,\n}\n"]}